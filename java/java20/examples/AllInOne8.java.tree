(start_ (compilationUnit (ordinaryCompilationUnit (topLevelClassOrInterfaceDeclaration (classDeclaration (normalClassDeclaration (classModifier public) class (typeIdentifier Lambdas) (classBody { (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (result void) (methodDeclarator (identifier main) ( (formalParameterList (formalParameter (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier String)) (dims [ ])))) (variableDeclaratorId (identifier args)))) ))) (methodBody (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier List) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Name))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier list)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (unqualifiedClassInstanceCreationExpression new (classOrInterfaceTypeToInstantiate (identifier ArrayList) (typeArgumentsOrDiamond <>)) ( )))))))))))))))))))))))) ;)) (blockStatement (statement (forStatement (enhancedForStatement for ( (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Name))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier name))))) : (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier NAMES)))))))))))))))))) ) (statement (statementWithoutTrailingSubstatement (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (typeName (packageName (identifier list))) . (identifier add) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier name))))))))))))))))))) ))) ;))))) }))))))) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Predicate) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Name))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier pred1)) = (variableInitializer (expression (lambdaExpression (lambdaParameters (identifier name)) -> (lambdaBody (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "Sally") (pNNA . (identifier equals) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier name)) . (identifier firstName))))))))))))))))))) ))))))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Predicate) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Name))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier pred2)) = (variableInitializer (expression (lambdaExpression (lambdaParameters (identifier name)) -> (lambdaBody (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "Queue") (pNNA . (identifier equals) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier name)) . (identifier lastName))))))))))))))))))) ))))))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (typeName (packageName (identifier list))) . (identifier removeIf) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier pred1))) . (identifier or) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier pred2))))))))))))))))))) )))))))))))))))))))) ))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (methodName (unqualifiedMethodIdentifier printNames)) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "Names filtered by predicate:"))))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier list))) . (identifier toArray) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (arrayCreationExpression (arrayCreationExpressionWithoutInitializer new (classType (typeIdentifier Name)) (dimExprs (dimExpr [ (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier list))) . (identifier size) ( ))))))))))))))))))) ])))))))))))))))))))))) )))))))))))))))))))) ))) ;)))) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Comparator) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Name))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier com1)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier Comparator))) . (identifier comparing) ( (argumentList (expression (lambdaExpression (lambdaParameters ( (lambdaParameterList (lambdaParameter (lambdaParameterType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Name))))) (variableDeclaratorId (identifier name1)))) )) -> (lambdaBody (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier name1)) . (identifier lastName)))))))))))))))))))))) ) (pNNA . (identifier thenComparing) ( (argumentList (expression (lambdaExpression (lambdaParameters (identifier name2)) -> (lambdaBody (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier name2)) . (identifier firstName)))))))))))))))))))))) )))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Comparator) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Name))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier com2)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier Comparator))) . (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Name)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier String))))) >) (identifier comparing) ( (argumentList (expression (lambdaExpression (lambdaParameters (identifier name1)) -> (lambdaBody (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier name1)) . (identifier lastName)))))))))))))))))))))) ) (pNNA . (identifier thenComparing) ( (argumentList (expression (lambdaExpression (lambdaParameters (identifier name2)) -> (lambdaBody (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier name2)) . (identifier firstName)))))))))))))))))))))) )))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (assignment (leftHandSide (expressionName (identifier copy))) (assignmentOperator =) (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier Arrays))) . (identifier copyOf) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier NAMES)))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier NAMES)) . (identifier length))))))))))))))))))) ))))))))))))))))))))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (typeName (packageName (identifier Arrays))) . (identifier sort) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier copy)))))))))))))))))) , (expression (lambdaExpression (lambdaParameters ( (lambdaParameterList (identifier a) , (identifier b)) )) -> (lambdaBody (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier a))) . (identifier compareTo) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier b))))))))))))))))))) ))))))))))))))))))))))) ))) ;)))) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (methodName (unqualifiedMethodIdentifier printNames)) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "Names sorted with lambda expression:"))))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier copy))))))))))))))))))) ))) ;))))) }))))) })))) (topLevelClassOrInterfaceDeclaration (interfaceDeclaration (normalInterfaceDeclaration interface (typeIdentifier Formula) (interfaceBody { (interfaceMemberDeclaration (interfaceMethodDeclaration (methodHeader (result (unannType (unannPrimitiveType (numericType (floatingPointType double))))) (methodDeclarator (identifier calculate) ( (formalParameterList (formalParameter (unannType (unannPrimitiveType (numericType (integralType int)))) (variableDeclaratorId (identifier a)))) ))) (methodBody ;))) (interfaceMemberDeclaration (interfaceMethodDeclaration (interfaceMethodModifier default) (methodHeader (result (unannType (unannPrimitiveType (numericType (floatingPointType double))))) (methodDeclarator (identifier sqrt) ( (formalParameterList (formalParameter (unannType (unannPrimitiveType (numericType (integralType int)))) (variableDeclaratorId (identifier a)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier Math))) . (identifier sqrt) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier a))))))))))))))))))) ))))))))))))))))))) ;))))) })))) })))) (topLevelClassOrInterfaceDeclaration (classDeclaration (normalClassDeclaration (classModifier public) class (typeIdentifier For) (classBody { (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodHeader (result void) (methodDeclarator (identifier bar) ( ))) (methodBody (block { (blockStatements (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAge)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (expressionName (identifier Computer)) :: (identifier getAge))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Integer))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier computerAge)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier getAge))) . (identifier apply) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier c1))))))))))))))))))) ))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAgeAlt)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray this (pNNA :: (identifier getAge)))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAgeAlt2)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier MyClass))) . this (pNNA :: (identifier getAge)))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAgeAlt3)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (methodName (unqualifiedMethodIdentifier generate)) ( ) (pNNA :: (identifier getAge)))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAgeAlt4)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier MyClass))) . (identifier generate) ( ) (pNNA :: (identifier getAge)))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAgeAlt5)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier MyClass))) . (identifier twice) ( ) (pNNA . (identifier nested) ( ) (pNNA :: (identifier getAge))))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAgeAlt6)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (methodName (unqualifiedMethodIdentifier twice)) ( ) (pNNA . (identifier nested) ( ) (pNNA :: (identifier getAge))))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier getAgeAlt7)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray this (pNNA . (identifier singletonInstanceMethod) (pNNA :: (identifier get))))))))))))))))))))))))) ;)) (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (methodName (unqualifiedMethodIdentifier autodetect)) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray this (pNNA . (identifier beans)))))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray ( (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (classOrInterfaceType (typeIdentifier AutodetectCapableMBeanInfoAssembler))) ) (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray this (pNNA . (identifier assembler)))))))))))))))))))))) ) (pNNA :: (identifier includeBean))))))))))))))))))))) ))) ;)))) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier TriFunction) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier String)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Computer))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier c6Function)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (classType (typeIdentifier Computer)) :: new)))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Computer))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier c3)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier c6Function))) . (identifier apply) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal 2008))))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "black"))))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal 90)))))))))))))))))))) ))))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Function) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier Integer)))) , (typeArgument (referenceType (arrayType (classType (typeIdentifier Computer)) (dims [ ]))))) >))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier computerCreator)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (arrayType (classType (typeIdentifier Computer)) (dims [ ])) :: new)))))))))))))))))))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (localVariableType (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier Computer)) (dims [ ]))))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier computerArray)) = (variableInitializer (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (typeName (packageName (identifier computerCreator))) . (identifier apply) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal 5)))))))))))))))))))) ))))))))))))))))))))))) ;))) }))))) })))) (topLevelClassOrInterfaceDeclaration (classDeclaration (normalClassDeclaration (classModifier public) class (typeIdentifier Annotations) (classBody { (classBodyDeclaration (classMemberDeclaration (fieldDeclaration (fieldModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Valid)))))) (fieldModifier private) (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier List) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (annotation (markerAnnotation @ (typeName (packageName (identifier NotNull))))) (typeIdentifier String))))) >)))) (variableDeclaratorList (variableDeclarator (variableDeclaratorId (identifier property)))) ;))) })))) (topLevelClassOrInterfaceDeclaration (interfaceDeclaration (normalInterfaceDeclaration (interfaceModifier public) interface (typeIdentifier CallableProcessingInterceptor) (interfaceBody { (interfaceMemberDeclaration (interfaceMethodDeclaration (interfaceMethodModifier default) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeIdentifier T))) >) (result void) (methodDeclarator (identifier beforeConcurrentHandling) ( (formalParameterList (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier NativeWebRequest)))) (variableDeclaratorId (identifier request))) , (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Callable) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier T))))) >)))) (variableDeclaratorId (identifier task)))) )) (throwsT throws (exceptionTypeList (exceptionType (classType (typeIdentifier Exception)))))) (methodBody (block { })))) })))) (topLevelClassOrInterfaceDeclaration (interfaceDeclaration (normalInterfaceDeclaration (interfaceModifier (annotation (markerAnnotation @ (typeName (packageName (identifier FunctionalInterface)))))) (interfaceModifier public) interface (typeIdentifier RouterFunction) (typeParameters < (typeParameterList (typeParameter (typeIdentifier T) (typeBound extends (typeVariable (typeIdentifier ServerResponse))))) >) (interfaceBody { (interfaceMemberDeclaration (interfaceMethodDeclaration (interfaceMethodModifier default) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeIdentifier S) (typeBound extends (typeVariable (typeIdentifier ServerResponse))))) >) (result (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier RouterFunction) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier S))))) >))))) (methodDeclarator (identifier filter) ( (formalParameterList (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier HandlerFilterFunction) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (typeIdentifier T)))) , (typeArgument (referenceType (classOrInterfaceType (typeIdentifier S))))) >)))) (variableDeclaratorId (identifier filterFunction)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (unqualifiedClassInstanceCreationExpression new (classOrInterfaceTypeToInstantiate (identifier RouterFunctions) . (identifier FilteredRouterFunction) (typeArgumentsOrDiamond <>)) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray this)))))))))))))))))) , (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (identifier filterFunction))))))))))))))))))) )))))))))))))))))))) ;))))) })))) })))) (topLevelClassOrInterfaceDeclaration (classDeclaration (normalClassDeclaration class (typeIdentifier Unicode) (classBody { (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (result void) (methodDeclarator (identifier main) ( (formalParameterList (formalParameter (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier String)) (dims [ ])))) (variableDeclaratorId (identifier args)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (expressionStatement (statementExpression (methodInvocation (typeName (packageName (identifier System) . (packageName (identifier out)))) . (identifier println) ( (argumentList (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "A = \uuu0041")))))))))))))))))))) ))) ;))))) }))))) })))) (topLevelClassOrInterfaceDeclaration (classDeclaration (normalClassDeclaration (classModifier public) class (typeIdentifier Annos) (classBody { (classBodyDeclaration (classMemberDeclaration (interfaceDeclaration (annotationInterfaceDeclaration (interfaceModifier public) @ interface (typeIdentifier Dummy4) (annotationInterfaceBody { (annotationInterfaceMemberDeclaration (annotationInterfaceElementDeclaration (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier String)) (dims [ ])))) (identifier value) ( ) ;)) }))))) (classBodyDeclaration (classMemberDeclaration (interfaceDeclaration (annotationInterfaceDeclaration (interfaceModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Documented)))))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Retention))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier RetentionPolicy)) . (identifier RUNTIME))))))))))))))))) )))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Target))) ( (elementValue (elementValueArrayInitializer { (elementValueList (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_USE))))))))))))))))) , (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_PARAMETER)))))))))))))))))) })) )))) (interfaceModifier public) @ interface (typeIdentifier Dummy03) (annotationInterfaceBody { (annotationInterfaceMemberDeclaration (annotationInterfaceElementDeclaration (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier Dummy3)) (dims [ ])))) (identifier value) ( ) ;)) }))))) (classBodyDeclaration (classMemberDeclaration (interfaceDeclaration (annotationInterfaceDeclaration (interfaceModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Documented)))))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Retention))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier RetentionPolicy)) . (identifier RUNTIME))))))))))))))))) )))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Target))) ( (elementValue (elementValueArrayInitializer { (elementValueList (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_USE))))))))))))))))) , (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_PARAMETER)))))))))))))))))) })) )))) (interfaceModifier public) @ interface (typeIdentifier Dummy01) (annotationInterfaceBody { (annotationInterfaceMemberDeclaration (annotationInterfaceElementDeclaration (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier Dummy1)) (dims [ ])))) (identifier value) ( ) ;)) }))))) (classBodyDeclaration (classMemberDeclaration (interfaceDeclaration (annotationInterfaceDeclaration (interfaceModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Documented)))))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Retention))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier RetentionPolicy)) . (identifier RUNTIME))))))))))))))))) )))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Target))) ( (elementValue (elementValueArrayInitializer { (elementValueList (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_USE))))))))))))))))) , (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_PARAMETER)))))))))))))))))) })) )))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Repeatable))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (classLiteral (typeName (packageName (identifier Dummy01))) . class)))))))))))))))))) )))) (interfaceModifier public) @ interface (typeIdentifier Dummy1) (annotationInterfaceBody { }))))) (classBodyDeclaration (classMemberDeclaration (interfaceDeclaration (annotationInterfaceDeclaration (interfaceModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Documented)))))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Retention))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier RetentionPolicy)) . (identifier RUNTIME))))))))))))))))) )))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Target))) ( (elementValue (elementValueArrayInitializer { (elementValueList (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_USE))))))))))))))))) , (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_PARAMETER)))))))))))))))))) })) )))) (interfaceModifier public) @ interface (typeIdentifier Dummy2) (annotationInterfaceBody { }))))) (classBodyDeclaration (classMemberDeclaration (interfaceDeclaration (annotationInterfaceDeclaration (interfaceModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Documented)))))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Retention))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier RetentionPolicy)) . (identifier RUNTIME))))))))))))))))) )))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Target))) ( (elementValue (elementValueArrayInitializer { (elementValueList (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_USE))))))))))))))))) , (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (expressionName (ambiguousName (identifier ElementType)) . (identifier TYPE_PARAMETER)))))))))))))))))) })) )))) (interfaceModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Repeatable))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (classLiteral (typeName (packageName (identifier Dummy03))) . class)))))))))))))))))) )))) (interfaceModifier public) @ interface (typeIdentifier Dummy3) (annotationInterfaceBody { }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Dummy4))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "#1")))))))))))))))))) )))) (methodModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1)))))) (methodModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeIdentifier T) (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy2))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (typeIdentifier Object))))) >) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (result (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier T)) (dims (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) [ ]))))) (methodDeclarator (identifier foo) ( (formalParameterList (formalParameter (variableModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1)))))) (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier T)) (dims (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy2))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) [ ])))) (variableDeclaratorId (identifier arr))) , (formalParameter (variableArityParameter (variableModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1)))))) (variableModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier T)))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) ... (identifier t)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (arrayType (classType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (typeIdentifier T)) (dims [ ]))) ) (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal null))))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodModifier (annotation (singleElementAnnotation @ (typeName (packageName (identifier Dummy4))) ( (elementValue (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal "")))))))))))))))))) )))) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1)))))) (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy2)))))) (typeIdentifier T) (typeBound extends (typeVariable (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (typeIdentifier Object))))) >) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (result (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier T)) (dims (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) [ ] (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy2))))) [ ]))))) (methodDeclarator (identifier foo2) ( (formalParameterList (formalParameter (variableModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1)))))) (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier T)) (dims (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy2))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) [ ] (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) [ ])))) (variableDeclaratorId (identifier arr)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (arrayType (classType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy2))))) (typeIdentifier T)) (dims [ ] (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy2))))) [ ]))) ) (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal null))))))))))))))))))))) ;))))) }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration class (typeIdentifier Gen) (typeParameters < (typeParameterList (typeParameter (typeIdentifier T))) >) (classBody { }))))) (classBodyDeclaration (classMemberDeclaration (classDeclaration (normalClassDeclaration class (typeIdentifier A) (typeParameters < (typeParameterList (typeParameter (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1)))))) (typeIdentifier T) (typeBound extends (classOrInterfaceType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (typeIdentifier Gen) (typeArguments < (typeArgumentList (typeArgument (referenceType (classOrInterfaceType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (typeIdentifier T))))) >))))) >) (classBody { }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (typeIdentifier T))) >) (result void) (methodDeclarator (identifier foo3) ( (formalParameterList (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier T)))) (variableDeclaratorId (identifier t))) , (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Gen) (typeArguments < (typeArgumentList (typeArgument (wildcard (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) ? (wildcardBounds super (referenceType (classOrInterfaceType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (typeIdentifier T))))))) >)))) (variableDeclaratorId (identifier c)))) ))) (methodBody (block { }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (typeIdentifier T))) >) (result void) (methodDeclarator (identifier foo33) ( (formalParameterList (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier T)))) (variableDeclaratorId (identifier t))) , (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Gen) (typeArguments < (typeArgumentList (typeArgument (wildcard (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) ?))) >)))) (variableDeclaratorId (identifier c)))) ))) (methodBody (block { }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (typeIdentifier T)) , (typeParameter (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1)))))) (typeIdentifier S))) >) (result void) (methodDeclarator (identifier foo333) ( (formalParameterList (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier T)))) (variableDeclaratorId (identifier t))) , (formalParameter (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier Gen) (typeArguments < (typeArgumentList (typeArgument (referenceType (arrayType (classType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (typeIdentifier T)) (dims (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) [ ]))))) >)))) (variableDeclaratorId (identifier c)))) ))) (methodBody (block { }))))) (classBodyDeclaration (classMemberDeclaration (methodDeclaration (methodModifier public) (methodModifier static) (methodModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (methodHeader (typeParameters < (typeParameterList (typeParameter (typeParameterModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (typeIdentifier T) (typeBound extends (classOrInterfaceType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (typeIdentifier Gen) (typeArguments < (typeArgumentList (typeArgument (wildcard (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) ? (wildcardBounds super (referenceType (classOrInterfaceType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy1))))) (typeIdentifier T))))))) >))))) >) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (result (unannType (unannReferenceType (unannArrayType (unannClassOrInterfaceType (typeIdentifier T)) (dims (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) [ ]))))) (methodDeclarator (identifier f) ( (formalParameterList (formalParameter (variableArityParameter (variableModifier (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3)))))) (unannType (unannReferenceType (unannClassOrInterfaceType (typeIdentifier T)))) (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) ... (identifier t)))) ))) (methodBody (block { (blockStatements (blockStatement (statement (statementWithoutTrailingSubstatement (returnStatement return (expression (assignmentExpression (conditionalExpression (conditionalOrExpression (conditionalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (unaryExpression (unaryExpressionNotPlusMinus (castExpression ( (referenceType (arrayType (classType (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) (typeIdentifier T)) (dims (annotation (markerAnnotation @ (typeName (packageName (identifier Dummy3))))) [ ]))) ) (unaryExpressionNotPlusMinus (postfixExpression (primary (primaryNoNewArray (literal null))))))))))))))))))))) ;))))) }))))) })))))) <EOF>)