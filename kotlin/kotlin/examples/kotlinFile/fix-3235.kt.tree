(kotlinFile (preamble packageHeader importList) (topLevelObject (classDeclaration (modifierList (modifier (inheritanceModifier open))) class (simpleIdentifier CC) (typeParameters < (typeParameter (simpleIdentifier T)) >) (classBody { \n (classMemberDeclaration (functionDeclaration (modifierList (modifier (inheritanceModifier open))) fun (identifier (simpleIdentifier f)) (functionValueParameters ( )) (functionBody (block { statements }))) (anysemi \n)) }))) (anysemi \n) (anysemi \n) (topLevelObject (functionDeclaration fun (identifier (simpleIdentifier fo)) (functionValueParameters ( (functionValueParameter (parameter (simpleIdentifier c) : (type (typeReference (userType (simpleUserType (simpleIdentifier CC) (typeArguments < (typeProjection (type (typeReference (userType (simpleUserType (simpleIdentifier Int)))))) >))))))) )) (functionBody (block { (statements (anysemi \n) (statement (blockLevelExpression (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (simpleIdentifier c)) (postfixUnaryOperation (memberAccessOperator .) (postfixUnaryExpression (atomicExpression (simpleIdentifier f)) (postfixUnaryOperation (callSuffix (valueArguments ( )))))))))))))))))))))) (anysemi \n)) })))) (anysemi \n) (anysemi \n) (topLevelObject (classDeclaration class (simpleIdentifier CCC) (classBody { \n (classMemberDeclaration (functionDeclaration fun (identifier (simpleIdentifier dff)) (functionValueParameters ( )) (functionBody (block { (statements (anysemi \n) (statement (blockLevelExpression (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (simpleIdentifier fo)) (postfixUnaryOperation (callSuffix (valueArguments ( (valueArgument (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (objectLiteral object : (delegationSpecifiers (delegationSpecifier (constructorInvocation (userType (simpleUserType (simpleIdentifier CC) (typeArguments < (typeProjection (type (typeReference (userType (simpleUserType (simpleIdentifier Int)))))) >))) (callSuffix (valueArguments ( )) (annotatedLambda (functionLiteral { (statements (statement (blockLevelExpression (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (simpleIdentifier override)) (postfixUnaryOperation (callSuffix (annotatedLambda (unescapedAnnotation (identifier (simpleIdentifier fun))) (unescapedAnnotation (identifier (simpleIdentifier f)) (valueArguments ( ))) (functionLiteral { statements }))))))))))))))))))))) }))))))))))))))))))))))) )))))))))))))))))))) (anysemi \n)) }))) (anysemi \n)) }))) (anysemi \n) <EOF>)