(kotlinFile (preamble packageHeader importList) (topLevelObject (classDeclaration interface (simpleIdentifier IG) (typeParameters < (typeParameter (simpleIdentifier T)) , (typeParameter (simpleIdentifier S)) , (typeParameter (simpleIdentifier U)) >) (classBody { \n (classMemberDeclaration (functionDeclaration fun (identifier (simpleIdentifier f)) (functionValueParameters ( (functionValueParameter (parameter (simpleIdentifier t) : (type (typeReference (userType (simpleUserType (simpleIdentifier T))))))) ))) (anysemi \n)) }))) (anysemi \n) (anysemi \n) (topLevelObject (functionDeclaration fun (typeParameters < (typeParameter (simpleIdentifier D)) >) (receiverType (typeReference (userType (simpleUserType (simpleIdentifier IG) (typeArguments < (typeProjection (type (typeReference (userType (simpleUserType (simpleIdentifier D)))))) , (typeProjection *) , (typeProjection *) >))))) . (identifier (simpleIdentifier f)) (functionValueParameters ( (functionValueParameter (parameter (simpleIdentifier d) : (type (typeReference (userType (simpleUserType (simpleIdentifier D))))))) )) : (type (nullableType (typeReference (userType (simpleUserType (simpleIdentifier Any)))) ?)) (functionBody (block { (statements (anysemi \n) (statement (blockLevelExpression (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (jumpExpression return (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (literalConstant null)))))))))))))))))))))))))))))))))) (anysemi \n)) })))) (anysemi \n) <EOF>)