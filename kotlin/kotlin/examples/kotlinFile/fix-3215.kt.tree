(kotlinFile (preamble packageHeader importList) (topLevelObject (classDeclaration interface (simpleIdentifier I1) (typeParameters < (typeParameter (simpleIdentifier T) : (type (typeReference (userType (simpleUserType (simpleIdentifier Any)))))) >) (classBody { \n \n (classMemberDeclaration (classDeclaration interface (simpleIdentifier I2) (typeParameters < (typeParameter (simpleIdentifier S) : (type (typeReference (userType (simpleUserType (simpleIdentifier Any)))))) >) (classBody { \n (classMemberDeclaration (functionDeclaration fun (identifier (simpleIdentifier g)) (functionValueParameters ( ))) (anysemi \n)) })) (anysemi \n) (anysemi \n)) (classMemberDeclaration (functionDeclaration fun (identifier (simpleIdentifier f)) (functionValueParameters ( ))) (anysemi \n)) }))) (anysemi \n) (anysemi \n) (topLevelObject (classDeclaration class (simpleIdentifier C) (classBody { \n \n (classMemberDeclaration (functionDeclaration fun (typeParameters < (typeParameter (simpleIdentifier T) : (type (typeReference (userType (simpleUserType (simpleIdentifier Any)))))) >) (receiverType (typeReference (userType (simpleUserType (simpleIdentifier I1) (typeArguments < (typeProjection (type (typeReference (userType (simpleUserType (simpleIdentifier T)))))) >))))) . (identifier (simpleIdentifier f)) (functionValueParameters ( (functionValueParameter (parameter (simpleIdentifier value) : (type (nullableType (typeReference (userType (simpleUserType (simpleIdentifier Any)))) ?)))) )) : (type (nullableType (typeReference (userType (simpleUserType (simpleIdentifier Any)))) ?)) (functionBody (block { (statements (anysemi \n) (statement (blockLevelExpression (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (jumpExpression return (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (literalConstant null)))))))))))))))))))))))))))))))))) (anysemi \n)) }))) (anysemi \n) (anysemi \n)) (classMemberDeclaration (functionDeclaration fun (typeParameters < (typeParameter (simpleIdentifier S) : (type (typeReference (userType (simpleUserType (simpleIdentifier Any)))))) >) (receiverType (typeReference (userType (simpleUserType (simpleIdentifier I1)) . (simpleUserType (simpleIdentifier I2) (typeArguments < (typeProjection (type (typeReference (userType (simpleUserType (simpleIdentifier S)))))) >))))) . (identifier (simpleIdentifier g)) (functionValueParameters ( (functionValueParameter (parameter (simpleIdentifier value) : (type (nullableType (typeReference (userType (simpleUserType (simpleIdentifier Any)))) ?)))) )) : (type (nullableType (typeReference (userType (simpleUserType (simpleIdentifier Any)))) ?)) (functionBody (block { (statements (anysemi \n) (statement (blockLevelExpression (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (jumpExpression return (expression (disjunction (conjunction (equalityComparison (comparison (namedInfix (elvisExpression (infixFunctionCall (rangeExpression (additiveExpression (multiplicativeExpression (typeRHS (prefixUnaryExpression (postfixUnaryExpression (atomicExpression (literalConstant null)))))))))))))))))))))))))))))))))) (anysemi \n)) }))) (anysemi \n)) }))) (anysemi \n) <EOF>)