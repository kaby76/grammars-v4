(top_level (statements (statements_impl (statement (declaration (class_declaration class (class_name (declaration_identifier X)) (class_body { (class_member (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (declaration_identifier (keyword_as_identifier_in_declarations optional))) (type_annotation : (type_ (type_ (type_identifier (type_name (declaration_identifier X)))) !)))))))) (class_member (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (declaration_identifier (keyword_as_identifier_in_declarations lazy))) (type_annotation : (type_ (type_ (type_identifier (type_name (declaration_identifier X)))) !)))))))) (class_member (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (declaration_identifier (keyword_as_identifier_in_declarations dynamic))) (type_annotation : (type_ (type_ (type_identifier (type_name (declaration_identifier X)))) !)))))))) (class_member (declaration (function_declaration (function_head func) (function_name (declaration_identifier keywordsAsVars)) (function_signature (parameter_clause ( (parameter_list (parameter (local_parameter_name (label_identifier argument)) (type_annotation : (type_ (type_identifier (type_name (declaration_identifier String))))))) ))) (function_body (code_block { }))))) })))) (statements_impl (statement (declaration (class_declaration class (class_name (declaration_identifier Y)) (type_inheritance_clause : (type_inheritance_list (type_identifier (type_name (declaration_identifier X))))) (class_body { (class_member (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier override)) func) (function_name (declaration_identifier keywordsAsVars)) (function_signature (parameter_clause ( (parameter_list (parameter (local_parameter_name (label_identifier argument)) (type_annotation : (type_ (type_identifier (type_name (declaration_identifier String))))))) ))) (function_body (code_block { (statements (statements_impl (statement (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (declaration_identifier (keyword_as_identifier_in_declarations optional)))) . (declaration_identifier (keyword_as_identifier_in_declarations lazy))) . (declaration_identifier (keyword_as_identifier_in_declarations dynamic)))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head =))) (prefix_expression (postfix_expression (postfix_expression (primary_expression (declaration_identifier X))) (function_call_argument_clause ( )))))))))) }))))) }))))))) <EOF>)