(top_level (statement (declaration (import_declaration import (import_path (import_path_identifier (identifier UIKit)))))) (statement (declaration (import_declaration import (import_path (import_path_identifier (identifier SpriteKit)))))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier SKNode))) (extension_body { (declarations (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier class)) func) (function_name (identifier unarchiveFromFile)) (function_signature (parameter_clauses (parameter_clause ( (parameter_list (parameter (local_parameter_name (identifier file)) (type_annotation : (type_ (type_identifier (type_name (identifier NSString))))))) ))) (function_result (arrow_operator - >) (type_ (type_ (type_identifier (type_name (identifier SKNode)))) ?))) (function_body (code_block { (statements (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier path))) (initializer (assignment_operator =) (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier NSBundle))) . (identifier mainBundle)) (parenthesized_expression ( ))) . (identifier pathForResource)) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (primary_expression (identifier file)))))) , (expression_element (identifier ofType) : (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal "sks"))))))))) ))))))))))) (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier sceneData))) (initializer (assignment_operator =) (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier NSData))) . (identifier dataWithContentsOfFile)) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (primary_expression (identifier path)))))) , (expression_element (identifier options) : (expression (prefix_expression (postfix_expression (primary_expression (implicit_member_expression . (identifier DataReadingMappedIfSafe))))))) , (expression_element (identifier error) : (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (nil_literal nil))))))))) ))))))))))) (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier archiver))) (initializer (assignment_operator =) (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier NSKeyedUnarchiver))) (parenthesized_expression ( (expression_element_list (expression_element (identifier forReadingWithData) : (expression (prefix_expression (postfix_expression (primary_expression (identifier sceneData))))))) ))))))))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier archiver))) . (identifier setClass)) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (self_expression self))) . (identifier classForKeyedUnarchiver)) (parenthesized_expression ( )))))) , (expression_element (identifier forClassName) : (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal "SKScene"))))))))) )))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier scene))) (initializer (assignment_operator =) (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier archiver))) . (identifier decodeObjectForKey)) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (primary_expression (identifier NSKeyedArchiveRootObjectKey))))))) )))) (binary_expressions (binary_expression (type_casting_operator as (type_ (type_identifier (type_name (identifier GameScene)))))))))))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier archiver))) . (identifier finishDecoding)) (parenthesized_expression ( )))))) (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (identifier scene))))))))) }))))) })))) (statement (declaration (class_declaration class (class_name (identifier GameViewController)) (type_inheritance_clause : (type_inheritance_list (type_identifier (type_name (identifier UIViewController))))) (class_body { (declarations (declaration (function_declaration (function_head (attributes (attribute (attribute_name (identifier (context_sensitive_keyword override))))) func) (function_name (identifier viewDidLoad)) (function_signature (parameter_clauses (parameter_clause ( )))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (superclass_expression (superclass_method_expression super . (identifier viewDidLoad))))) (parenthesized_expression ( )))))) (statement (branch_statement (if_statement if (condition_clause (condition_list (condition (optional_binding_condition (optional_binding_head let (pattern (identifier_pattern (identifier scene))) (initializer (assignment_operator =) (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier GameScene))) . (identifier unarchiveFromFile)) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal "GameScene"))))))))) )))) (binary_expressions (binary_expression (type_casting_operator as ? (type_ (type_identifier (type_name (identifier GameScene)))))))))))))) (code_block { (statements (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier skView))) (initializer (assignment_operator =) (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (self_expression self))) . (identifier view))) (binary_expressions (binary_expression (type_casting_operator as (type_ (type_identifier (type_name (identifier SKView)))))))))))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier skView))) . (identifier showsFPS))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (boolean_literal true)))))))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier skView))) . (identifier showsNodeCount))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (boolean_literal true)))))))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier skView))) . (identifier ignoresSiblingOrder))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (boolean_literal true)))))))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier scene))) . (identifier scaleMode))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head =))) (prefix_expression (postfix_expression (primary_expression (implicit_member_expression . (identifier AspectFill))))))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier skView))) . (identifier presentScene)) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (primary_expression (identifier scene))))))) ))))))) }))))) })))) (declaration (function_declaration (function_head (attributes (attribute (attribute_name (identifier (context_sensitive_keyword override))))) func) (function_name (identifier shouldAutorotate)) (function_signature (parameter_clauses (parameter_clause ( ))) (function_result (arrow_operator - >) (type_ (type_identifier (type_name (identifier Bool)))))) (function_body (code_block { (statements (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (boolean_literal true))))))))))) })))) (declaration (function_declaration (function_head (attributes (attribute (attribute_name (identifier (context_sensitive_keyword override))))) func) (function_name (identifier supportedInterfaceOrientations)) (function_signature (parameter_clauses (parameter_clause ( ))) (function_result (arrow_operator - >) (type_ (type_identifier (type_name (identifier Int)))))) (function_body (code_block { (statements (statement (branch_statement (if_statement if (condition_clause (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier UIDevice))) . (identifier currentDevice)) (parenthesized_expression ( ))) . (identifier userInterfaceIdiom))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head =) (operator_character (operator_head =)))) (prefix_expression (postfix_expression (primary_expression (implicit_member_expression . (identifier Phone))))))))) (code_block { (statements (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier Int))) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier UIInterfaceOrientationMask))) . (identifier AllButUpsideDown)) . (identifier toRaw)) (parenthesized_expression ( ))))))) ))))))))) }) (else_clause else (code_block { (statements (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier Int))) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (postfix_expression (postfix_expression (postfix_expression (primary_expression (identifier UIInterfaceOrientationMask))) . (identifier All)) . (identifier toRaw)) (parenthesized_expression ( ))))))) ))))))))) })))))) })))) (declaration (function_declaration (function_head (attributes (attribute (attribute_name (identifier (context_sensitive_keyword override))))) func) (function_name (identifier didReceiveMemoryWarning)) (function_signature (parameter_clauses (parameter_clause ( )))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (superclass_expression (superclass_method_expression super . (identifier didReceiveMemoryWarning))))) (parenthesized_expression ( ))))))) }))))) })))) <EOF>)