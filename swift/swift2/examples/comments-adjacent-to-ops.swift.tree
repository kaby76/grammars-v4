(top_level (statement (expression (prefix_expression (postfix_expression (primary_expression (identifier (context_sensitive_keyword infix))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (identifier (context_sensitive_keyword operator))))))) (statement (expression (prefix_expression (prefix_operator (operator_ (operator_head /) (operator_character (operator_head +)))) (postfix_expression (primary_expression (closure_expression { })))))) (statement (declaration (function_declaration (function_head func) (function_name (operator_ (operator_head /) (operator_character (operator_head +)))) (function_signature (parameter_clauses (parameter_clause ( (parameter_list (parameter (local_parameter_name (identifier a)) (type_annotation : (type_ (type_identifier (type_name (identifier Int)))))) , (parameter (local_parameter_name (identifier b)) (type_annotation : (type_ (type_identifier (type_name (identifier Int))))))) ))) (function_result (arrow_operator - >) (type_ (type_identifier (type_name (identifier Int)))))) (function_body (code_block { (statements (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (identifier a))))))))) }))))) (statement (expression (prefix_expression (postfix_expression (postfix_expression (primary_expression (identifier print))) (parenthesized_expression ( (expression_element_list (expression_element (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 2))))))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head /) (operator_character (operator_head +)))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 3)))))))))))) )))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 3))))))) (binary_expressions (binary_expression (binary_operator (operator_ (operator_head +))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 4))))))))))) <EOF>)