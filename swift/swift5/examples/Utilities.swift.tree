(top_level (statements (statement (declaration (import_declaration import (import_path (import_path_identifier (identifier Foundation)))))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier StringProtocol))) (extension_body { (extension_members (extension_member (declaration (variable_declaration (variable_declaration_head var) (variable_name (identifier string)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String)))))) (getter_setter_block (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier String))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (identifier self))) )))))))) })))))) })))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier StaticString))) (extension_body { (extension_members (extension_member (declaration (variable_declaration (variable_declaration_head var) (variable_name (identifier string)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String)))))) (getter_setter_block (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " \( (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier self)))))) ) ")))))))))) })))))) })))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier String))) (extension_body { (extension_members (extension_member (declaration (variable_declaration (variable_declaration_head var) (variable_name (identifier range)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Range)) (generic_argument_clause < (generic_argument_list (generic_argument (type (protocol_composition_type (type_identifier (type_name (identifier Index))))))) >))))) (getter_setter_block (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier startIndex))))) (binary_expressions (binary_expression (binary_operator (operator (dot_operator_head .) (dot_operator_characters (dot_operator_character .) (dot_operator_character (operator_character (operator_head <)))))) (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier endIndex)))))))))) }))))) (extension_member (declaration (variable_declaration (variable_declaration_head var) (variable_name (identifier nsRange)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier NSRange)))))) (getter_setter_block (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier NSRange))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier location) :) (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 0))))))))) , (function_call_argument (argument_name (identifier length) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier utf16))) (explicit_member_suffix . (identifier count))))))) )))))))) }))))) (extension_member (declaration (subscript_declaration (subscript_head subscript (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier nsRange)) (local_parameter_name (identifier nsRange)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier NSRange)))))))) ))) (subscript_result (arrow_operator - >) (type (type (protocol_composition_type (type_identifier (type_name (identifier Substring))))) ?)) (code_block { (statements (statement (branch_statement (guard_statement guard (condition_list (condition (optional_binding_condition let (pattern (identifier_pattern (identifier range))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier Range))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (identifier nsRange)) , (function_call_argument (argument_name (identifier in) :) (identifier self))) )))))))))) else (code_block { (statements (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (nil_literal nil))))))))))) })))) (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier self))) (subscript_suffix [ (function_call_argument_list (function_call_argument (identifier range))) ])))))))) }))))) })))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier NSRegularExpression))) (extension_body { (extension_members (extension_member (declaration (function_declaration (function_head func) (function_name (identifier matches)) (function_signature (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier in)) (local_parameter_name (identifier string)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String))))))) , (parameter (local_parameter_name (identifier options)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier MatchingOptions)))))) (default_argument_clause = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (array_literal [ ])))))))) , (parameter (local_parameter_name (identifier range)) (type_annotation : (type (type (protocol_composition_type (type_identifier (type_name (identifier Range)) (generic_argument_clause < (generic_argument_list (generic_argument (type (protocol_composition_type (type_identifier (type_name (identifier String)) . (type_identifier (type_name (identifier Index)))))))) >)))) ?)) (default_argument_clause = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (nil_literal nil)))))))))) )) (function_result (arrow_operator - >) (type (array_type [ (type (protocol_composition_type (type_identifier (type_name (identifier NSTextCheckingResult))))) ])))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier matches))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier in) :) (identifier string)) , (function_call_argument (argument_name (identifier options) :) (identifier options)) , (function_call_argument (argument_name (identifier range) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier NSRange))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier range))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head ?) (operator_characters (operator_character (operator_head ?))))) (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier string))) (explicit_member_suffix . (identifier range)))))))) , (function_call_argument (argument_name (identifier in) :) (identifier string))) )))))))) )))))))) }))))) (extension_member (declaration (function_declaration (function_head func) (function_name (identifier firstMatch)) (function_signature (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier in)) (local_parameter_name (identifier string)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String))))))) , (parameter (local_parameter_name (identifier options)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier MatchingOptions)))))) (default_argument_clause = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (array_literal [ ])))))))) , (parameter (local_parameter_name (identifier range)) (type_annotation : (type (type (protocol_composition_type (type_identifier (type_name (identifier Range)) (generic_argument_clause < (generic_argument_list (generic_argument (type (protocol_composition_type (type_identifier (type_name (identifier String)) . (type_identifier (type_name (identifier Index)))))))) >)))) ?)) (default_argument_clause = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (nil_literal nil)))))))))) )) (function_result (arrow_operator - >) (type (type (protocol_composition_type (type_identifier (type_name (identifier NSTextCheckingResult))))) ?))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier firstMatch))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier in) :) (identifier string)) , (function_call_argument (argument_name (identifier options) :) (identifier options)) , (function_call_argument (argument_name (identifier range) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier NSRange))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier range))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head ?) (operator_characters (operator_character (operator_head ?))))) (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier string))) (explicit_member_suffix . (identifier range)))))))) , (function_call_argument (argument_name (identifier in) :) (identifier string))) )))))))) )))))))) })))))) })))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier RangeReplaceableCollection))) (extension_body { (extension_members (extension_member (declaration (function_declaration (function_head func) (function_name (identifier replacingSubrange)) (generic_parameter_clause < (generic_parameter_list (generic_parameter (type_name (identifier C)))) >) (function_signature (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier _)) (local_parameter_name (identifier subrange)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Range)) (generic_argument_clause < (generic_argument_list (generic_argument (type (protocol_composition_type (type_identifier (type_name (identifier Index))))))) >)))))) , (parameter (external_parameter_name (identifier with)) (local_parameter_name (identifier newElements)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier C)))))))) )) (function_result (arrow_operator - >) (type (protocol_composition_type (type_identifier (type_name (identifier Self))))))) (generic_where_clause where (requirement_list (requirement (conformance_requirement (type_identifier (type_name (identifier C))) : (type_identifier (type_name (identifier Collection))))) , (requirement (same_type_requirement (type_identifier (type_name (identifier Element))) (same_type_equals = =) (type_identifier (type_name (identifier C)) . (type_identifier (type_name (identifier Element)))))))) (function_body (code_block { (statements (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier copy))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier self)))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier copy))) (explicit_member_suffix . (identifier replaceSubrange)) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (identifier subrange)) , (function_call_argument (argument_name (identifier with) :) (identifier newElements))) ))))))) (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier copy)))))))))) })))))) }))))) <EOF>)