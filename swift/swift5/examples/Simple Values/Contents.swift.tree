(top_level (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier print))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " Hello, world! ")))))))))) ))))))) (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier myVariable))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 42)))))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier myVariable))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 50))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier myConstant))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 42)))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier implicitInteger))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 70)))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier implicitDouble))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal 70.0))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier explicitDouble)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Double))))))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 70)))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier label))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " The width is  ")))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier width))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 94)))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier widthLabel))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier label))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head +))) (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier String))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (identifier width))) )))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier apples))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 3)))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier oranges))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 5)))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier appleSummary))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " I have  \( (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier apples)))))) )  apples. ")))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier fruitSummary))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " I have  \( (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier apples))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head +))) (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier oranges)))))))) )  pieces of fruit. ")))))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier quotation))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal """ \nI said  " I have  \( (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier apples)))))) )  apples. " \nAnd then I said  " I have  \( (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier apples))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head +))) (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier oranges)))))))) )  pieces of fruit. " \n """)))))))))))))) (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier shoppingList))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (array_literal [ (array_literal_items (array_literal_item (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " catfish "))))))))) , (array_literal_item (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " water "))))))))) , (array_literal_item (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " tulips ")))))))))) ])))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier shoppingList))) (subscript_suffix [ (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 1)))))))))) ]))) (binary_expressions (binary_expression (binary_operator (operator (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " bottle of water "))))))))))) (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier occupations))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (dictionary_literal [ (dictionary_literal_items (dictionary_literal_item (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " Malcolm ")))))))) : (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " Captain "))))))))) , (dictionary_literal_item (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " Kaylee ")))))))) : (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " Mechanic "))))))))) ,) ])))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier occupations))) (subscript_suffix [ (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " Jayne ")))))))))) ]))) (binary_expressions (binary_expression (binary_operator (operator (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " Public Relations "))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier shoppingList))) (explicit_member_suffix . (identifier append)) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " blue paint ")))))))))) ))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier print))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (identifier shoppingList))) ))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier emptyArray))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (array_type [ (type (protocol_composition_type (type_identifier (type_name (identifier String))))) ])) (function_call_suffix (function_call_argument_clause ( )))))))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier emptyDictionary))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (dictionary_type [ (type (protocol_composition_type (type_identifier (type_name (identifier String))))) : (type (protocol_composition_type (type_identifier (type_name (identifier Float))))) ])) (function_call_suffix (function_call_argument_clause ( )))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier shoppingList))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (array_literal [ ]))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier occupations))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head =))) (prefix_expression (postfix_expression (primary_expression (literal_expression (dictionary_literal [ : ])))))))))) <EOF>)