(top_level (statements (statement (declaration (protocol_declaration protocol (protocol_name (identifier ExampleProtocol)) (protocol_body { (protocol_members (protocol_member (protocol_member_declaration (protocol_property_declaration (variable_declaration_head var) (variable_name (identifier simpleDescription)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String)))))) (getter_setter_keyword_block { (getter_keyword_clause get) })))) (protocol_member (protocol_member_declaration (protocol_method_declaration (function_head (declaration_modifiers (declaration_modifier (mutation_modifier mutating))) func) (function_name (identifier adjust)) (function_signature (parameter_clause ( ))))))) })))) (statement (declaration (class_declaration class (class_name (identifier SimpleClass)) (type_inheritance_clause : (type_inheritance_list (type_identifier (type_name (identifier ExampleProtocol))))) (class_body { (class_members (class_member (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier simpleDescription)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String))))))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " A very simple class. ")))))))))))))) (class_member (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier anotherProperty)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Int))))))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 69105)))))))))))))) (class_member (declaration (function_declaration (function_head func) (function_name (identifier adjust)) (function_signature (parameter_clause ( ))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier simpleDescription))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head +) (operator_characters (operator_character (operator_head =))))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal "   Now 100% adjusted. ")))))))))))) })))))) })))) (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier a))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier SimpleClass))) (function_call_suffix (function_call_argument_clause ( )))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier a))) (explicit_member_suffix . (identifier adjust)) (function_call_suffix (function_call_argument_clause ( ))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier aDescription))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier a))) (explicit_member_suffix . (identifier simpleDescription))))))))))) (statement (declaration (struct_declaration struct (struct_name (identifier SimpleStructure)) (type_inheritance_clause : (type_inheritance_list (type_identifier (type_name (identifier ExampleProtocol))))) (struct_body { (struct_members (struct_member (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier simpleDescription)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String))))))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " A simple structure ")))))))))))))) (struct_member (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier (mutation_modifier mutating))) func) (function_name (identifier adjust)) (function_signature (parameter_clause ( ))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier simpleDescription))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head +) (operator_characters (operator_character (operator_head =))))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal "  (adjusted) ")))))))))))) })))))) })))) (statement (declaration (variable_declaration (variable_declaration_head var) (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier b))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier SimpleStructure))) (function_call_suffix (function_call_argument_clause ( )))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier b))) (explicit_member_suffix . (identifier adjust)) (function_call_suffix (function_call_argument_clause ( ))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier bDescription))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier b))) (explicit_member_suffix . (identifier simpleDescription))))))))))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier Int))) (type_inheritance_clause : (type_inheritance_list (type_identifier (type_name (identifier ExampleProtocol))))) (extension_body { (extension_members (extension_member (declaration (variable_declaration (variable_declaration_head var) (variable_name (identifier simpleDescription)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String)))))) (getter_setter_block (code_block { (statements (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " The number  \( (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier self)))))) ) ")))))))))))) }))))) (extension_member (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier (mutation_modifier mutating))) func) (function_name (identifier adjust)) (function_signature (parameter_clause ( ))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier self))))) (binary_expressions (binary_expression (binary_operator (operator (operator_head +) (operator_characters (operator_character (operator_head =))))) (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 42)))))))))))) })))))) })))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier print))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 7))))) (explicit_member_suffix . (identifier simpleDescription))))))) ))))))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier protocolValue)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier ExampleProtocol))))))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier a)))))))))))) (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier print))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier protocolValue))) (explicit_member_suffix . (identifier simpleDescription))))))) )))))))) <EOF>)