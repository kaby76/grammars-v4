(top_level (statements (statement (declaration (import_declaration import (import_path (import_path_identifier (identifier XCTest)))))) (statement (declaration (import_declaration (attributes (attribute @ (attribute_name (identifier testable)))) import (import_path (import_path_identifier (identifier Regex)))))) (statement (declaration (class_declaration final class (class_name (identifier StringExtensionTests)) (type_inheritance_clause : (type_inheritance_list (type_identifier (type_name (identifier XCTestCase))))) (class_body { (class_members (class_member (declaration (function_declaration (function_head func) (function_name (identifier testReplacingFirstMatch)) (function_signature (parameter_clause ( ))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier XCTAssertEqual))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " 123foo456bar "))))) (explicit_member_suffix . (identifier replacingFirstMatch)) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier of) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier Regex))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (extended_string_literal #" [a-z]+ "#)))))))))) ))))))) , (function_call_argument (argument_name (identifier with) :) (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " ðŸ¦„ ")))))))))) ))))))) , (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " 123ðŸ¦„456bar ")))))))))) )))))))) }))))) (class_member (declaration (function_declaration (function_head func) (function_name (identifier testReplacingAllMatches)) (function_signature (parameter_clause ( ))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier XCTAssertEqual))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " 123foo456bar "))))) (explicit_member_suffix . (identifier replacingAllMatches)) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier of) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier Regex))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (extended_string_literal #" [a-z]+ "#)))))))))) ))))))) , (function_call_argument (argument_name (identifier with) :) (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " ðŸ¦„ ")))))))))) ))))))) , (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (string_literal (interpolated_string_literal " 123ðŸ¦„456ðŸ¦„ ")))))))))) )))))))) })))))) }))))) <EOF>)