(top_level (statements (statement (declaration (import_declaration import (import_path (import_path_identifier (identifier Foundation)))))) (statement (declaration (extension_declaration extension (type_identifier (type_name (identifier String))) (extension_body { (extension_members (extension_member (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier (access_level_modifier public))) func) (function_name (identifier replacingFirstMatch)) (function_signature (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier of)) (local_parameter_name (identifier regex)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Regex))))))) , (parameter (external_parameter_name (identifier with)) (local_parameter_name (identifier template)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String)))))))) )) (function_result (arrow_operator - >) (type (protocol_composition_type (type_identifier (type_name (identifier Self))))))) (function_body (code_block { (statements (statement (branch_statement (guard_statement guard (condition_list (condition (optional_binding_condition let (pattern (identifier_pattern (identifier match))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier regex))) (explicit_member_suffix . (identifier firstMatch)) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier in) :) (identifier self))) )))))))))) else (code_block { (statements (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier self)))))))))) })))) (statement (declaration (constant_declaration let (pattern_initializer_list (pattern_initializer (pattern (identifier_pattern (identifier replacement))) (initializer = (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier regex))) (explicit_member_suffix . (identifier nsRegex)) (explicit_member_suffix . (identifier replacementString)) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier for) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier match))) (explicit_member_suffix . (identifier checkingResult)))))) , (function_call_argument (argument_name (identifier in) :) (identifier self)) , (function_call_argument (argument_name (identifier offset) :) (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (literal (numeric_literal (integer_literal 0))))))))) , (function_call_argument (argument_name (identifier template) :) (identifier template))) )))))))))))) (statement (control_transfer_statement (return_statement return (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier replacingSubrange))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier match))) (explicit_member_suffix . (identifier range)))))) , (function_call_argument (argument_name (identifier with) :) (identifier replacement))) )))))))))) }))))) (extension_member (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier (access_level_modifier public))) func) (function_name (identifier replacingFirstMatch)) (function_signature (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier of)) (local_parameter_name (identifier regexPattern)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier StaticString))))))) , (parameter (external_parameter_name (identifier with)) (local_parameter_name (identifier template)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String)))))))) )) (function_result (arrow_operator - >) (type (protocol_composition_type (type_identifier (type_name (identifier Self))))))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier replacingFirstMatch))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier of) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier Regex))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (identifier regexPattern))) ))))))) , (function_call_argument (argument_name (identifier with) :) (identifier template))) )))))))) }))))) (extension_member (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier (access_level_modifier public))) func) (function_name (identifier replacingAllMatches)) (function_signature (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier of)) (local_parameter_name (identifier regex)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Regex))))))) , (parameter (external_parameter_name (identifier with)) (local_parameter_name (identifier template)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String))))))) , (parameter (local_parameter_name (identifier options)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Regex)) . (type_identifier (type_name (identifier MatchingOptions))))))) (default_argument_clause = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (array_literal [ ]))))))))) )) (function_result (arrow_operator - >) (type (protocol_composition_type (type_identifier (type_name (identifier Self))))))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier regex))) (explicit_member_suffix . (identifier nsRegex)) (explicit_member_suffix . (identifier stringByReplacingMatches)) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier in) :) (identifier self)) , (function_call_argument (argument_name (identifier options) :) (identifier options)) , (function_call_argument (argument_name (identifier range) :) (identifier nsRange)) , (function_call_argument (argument_name (identifier withTemplate) :) (identifier template))) )))))))) }))))) (extension_member (declaration (function_declaration (function_head (declaration_modifiers (declaration_modifier (access_level_modifier public))) func) (function_name (identifier replacingAllMatches)) (function_signature (parameter_clause ( (parameter_list (parameter (external_parameter_name (identifier of)) (local_parameter_name (identifier regexPattern)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier StaticString))))))) , (parameter (external_parameter_name (identifier with)) (local_parameter_name (identifier template)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier String))))))) , (parameter (local_parameter_name (identifier options)) (type_annotation : (type (protocol_composition_type (type_identifier (type_name (identifier Regex)) . (type_identifier (type_name (identifier MatchingOptions))))))) (default_argument_clause = (expression (prefix_expression (postfix_expression (primary_expression (literal_expression (array_literal [ ]))))))))) )) (function_result (arrow_operator - >) (type (protocol_composition_type (type_identifier (type_name (identifier Self))))))) (function_body (code_block { (statements (statement (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier replacingAllMatches))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (argument_name (identifier of) :) (expression (prefix_expression (postfix_expression (primary_expression (unqualified_name (identifier Regex))) (function_call_suffix (function_call_argument_clause ( (function_call_argument_list (function_call_argument (identifier regexPattern))) ))))))) , (function_call_argument (argument_name (identifier with) :) (identifier template)) , (function_call_argument (argument_name (identifier options) :) (identifier options))) )))))))) })))))) }))))) <EOF>)