(program (sourceElements (sourceElement (statement (interfaceDeclaration interface (identifier IProcessor) (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName (identifier result))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier T))))))))) ; (typeMember (methodSignature (propertyName (identifierName (identifier process))) (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName (identifier a))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier T))))))))) , (parameter (requiredParameter (identifierOrPattern (identifierName (identifier b))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier T)))))))))) ))) => (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier T)))))))) ;) })))) (sourceElement (statement (interfaceDeclaration interface (identifier KeyPair) (typeParameters < (typeParameterList (typeParameter (identifier T)) , (typeParameter (identifier U))) >) (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName (identifier key))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier T))))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier value))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier U)))))))))) ;) })))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier kv1)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier KeyPair)) (typeGeneric < (typeArgumentList (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))) , (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string)))))) >)))))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier key))) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName (identifier value))) : (singleExpression (literal "Steve"))) })))) ;))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier kv2)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier KeyPair)) (typeGeneric < (typeArgumentList (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))) , (typeArgument (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))) >)))))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier key))) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName (identifier value))) : (singleExpression (literal (numericLiteral 12345)))) })))) ;))) (sourceElement (statement (interfaceDeclaration interface (identifier KeyValueProcessor) (typeParameters < (typeParameterList (typeParameter (identifier T)) , (typeParameter (identifier U))) >) (objectType { (typeBody (typeMemberList (typeMember (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName (identifier key))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier T))))))))) , (parameter (requiredParameter (identifierOrPattern (identifierName (identifier val))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier U)))))))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType void)))))))) ;) }) ;))) (sourceElement (statement (functionDeclaration function (identifier processNumKeyPairs) (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName (identifier key))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))))) , (parameter (requiredParameter (identifierOrPattern (identifierName (identifier value))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType void)))))) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifierName (identifier console))) . (identifierName (identifier log))) (arguments ( (argumentList (argument (singleExpression (singleExpression (literal 'processNumKeyPairs: key = ')) + (singleExpression (identifierName (identifier key)) (singleExpression (singleExpression + (singleExpression (literal ', value = '))) + (singleExpression (identifierName (identifier value)))))))) ))))))))) })))) <EOF>)