(program (sourceElements (sourceElement export (statement (interfaceDeclaration interface (identifier IPerson) (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName (identifier name))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier gender))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string)))))))) ;) })))) (sourceElement (statement (interfaceDeclaration interface (identifier IEmployee) (interfaceExtendsClause extends (classOrInterfaceTypeList (typeReference (typeName (identifier IPerson))))) (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName (identifier empCode))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))))) ; (typeMember (propertySignatur readonly (propertyName (identifierName (identifier empName))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier empDept))) ? (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier getSalary))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType ( (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))) ))))) => (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))) ; (typeMember (methodSignature (propertyName (identifierName (identifier getManagerName))) (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName (identifier number)))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))))) ;) })))) (sourceElement (statement (interfaceDeclaration declare interface (identifier IRouteInfo) (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName (identifier path))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier title))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier icon))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ; (typeMember (propertySignatur (propertyName (identifierName (reservedWord (keyword class)))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier allowAnonymous))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType boolean)))))))) ;) })))) (sourceElement (statement (classDeclaration class (identifier Employee) (classHeritage (implementsClause implements (classOrInterfaceTypeList (typeReference (typeName (identifier IEmployee)))))) (classTail { (classElement (propertyMemberDeclaration propertyMemberBase (propertyName (identifierName (identifier empCode))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))) ;)) (classElement (propertyMemberDeclaration propertyMemberBase (propertyName (identifierName (identifier name))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))) ;)) (classElement (constructorDeclaration constructor ( (formalParameterList (formalParameterArg (assignable (identifier code)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))) , (formalParameterArg (assignable (identifier name)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))) ) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier empCode))) = (singleExpression (identifierName (identifier code))))) ;))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression this) . (identifierName (identifier name))) = (singleExpression (identifierName (identifier name))))) ;))))) })) (classElement (propertyMemberDeclaration propertyMemberBase (propertyName (identifierName (identifier getSalary))) (callSignature ( (parameterList (parameter (requiredParameter (identifierOrPattern (identifierName (identifier empCode))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))))) ) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number)))))) { (functionBody (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (identifierName (reservedWord (keyword return))) (singleExpression (literal (numericLiteral 20000))))) ;))))) })) })))) (sourceElement (statement (interfaceDeclaration interface (identifier KeyPair) (objectType { (typeBody (typeMemberList (typeMember (propertySignatur (propertyName (identifierName (identifier key))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType number))))))) ; (typeMember (propertySignatur (propertyName (identifierName (identifier value))) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string)))))))) ;) })))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier kv1)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier KeyPair))))))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier key))) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName (identifier value))) : (singleExpression (literal "Steve"))) })))) ;))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier kv2)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier KeyPair))))))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier key))) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName (identifier val))) : (singleExpression (literal "Steve"))) })))) ;))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier kv3)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier KeyPair))))))) = (singleExpression (objectLiteral { (propertyAssignment (propertyName (identifierName (identifier key))) : (singleExpression (literal (numericLiteral 1)))) , (propertyAssignment (propertyName (identifierName (identifier value))) : (singleExpression (literal (numericLiteral 100)))) })))) ;))) (sourceElement (statement (interfaceDeclaration interface (identifier NumList) (objectType { (typeBody (typeMemberList (typeMember (indexSignature [ (identifier index) : string ] (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))))) })))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier numArr)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier NumList))))))) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 2)))) , (arrayElement (singleExpression (literal (numericLiteral 3))))) ])))) ;))) (sourceElement (statement (variableStatement (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier numArr)) (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 0))))) ])))) ;))) (sourceElement (statement (variableStatement (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier numArr)) (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1))))) ])))) ;))) (sourceElement (statement (interfaceDeclaration interface (identifier IStringList) (objectType { (typeBody (typeMemberList (typeMember (indexSignature [ (identifier index) : string ] (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (predefinedType string))))))))) })))) (sourceElement (statement (variableStatement (varModifier let) (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier strArr)) (typeAnnotation : (type_ (unionOrIntersectionOrPrimaryType (primaryType (typeReference (typeName (identifier IStringList))))))))) ;))) (sourceElement (statement (variableStatement (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier strArr)) (singleExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal "TS")))) ])) = (singleExpression (literal "TypeScript"))))) ;))) (sourceElement (statement (variableStatement (variableDeclarationList (variableDeclaration (identifierOrKeyWord (identifier strArr)) (singleExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal "JS")))) ])) = (singleExpression (literal "JavaScript"))))) ;)))) <EOF>)