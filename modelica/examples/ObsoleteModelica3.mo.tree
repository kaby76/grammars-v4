(stored_definition within ; (class_definition (class_prefixes package) (class_specifier (long_class_specifier ObsoleteModelica3 (string_comment "Library that contains components from Modelica Standard Library 2.2.2 that have been removed from version 3.0") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Blocks (string_comment "Library of basic input/output control blocks (continuous, discrete, logical, table blocks)") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Interfaces (string_comment "Library of connectors and partial models for input/output blocks") (composition (element_list (element (class_definition (class_prefixes connector) (class_specifier (short_class_specifier RealSignal = (base_prefix type_prefix) (name Real) (comment (string_comment "Real port (both input/output possible)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Connector is not valid according to Modelica 3, since input/output prefixes are missing. When using this connector, it is not possible to check for balanced models."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nConnector with one signal of type Real (no icon, no input/output prefix).\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (class_definition (class_prefixes connector) (class_specifier (short_class_specifier BooleanSignal = (base_prefix type_prefix) (name Boolean) (comment (string_comment "Boolean port (both input/output possible)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Connector is not valid according to Modelica 3, since input/output prefixes are missing. When using this connector, it is not possible to check for balanced models."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nConnector with one signal of type Boolean (no icon, no input/output prefix).\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (class_definition (class_prefixes connector) (class_specifier (short_class_specifier IntegerSignal = (base_prefix type_prefix) (name Integer) (comment (string_comment "Integer port (both input/output possible)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Connector is not valid according to Modelica 3, since input/output prefixes are missing. When using this connector, it is not possible to check for balanced models."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nConnector with one signal of type .\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Adaptors (string_comment "Obsolete package with components to send signals to a bus or receive signals from a bus (only for backward compatibility)") (composition (element_list (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier AdaptorReal (string_comment "Completely obsolete adaptor between 'old' and 'new' Real signal connectors (only for backward compatibility)") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteBlock))) ; (element (component_clause type_prefix (type_specifier (name ObsoleteModelica3 . Blocks . Interfaces . RealSignal)) (component_list (component_declaration (declaration newReal) (comment (string_comment "Connector of Modelica version 2.1") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name RealPort)) (component_list (component_declaration (declaration oldReal (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name n) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )))) (comment (string_comment "Connector of Modelica version 1.6") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element (class_definition (class_prefixes connector) (class_specifier (long_class_specifier RealPort (string_comment "Connector with signals of type Real") (composition (element_list (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration n (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Dimension of signal vector") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ; (element replaceable (class_definition (class_prefixes type) (class_specifier (short_class_specifier SignalType = (base_prefix type_prefix) (name Real) (comment (string_comment "type of signal")))))) ; (element (component_clause type_prefix (type_specifier (name SignalType)) (component_list (component_declaration (declaration signal (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference n)))))))))))) ])) (comment (string_comment "Real signals") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ;)) end RealPort)))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference newReal)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference oldReal . signal (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) ])))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name defaultConnectionStructurallyInconsistent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model is not balanced, so equation check will not work. This model is no longer needed"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 144))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 144))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 88))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 22))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 88))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 24))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "adaptor")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 216))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 58))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 36))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "port.signal")))))))))))))))) ))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nCompletely obsolete adaptor between the Real signal connector\nof version 1.6 and version &ge; 2.1 of the Modelica Standard Library.\nThis block is only provided for backward compatibility.\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end AdaptorReal)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier AdaptorBoolean (string_comment "Completely obsolete adaptor between 'old' and 'new' Boolean signal connectors (only for backward compatibility)") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteBlock))) ; (element (component_clause type_prefix (type_specifier (name ObsoleteModelica3 . Blocks . Interfaces . BooleanSignal)) (component_list (component_declaration (declaration newBoolean) (comment (string_comment "Connector of Modelica version 2.1") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name BooleanPort)) (component_list (component_declaration (declaration oldBoolean (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name n) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )))) (comment (string_comment "Connector of Modelica version 1.6") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element (class_definition (class_prefixes connector) (class_specifier (long_class_specifier BooleanPort (string_comment "Connector with signals of type Boolean") (composition (element_list (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration n (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Dimension of signal vector") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ; (element replaceable (class_definition (class_prefixes type) (class_specifier (short_class_specifier SignalType = (base_prefix type_prefix) (name Boolean) (comment (string_comment "type of signal")))))) ; (element (component_clause type_prefix (type_specifier (name SignalType)) (component_list (component_declaration (declaration signal (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference n)))))))))))) ])) (comment (string_comment "Boolean signals") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ;)) end BooleanPort)))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference newBoolean)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference oldBoolean . signal (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) ])))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name defaultConnectionStructurallyInconsistent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model is not balanced, so equation check will not work. This model is no longer needed"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 144))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 144))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 88))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 22))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 88))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 24))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "adaptor")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 216))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 58))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 36))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "port.signal")))))))))))))))) ))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nCompletely obsolete adaptor between the Real signal connector\nof version 1.6 and version &ge; 2.1 of the Modelica Standard Library.\nThis block is only provided for backward compatibility.\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end AdaptorBoolean)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier AdaptorInteger (string_comment "Completely obsolete adaptor between 'old' and 'new' Integer signal connectors (only for backward compatibility)") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteBlock))) ; (element (component_clause type_prefix (type_specifier (name ObsoleteModelica3 . Blocks . Interfaces . IntegerSignal)) (component_list (component_declaration (declaration newInteger) (comment (string_comment "Connector of Modelica version 2.1") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name IntegerPort)) (component_list (component_declaration (declaration oldInteger (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name n) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )))) (comment (string_comment "Connector of Modelica version 1.6") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element (class_definition (class_prefixes connector) (class_specifier (long_class_specifier IntegerPort (string_comment "Connector with signals of type Integer") (composition (element_list (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration n (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Dimension of signal vector") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ; (element replaceable (class_definition (class_prefixes type) (class_specifier (short_class_specifier SignalType = (base_prefix type_prefix) (name Integer) (comment (string_comment "type of signal")))))) ; (element (component_clause type_prefix (type_specifier (name SignalType)) (component_list (component_declaration (declaration signal (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference n)))))))))))) ])) (comment (string_comment "Integer signals") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Hide) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ;)) end IntegerPort)))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference newInteger)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference oldInteger . signal (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) ])))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name defaultConnectionStructurallyInconsistent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model is not balanced, so equation check will not work. This model is no longer needed"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 144))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 144))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 88))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 22))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 88))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 24))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "adaptor")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 216))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 58))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 36))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "port.signal")))))))))))))))) ))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nCompletely obsolete adaptor between the Real signal connector\nof version 1.6 and version &ge; 2.1 of the Modelica Standard Library.\nThis block is only provided for backward compatibility.\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end AdaptorInteger)))) ;)) end Adaptors)))) ;)) end Interfaces)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Math (string_comment "Library of mathematical functions as input/output blocks") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier UnitConversions (string_comment "Conversion blocks to convert between SI and non-SI unit signals") (composition (element_list (element (class_definition (class_prefixes block) (class_specifier (long_class_specifier ConvertAllUnits (string_comment "Obsolete block. Use one of Modelica.Blocks.Math.UnitConversions.XXX instead") (composition (element_list (element replaceable (class_definition (class_prefixes block) (class_specifier (short_class_specifier ConversionBlock = (base_prefix type_prefix) (name Modelica . Blocks . Interfaces . PartialConversionBlock) (comment (string_comment "Conversion block") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name choicesAllMatching) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nInternal replaceable block that is used to construct the\n\"pull down menu\" of the available unit conversions.\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (extends_clause extends (name ConversionBlock))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteBlock))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model is not according to Modelica Language 3.0 since replaceable base class present. "))) (add_op +) (term (factor (primary "Use instead one of Modelica.Blocks.Math.UnitConversions.XXX"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name defaultComponentName) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "convert"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 191))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 191))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 191))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>This block implements the Modelica.SIunits.Conversions functions as a fixed causality block to\nsimplify their use. The block contains a replaceable block class <b>ConversionBlock</b> that can be\nchanged to be any of the blocks defined in Modelica.Blocks.Math.UnitConversions, and more generally, any\nblocks that extend from Modelica.Blocks.Interfaces.PartialConversionBlock.\n</p>\n\n<p>\nThe desired conversion can be selected in the parameter menu\n(the selected units are then displayed in the icon):\n</p>\n\n<p>\n<img src=\"modelica://Modelica/Resources/Images/Blocks/ConvertAllUnits.png\">\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end ConvertAllUnits)))) ;)) end UnitConversions)))) ; (element (class_definition (class_prefixes block) (class_specifier (long_class_specifier TwoInputs (string_comment "Obsolete block. Use instead Modelica.Blocks.Math.InverseBlockConstraints") (composition (element_list (element (extends_clause extends (name Modelica . Blocks . Interfaces . BlockIcon))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteBlock))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration u1) (comment (string_comment "Connector of first Real input signal") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name layer) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "icon"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 139.742))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 19.0044))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration u2) (comment (string_comment "Connector of second Real input signal (u1=u2)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name layer) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "icon"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 180))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference u1)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference u2))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name defaultConnectionStructurallyInconsistent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model is not balanced, i.e., not according to Modelica Language 3.0. Use instead Modelica.Blocks.Math.InverseBlockConstraints"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nThis block is used to enable assignment of values to variables preliminary\ndefined as outputs (e.g., useful for inverse model generation).\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "=")))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end TwoInputs)))) ; (element (class_definition (class_prefixes block) (class_specifier (long_class_specifier TwoOutputs (string_comment "Obsolete block. Use instead Modelica.Blocks.Math.InverseBlockConstraints") (composition (element_list (element (extends_clause extends (name Modelica . Blocks . Interfaces . BlockIcon))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteBlock))) ; (element (component_clause (type_prefix output) (type_specifier (name Modelica . Blocks . Interfaces . RealOutput)) (component_list (component_declaration (declaration y1) (comment (string_comment "Connector of first Real output signal") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix output) (type_specifier (name Modelica . Blocks . Interfaces . RealOutput)) (component_list (component_declaration (declaration y2) (comment (string_comment "Connector of second Real output signal (y1=y2)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110.366))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 0.90289))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10.0005))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10.0005))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 180))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y1)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y2))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name defaultConnectionStructurallyInconsistent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model is not balanced, i.e., not according to Modelica Language 3.0. Use instead Modelica.Blocks.Math.InverseBlockConstraints"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis block is used to enable calculation of values preliminary defined as inputs.\n(e.g., useful for inverse model generation).\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "=")))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end TwoOutputs)))) ;)) end Math)))) ;)) end Blocks)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Electrical (string_comment "Library of electrical models (analog, digital, machines, multi-phase)") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Analog (string_comment "Library for analog electrical models") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Basic (string_comment "Basic electrical components such as resistor, capacitor, transformer") (composition (element_list (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier HeatingResistor (string_comment "Obsolete model. Use Modelica.Electrical.Analog.Basic.HeatingResistor instead") (composition (element_list (element (extends_clause extends (name Modelica . Electrical . Analog . Interfaces . OnePort))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Modelica . SIunits . Resistance)) (component_list (component_declaration (declaration R_ref (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Resistance at temperature T_ref")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Modelica . SIunits . Temperature)) (component_list (component_declaration (declaration T_ref (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 300)))))))))))) (comment (string_comment "Reference temperature")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration alpha (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "1/K"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment "Temperature coefficient of resistance")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Resistance)) (component_list (component_declaration (declaration R) (comment (string_comment "Resistance = R_ref*(1 + alpha*(heatPort.T - T_ref));")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Thermal . HeatTransfer . Interfaces . HeatPort_a)) (component_list (component_declaration (declaration heatPort) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 270))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R))) (mul_op *) (factor (primary (component_reference i))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference heatPort))))))))))))) )))))) (rel_op >) (arithmetic_expression (term (factor (primary 0)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_ref))) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))) (add_op +) (term (factor (primary (component_reference alpha))) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference heatPort . T)))) (add_op -) (term (factor (primary (component_reference T_ref)))))))))))) )))))))))))) ))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference heatPort . Q_flow)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference v))) (mul_op *) (factor (primary (component_reference i))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_ref))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference heatPort . T)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference T_ref))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model equations depend on cardinality(..) which will become obsolete in the Modelica language. Use instead Modelica.Electrical.Analog.Basic.HeatingResistor"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 85))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 23))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 85))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 17))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 23))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 115))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 125))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 115))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 5))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 5))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 25))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 45))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "i")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 105))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 23))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 115))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 105))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 17))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 105))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 23))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 115))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 125))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 45))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 25))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 160))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "i")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 96))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 191))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 52))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 48))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 54))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 56))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) )))))))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 142))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 143))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 118))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 91))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 191))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 52))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 48))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 54))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 56))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) )))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>This is a model for an electrical resistor where the generated heat\nis dissipated to the environment via connector <b>heatPort</b> and where\nthe resistance R is temperature dependent according to the following\nequation:</p>\n<pre>    R = R_ref*(1 + alpha*(heatPort.T - T_ref))\n</pre>\n<p><b>alpha</b> is the <b>temperature coefficient of resistance</b>, which\nis often abbreviated as <b>TCR</b>. In resistor catalogues, it is usually\ndefined as <b>X [ppm/K]</b> (parts per million, similarly to percentage)\nmeaning <b>X*1.e-6 [1/K]</b>. Resistors are available for 1 .. 7000 ppm/K,\ni.e., alpha = 1e-6 .. 7e-3 1/K;</p>\n<p>When connector <b>heatPort</b> is <b>not</b> connected, the temperature\ndependent behaviour is switched off by setting heatPort.T = T_ref.\nAdditionally, the equation <code>heatPort.Q_flow = 0</code> is implicitly present\ndue to a special rule in Modelica that flow variables of not connected\nconnectors are set to zero.</p>\n</html>"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name revisions) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<ul>\n<li><i> 2002   </i>\n       by Anton Haumer<br> initially implemented<br>\n       </li>\n</ul>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end HeatingResistor)))) ;)) end Basic)))) ;)) end Analog)))) ;)) end Electrical)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Icons (string_comment "Library of icons") (composition (element_list (element (class_definition (class_prefixes partial block) (class_specifier (long_class_specifier ObsoleteBlock (string_comment "Icon for an obsolete block (use only for this case)") (composition element_list (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Only used to mark an obsolete block. Do not use otherwise."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 102))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 102))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 102))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 102))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dash))))))))))))) , (named_arguments (named_argument lineThickness = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0.5))))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis partial block is intended to provide a <u>default icon\nfor an obsolete block</u> that will be removed from the\ncorresponding library in a future release.\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end ObsoleteBlock)))) ; (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier ObsoleteModel (string_comment "Icon for an obsolete model (use only for this case)") (composition element_list (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Only used to mark an obsolete model. Do not use otherwise."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 102))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 102))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 102))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 102))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dash))))))))))))) , (named_arguments (named_argument lineThickness = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0.5))))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis partial model is intended to provide a <u>default icon\nfor an obsolete model</u> that will be removed from the\ncorresponding library in a future release.\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end ObsoleteModel)))) ; (element (class_definition (class_prefixes partial class) (class_specifier (long_class_specifier Enumeration (string_comment "Obsolete class (icon for an enumeration emulated by a package). Use a real enumeration instead") (composition element_list (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Icon for an emulated enumeration. Emulated enumerations are no longer used (only real enumerations)"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 138))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 164))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 138))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 104))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Ellipse) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "e")))))))))))))))) )))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis icon is designed for an <b>enumeration</b>\n(that is emulated by a package).\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Enumeration)))) ;)) end Icons)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Mechanics (string_comment "Library of 1-dim. and 3-dim. mechanical components (multi-body, rotational, translational)") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier MultiBody (string_comment "Library to model 3-dimensional mechanical systems") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Forces (string_comment "Components that exert forces and/or torques between frames") (composition (element_list (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier WorldForceAndTorque (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Forces.WorldForceAndTorque") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Types) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . MultiBody . Interfaces . PartialOneFrame_b))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ])) (comment (string_comment "[1:6] = x-, y-, z-coordinates of force and x-, y-, z-coordiantes of torque resolved in world frame") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 140))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration N_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultN_to_m))))))))))))) (comment (string_comment " Force arrow scaling (length = force/N_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration Nm_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N.m/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultNm_to_m))))))))))))) (comment (string_comment " Torque arrow scaling (length = torque/Nm_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration forceDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultArrowDiameter))))))))))))) (comment (string_comment " Diameter of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration torqueDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter))))))))))))) (comment (string_comment " Diameter of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration forceColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . ForceColor))))))))))))) (comment (string_comment " Color of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration torqueColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . TorqueColor))))))))))))) (comment (string_comment " Color of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration f_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f))) (mul_op /) (factor (primary (component_reference N_to_m))))))))))))) (comment (string_comment "Force mapped from N to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration t_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t))) (mul_op /) (factor (primary (component_reference Nm_to_m))))))))))))) (comment (string_comment "Torque mapped from Nm to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Arrow)) (component_list (component_declaration (declaration forceArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference f_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . DoubleArrow)) (component_list (component_declaration (declaration torqueArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference t_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]))))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ]))))))))))))))) )))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Based on a packed result signal which is not a good design. Use instead Modelica.Mechanics.MultiBody.Forces.WorldForceAndTorque"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name preferredView) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "info"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 97))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 11))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 24))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 86))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 39))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 74))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 59))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 65))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 71))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 52))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 83))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 35))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 92))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 22))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 8))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 7))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 91))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 19))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 32))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 44))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 66))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 58))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 58))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 51))))))))))))) })))))))))))))))))))))))))) })))))))))))) , (named_arguments (named_argument thickness = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0.5))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 97))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 18))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 72))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 77))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 38))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 97))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 18))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) )))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 74))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 62))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 44))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 24))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "world")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 137))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 47))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 148))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 108))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 98))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 14))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 92))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 27))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 72))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 62))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 63))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 74))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 86))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 33))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 98))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 6))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 98))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 9))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 94))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 21))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 87))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 34))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 79))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 69))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 54))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 61))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 54))))))))))))) })))))))))))))))))))))))))) })))))))))))) , (named_arguments (named_argument thickness = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0.5))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 99))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 21))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 74))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 45))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 99))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 21))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) )))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nThe <b>6</b> signals of the <b>load</b> connector are interpreted\nas the x-, y- and z-coordinates of a <b>force</b> and as\nthe x-, y-, and z-coordinates of a <b>torque</b> resolved in the\n<b>world frame</b> and acting at the frame connector to which this\ncomponent is attached. The input signals are mapped to the force\nand torque in the following way:\n</p>\n<pre>\n   force  = load[1:3]\n   torque = load[4:6]\n</pre>\n<p>\nThe force and torque are by default visualized as an arrow (force)\nand as a double arrow (torque) acting at the connector to which\nthey are connected. The diameters\nand colors of the arrows are fixed and can be defined via\nparameters <b>forceDiameter</b>, <b>torqueDiameter</b>,\n<b>forceColor</b> and <b>torqueColor</b>. The arrows\npoint in the directions defined by the\ninPort.signal signals. The lengths of the arrows are proportional\nto the length of the force and torque vectors, respectively, using parameters\n<b>N_to_m</b> and <b>Nm_to_m</b> as scaling factors. For example, if N_to_m = 100 N/m,\nthen a force of 350 N is displayed as an arrow of length 3.5 m.\n</p>\n<p>\nAn example how to use this model is given in the\nfollowing figure:\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Forces/WorldForceAndTorque1.png\">\n\n<p>\nThis leads to the following animation\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Forces/WorldForceAndTorque2.png\">\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end WorldForceAndTorque)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier FrameForceAndTorque (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Forces.ForceAndTorque") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Types) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . MultiBody . Interfaces . PartialOneFrame_b))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Interfaces . Frame_resolve)) (component_list (component_declaration (declaration frame_resolve) (comment (string_comment "If connected, the input signals are resolved in this frame") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 270))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ])) (comment (string_comment "[1:6] = x-, y-, z-coordinates of force and x-, y-, z-coordiantes of torque resolved in frame_b or frame_resolved (if connected)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 140))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration N_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultN_to_m))))))))))))) (comment (string_comment " Force arrow scaling (length = force/N_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration Nm_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N.m/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultNm_to_m))))))))))))) (comment (string_comment " Torque arrow scaling (length = torque/Nm_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration forceDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultArrowDiameter))))))))))))) (comment (string_comment " Diameter of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration torqueDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter))))))))))))) (comment (string_comment " Diameter of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration forceColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . ForceColor))))))))))))) (comment (string_comment " Color of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration torqueColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . TorqueColor))))))))))))) (comment (string_comment " Color of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration f_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f))) (mul_op /) (factor (primary (component_reference N_to_m))))))))))))) (comment (string_comment "Force mapped from N to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration t_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t))) (mul_op /) (factor (primary (component_reference Nm_to_m))))))))))))) (comment (string_comment "Torque mapped from Nm to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Arrow)) (component_list (component_declaration (declaration forceArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference f_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . DoubleArrow)) (component_list (component_declaration (declaration torqueArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference t_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ;) (equation_section equation (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 0)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ])))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . nullRotation) (function_call_args ( )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolveRelative) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R))))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolveRelative) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ]))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R))))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Based on a packed result signal which is not a good design. Use instead Modelica.Mechanics.MultiBody.Forces.ForceAndTorque"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name preferredView) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "info"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 97))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 11))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 24))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 86))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 39))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 74))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 59))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 65))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 71))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 52))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 83))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 35))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 92))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 22))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 8))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 7))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 91))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 19))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 32))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 44))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 66))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 58))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 58))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 51))))))))))))) })))))))))))))))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 97))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 18))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 72))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 77))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 38))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 97))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 18))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 97))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 74))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 62))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 44))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 24))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "resolve")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 137))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 47))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 148))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 108))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 92))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 26))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 68))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 46))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 82))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 17))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 85))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 2))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 87))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 14))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 86))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 26))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 82))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 37))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 69))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 54))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 61))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 54))))))))))))) })))))))))))))))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 99))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 21))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 74))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 45))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 99))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 21))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nThe <b>6</b> signals of the <b>load</b> connector are interpreted\nas the x-, y- and z-coordinates of a <b>force</b> and as\nthe x-, y-, and z-coordinates of a <b>torque</b> acting at the frame\nconnector to which this component is attached. If connector\n<b>frame_resolve</b> is <b>not</b> connected, the force and torque coordinates\nare with respect to <b>frame_b</b>. If connector\n<b>frame_resolve</b> is connected, the force and torque coordinates\nare with respect to <b>frame_resolve</b>. In this case the\nforce and torque in connector frame_resolve are set to zero,\ni.e., this connector is solely used to provide the information\nof the coordinate system, in which the force coordinates\nare defined. The input signals are mapped to the force\nand torque in the following way:\n</p>\n<pre>\n   force  = load[1:3]\n   torque = load[4:6]\n</pre>\n<p>\nThe force and torque are by default visualized as an arrow (force)\nand as a double arrow (torque) acting at the connector to which\nthey are connected. The diameters\nand colors of the arrows are fixed and can be defined via\nparameters <b>forceDiameter</b>, <b>torqueDiameter</b>,\n<b>forceColor</b> and <b>torqueColor</b>. The arrows\npoint in the directions defined by the\ninPort.signal signals. The lengths of the arrows are proportional\nto the length of the force and torque vectors, respectively, using parameters\n<b>N_to_m</b> and <b>Nm_to_m</b> as scaling factors. For example,\nif N_to_m = 100 N/m,\nthen a force of 350 N is displayed as an arrow of length 3.5 m.\n</p>\n<p>\nAn example how to use this model is given in the\nfollowing figure:\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Forces/FrameForceAndTorque1.png\">\n\n<p>\nThis leads to the following animation\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Forces/FrameForceAndTorque2.png\">\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end FrameForceAndTorque)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier ForceAndTorque (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Forces.ForceAndTorque") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Types) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . MultiBody . Interfaces . PartialTwoFrames))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Interfaces . Frame_resolve)) (component_list (component_declaration (declaration frame_resolve) (comment (string_comment "If connected, the input signals are resolved in this frame") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ])) (comment (string_comment "[1:6] = x-, y-, z-coordinates of force and x-, y-, z-coordiantes of torque resolved in frame_b or frame_resolved (if connected)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 270))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration N_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultN_to_m))))))))))))) (comment (string_comment " Force arrow scaling (length = force/N_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration Nm_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N.m/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultNm_to_m))))))))))))) (comment (string_comment " Torque arrow scaling (length = torque/Nm_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration forceDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultArrowDiameter))))))))))))) (comment (string_comment " Diameter of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration torqueDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter))))))))))))) (comment (string_comment " Diameter of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration connectionLineDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter))))))))))))) (comment (string_comment " Diameter of line connecting frame_a and frame_b") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration forceColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . ForceColor))))))))))))) (comment (string_comment " Color of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration torqueColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . TorqueColor))))))))))))) (comment (string_comment " Color of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration connectionLineColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . SensorColor))))))))))))) (comment (string_comment " Color of line connecting frame_a and frame_b") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_0 (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from origin of frame_a to origin of frame_b resolved in world frame")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Force)) (component_list (component_declaration (declaration f_b_0 (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "frame_b.f resolved in world frame")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Torque)) (component_list (component_declaration (declaration t_b_0 (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "frame_b.t resolved in world frame")))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration f_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f))) (mul_op /) (factor (primary (component_reference N_to_m))))))))))))) (comment (string_comment "Force mapped from N to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration t_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t))) (mul_op /) (factor (primary (component_reference Nm_to_m))))))))))))) (comment (string_comment "Torque mapped from Nm to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Arrow)) (component_list (component_declaration (declaration forceArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference f_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . DoubleArrow)) (component_list (component_declaration (declaration torqueArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference t_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Shape)) (component_list (component_declaration (declaration connectionLine (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name shapeType) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "cylinder"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name lengthDirection) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name widthDirection) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name length) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Math . Vectors . length) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_0))))))))))))) ))))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name width) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference connectionLineDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name height) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference connectionLineDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference connectionLineColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ;) (equation_section equation (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 0)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ])))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_b_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_b_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . nullRotation) (function_call_args ( )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_b_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]))))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_b_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ]))))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_b_0)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_b_0)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))) (add_op -) (term (factor (primary (component_reference frame_a . r_0))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))) (add_op +) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_b_0)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))) (add_op +) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_b_0)))) (add_op +) (term (factor (primary (name cross) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_0)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_b_0)))))))))))))) ))))))))))))))) )))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Based on a packed result signal which is not a good design. Use instead Modelica.Mechanics.MultiBody.Forces.ForceAndTorque"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name preferredView) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "info"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 98))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 99))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 99))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 98))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 59))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 55))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 72))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "resolve")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 136))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 52))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 149))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 113))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 21))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 55))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 69))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 39))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 21))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 64))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 11))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 64))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 86))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 53))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 65))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 12))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 65))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 11))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 64))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 65))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 79))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 47))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 61))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 59))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 72))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 45))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 81))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 32))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 85))))))))))))) }))))))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 47))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 66))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 55))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 69))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 49))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 74))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 41))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 31))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 85))))))))))))) })))))))))))))))))) })))))))))))))) )))))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nThe <b>6</b> signals of the <b>load</b> connector are interpreted\nas the x-, y- and z-coordinates of a <b>force</b> and as\nthe x-, y-, and z-coordinates of a <b>torque</b> acting at the frame\nconnector to which frame_b of this component is attached. If connector\n<b>frame_resolve</b> is <b>not</b> connected, the force and torque coordinates\nare with respect to <b>frame_b</b>. If connector\n<b>frame_resolve</b> is connected, the force and torque coordinates\nare with respect to <b>frame_resolve</b>. In this case the\nforce and torque in connector frame_resolve are set to zero,\ni.e., this connector is solely used to provide the information\nof the coordinate system, in which the force/torque coordinates\nare defined. The input signals are mapped to the force\nand torque in the following way:\n</p>\n<pre>\n   force  = load[1:3]\n   torque = load[4:6]\n</pre>\n<p>\nAdditionally, a force and torque acts on frame_a in such a way that\nthe force and torque balance between frame_a and frame_b is fulfilled.\n</p>\n<p>\nAn example how to use this model is given in the\nfollowing figure:\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Forces/ForceAndTorque1.png\">\n\n<p>\nThis leads to the following animation (the yellow cylinder\ncharacterizes the line between frame_a and frame_b of the\nForceAndTorque component, i.e., the force and torque acts with\nnegative sign\nalso on the opposite side of this cylinder, but for\nclarity this is not shown in the animation):\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Forces/ForceAndTorque2.png\">\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end ForceAndTorque)))) ;)) end Forces)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Interfaces (string_comment "Connectors and partial models for 3-dim. mechanical components") (composition (element_list (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier PartialCutForceSensor (string_comment "Obsolete model. Use instead instead a model from Modelica.Mechanics.MultiBody.Sensors") (composition (element_list (element (extends_clause extends (name Modelica . Icons . RotationalSensor))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Interfaces . Frame_a)) (component_list (component_declaration (declaration frame_a) (comment (string_comment "Coordinate system with one cut-force and cut-torque") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 116))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Interfaces . Frame_b)) (component_list (component_declaration (declaration frame_b) (comment (string_comment "Coordinate system with one cut-force and cut-torque") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 116))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Interfaces . Frame_resolve)) (component_list (component_declaration (declaration frame_resolve) (comment (string_comment "If connected, the output signals are resolved in this frame (cut-force/-torque are set to zero)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 270))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element outer (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . World)) (component_list (component_declaration (declaration world) (comment string_comment))))) ;) (equation_section equation (equation (name defineBranch) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))))) )) (comment string_comment)) ; (equation (name assert) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a))))))))))))) )))))) (rel_op >) (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Connector frame_a of cut-force/-torque sensor object is not connected"))))))))))))) )) (comment string_comment)) ; (equation (name assert) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b))))))))))))) )))))) (rel_op >) (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Connector frame_b of cut-force/-torque sensor object is not connected"))))))))))))) )) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))) (add_op +) (term (factor (primary (component_reference frame_b . f))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))) (add_op +) (term (factor (primary (component_reference frame_b . t))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 1)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . nullRotation) (function_call_args ( )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Model equations depend on cardinality(..) which will become obsolete in the Modelica language. Use instead a model from Modelica.Mechanics.MultiBody.Sensors"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis is a base class for 3-dim. mechanical components with two frames\nand one output port in order to measure the cut-force and/or\ncut-torque acting between the two frames and\nto provide the measured signals as output for further processing\nwith the blocks of package Modelica.Blocks.\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 101))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 132))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 129))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 124))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name")))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 118))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 55))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 82))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "a")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 83))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 55))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 119))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "b")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 72))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 97))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "resolve")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end PartialCutForceSensor)))) ;)) end Interfaces)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Joints string_comment (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Internal string_comment (composition (element_list (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier RevoluteWithLengthConstraint (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Joints.Internal.RevoluteWithLengthConstraint") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import Cv = (name Modelica . SIunits . Conversions) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . MultiBody . Interfaces . PartialTwoFrames))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_a)) (component_list (component_declaration (declaration axis) (comment (string_comment "1-dim. rotational flange that drives the joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_b)) (component_list (component_declaration (declaration bearing) (comment (string_comment "1-dim. rotational flange of the drive bearing") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration position_a (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_a to frame_a side of length constraint, resolved in frame_a of revolute joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 140))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration position_b (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_b to frame_b side of length constraint, resolved in frame_b of revolute joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 140))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration lengthConstraint (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Fixed length of length constraint")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Modelica . Mechanics . MultiBody . Types . Axis)) (component_list (component_declaration (declaration n (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))))) })))))))))))) (comment (string_comment "Axis of rotation resolved in frame_a (= same as in frame_b)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Evaluate) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Cv . NonSIunits . Angle_deg)) (component_list (component_declaration (declaration phi_offset (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment "Relative angle offset (angle = phi + from_deg(phi_offset))")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Cv . NonSIunits . Angle_deg)) (component_list (component_declaration (declaration phi_guess (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment "Select the configuration such that at initial time |phi - from_deg(phi_guess)|is minimal")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Distance)) (component_list (component_declaration (declaration cylinderLength (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultJointLength))))))))))))) (comment (string_comment "Length of cylinder representing the joint axis") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Distance)) (component_list (component_declaration (declaration cylinderDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultJointWidth))))))))))))) (comment (string_comment "Diameter of cylinder representing the joint axis") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Modelica . Mechanics . MultiBody . Types . Color)) (component_list (component_declaration (declaration cylinderColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . JointColor))))))))))))) (comment (string_comment "Color of cylinder representing the joint axis") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Modelica . Mechanics . MultiBody . Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration axisTorqueBalance (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if torque balance of flange axis with the frame_b connector (axis.tau = -e*frame_b.t) shall be defined. Otherwise this equation has to be provided outside of this joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Advanced"))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element final (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration positiveBranch (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name fixed) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment)))) )))) (comment (string_comment "Based on phi_guess, selection of one of the two solutions of the non-linear constraint equation")))))) ; (element final (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration e (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable each final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "1"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Math . Vectors . normalize) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference n))))))))))))) )))))))))))))) (comment (string_comment "Unit vector in direction of rotation axis, resolved in frame_a")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration phi) (comment (string_comment "Rotation angle of revolute joint")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Frames . Orientation)) (component_list (component_declaration (declaration R_rel) (comment (string_comment "Relative orientation object from frame_a to frame_b")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration angle) (comment (string_comment "= phi + from_deg(phi_offset) (relative rotation angle between frame_a and frame_b)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Torque)) (component_list (component_declaration (declaration tau) (comment (string_comment "= axis.tau (driving torque in the axis)")))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_a (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference position_a))))))))))))) (comment (string_comment "Position vector from frame_a to frame_a side of length constraint, resolved in frame_a of revolute joint")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_b (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference position_b))))))))))))) (comment (string_comment "Position vector from frame_b to frame_b side of length constraint, resolved in frame_b of revolute joint")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration e_r_a) (comment (string_comment "Projection of r_a on e")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration e_r_b) (comment (string_comment "Projection of r_b on e")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration A) (comment (string_comment "Coefficient A of equation: A*cos(phi) + B*sin(phi) + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration B) (comment (string_comment "Coefficient B of equation: A*cos(phi) + B*sin(phi) + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration C) (comment (string_comment "Coefficient C of equation: A*cos(phi) + B*sin(phi) + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1) (comment (string_comment "Constant of quadratic equation")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k2) (comment (string_comment "Constant of quadratic equation")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1a (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name start) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1b) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration kcos_angle) (comment (string_comment "= k1*cos(angle)")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration ksin_angle) (comment (string_comment "= k1*sin(angle)")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Shape)) (component_list (component_declaration (declaration cylinder (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name shapeType) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "cylinder"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference cylinderColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name length) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference cylinderLength)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name width) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference cylinderDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name height) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference cylinderDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name lengthDirection) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name widthDirection) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_shape) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference e))) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference cylinderLength))) (mul_op /) (factor (primary 2))))))))))) )))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ; (element (class_definition (class_prefixes function) (class_specifier (long_class_specifier selectBranch (string_comment "Determine branch which is closest to initial angle=0") (composition (element_list (element (import_clause import (name Modelica . Math) .* (comment string_comment))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Length)) (component_list (component_declaration (declaration L) (comment (string_comment "Length of length constraint")))))) ; (element (component_clause (type_prefix input) (type_specifier (name Real)) (component_list (component_declaration (declaration e (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable each final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "1"))))))))))) string_comment)))) )))) (comment (string_comment "Unit vector along axis of rotation, resolved in frame_a (= same in frame_b)")))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration angle_guess) (comment (string_comment "Select the configuration such that at initial time |angle-angle_guess|is minimal (angle=0: frame_a and frame_b coincide)")))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_a (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_a to frame_a side of length constraint, resolved in frame_a of revolute joint")))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_b (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_b to frame_b side of length constraint, resolved in frame_b of revolute joint")))))) ; (element (component_clause (type_prefix output) (type_specifier (name Boolean)) (component_list (component_declaration (declaration positiveBranch) (comment (string_comment "Branch of the initial solution")))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration e_r_a) (comment (string_comment "Projection of r_a on e")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration e_r_b) (comment (string_comment "Projection of r_b on e")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration A) (comment (string_comment "Coefficient A of equation: A*cos(phi) + B*sin(phi) + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration B) (comment (string_comment "Coefficient B of equation: A*cos(phi) + B*sin(phi) + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration C) (comment (string_comment "Coefficient C of equation: A*cos(phi) + B*sin(phi) + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1) (comment (string_comment "Constant of quadratic equation")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k2) (comment (string_comment "Constant of quadratic equation")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration kcos1) (comment (string_comment "k1*cos(angle1)")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration ksin1) (comment (string_comment "k1*sin(angle1)")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration kcos2) (comment (string_comment "k2*cos(angle2)")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration ksin2) (comment (string_comment "k2*sin(angle2)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration angle1) (comment (string_comment "solution 1 of nonlinear equation")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration angle2) (comment (string_comment "solution 2 of nonlinear equation")))))) ;) (algorithm_section algorithm (statement (component_reference e_r_a) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference r_a))))))))))) (comment string_comment)) ; (statement (component_reference e_r_b) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference r_b))))))))))) (comment string_comment)) ; (statement (component_reference A) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 2)) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_b))) (mul_op *) (factor (primary (component_reference r_a)))) (add_op -) (term (factor (primary (component_reference e_r_b))) (mul_op *) (factor (primary (component_reference e_r_a)))))))))))) ))))))))))) (comment string_comment)) ; (statement (component_reference B) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2)) (mul_op *) (factor (primary (component_reference r_b))) (mul_op *) (factor (primary (name cross) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_a)))))))))))))) )))))))))))) (comment string_comment)) ; (statement (component_reference C) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_a))) (mul_op *) (factor (primary (component_reference r_a)))) (add_op +) (term (factor (primary (component_reference r_b))) (mul_op *) (factor (primary (component_reference r_b)))) (add_op -) (term (factor (primary (component_reference L))) (mul_op *) (factor (primary (component_reference L)))) (add_op -) (term (factor (primary 2)) (mul_op *) (factor (primary (component_reference e_r_b))) (mul_op *) (factor (primary (component_reference e_r_a))))))))))) (comment string_comment)) ; (statement (component_reference k1) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference A))) (mul_op *) (factor (primary (component_reference A)))) (add_op +) (term (factor (primary (component_reference B))) (mul_op *) (factor (primary (component_reference B))))))))))) (comment string_comment)) ; (statement (component_reference k2) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name sqrt) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1)))) (add_op -) (term (factor (primary (component_reference C))) (mul_op *) (factor (primary (component_reference C))))))))))))) )))))))))))) (comment string_comment)) ; (statement (component_reference kcos1) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference A))) (mul_op *) (factor (primary (component_reference C)))) (add_op +) (term (factor (primary (component_reference B))) (mul_op *) (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (statement (component_reference ksin1) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference B))) (mul_op *) (factor (primary (component_reference C)))) (add_op -) (term (factor (primary (component_reference A))) (mul_op *) (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (statement (component_reference angle1) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name atan2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference ksin1)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference kcos1)))))))))))))) )))))))))))) (comment string_comment)) ; (statement (component_reference kcos2) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference A))) (mul_op *) (factor (primary (component_reference C)))) (add_op -) (term (factor (primary (component_reference B))) (mul_op *) (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (statement (component_reference ksin2) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference B))) (mul_op *) (factor (primary (component_reference C)))) (add_op +) (term (factor (primary (component_reference A))) (mul_op *) (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (statement (component_reference angle2) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name atan2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference ksin2)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference kcos2)))))))))))))) )))))))))))) (comment string_comment)) ; (statement (if_statement if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name abs) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angle1)))) (add_op -) (term (factor (primary (component_reference angle_guess))))))))))))) )))))) (rel_op <=) (arithmetic_expression (term (factor (primary (name abs) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angle2)))) (add_op -) (term (factor (primary (component_reference angle_guess))))))))))))) )))))))))))) then (statement (component_reference positiveBranch) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))) (comment string_comment)) ; else (statement (component_reference positiveBranch) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;)) end selectBranch)))) ;) (equation_section initial equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference positiveBranch)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name selectBranch) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference lengthConstraint)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Cv . from_deg) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi_offset)))) (add_op +) (term (factor (primary (component_reference phi_guess))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_a)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_b))))))))))))))))) )))))))))))) (comment string_comment)) ;) (equation_section equation (equation (name Connections . branch) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))))) )) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference axis . tau)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference tau))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference axis . phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing . phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angle)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Cv . from_deg) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi_offset))))))))))))) ))))) (add_op +) (term (factor (primary (component_reference phi))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . planarRotation) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angle)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angle))))))))))))) )))))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . absoluteRotation) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))) (add_op +) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))) (add_op +) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference axisTorqueBalance))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference tau)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference frame_b . t))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e_r_a)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference r_a))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e_r_b)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference r_b))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference A)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 2)) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_b))) (mul_op *) (factor (primary (component_reference r_a)))) (add_op -) (term (factor (primary (component_reference e_r_b))) (mul_op *) (factor (primary (component_reference e_r_a)))))))))))) ))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference B)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2)) (mul_op *) (factor (primary (component_reference r_b))) (mul_op *) (factor (primary (name cross) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_a)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference C)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_a))) (mul_op *) (factor (primary (component_reference r_a)))) (add_op +) (term (factor (primary (component_reference r_b))) (mul_op *) (factor (primary (component_reference r_b)))) (add_op -) (term (factor (primary (component_reference lengthConstraint))) (mul_op *) (factor (primary (component_reference lengthConstraint)))) (add_op -) (term (factor (primary 2)) (mul_op *) (factor (primary (component_reference e_r_b))) (mul_op *) (factor (primary (component_reference e_r_a))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference A))) (mul_op *) (factor (primary (component_reference A)))) (add_op +) (term (factor (primary (component_reference B))) (mul_op *) (factor (primary (component_reference B))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1a)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1)))) (add_op -) (term (factor (primary (component_reference C))) (mul_op *) (factor (primary (component_reference C))))))))))) (comment string_comment)) ; (equation (name assert) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1a))))) (rel_op >) (arithmetic_expression (term (factor (primary 1.e-10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "\nSingular position of loop (either no or two analytic solutions;\nthe mechanism has lost one-degree-of freedom in this position).\nTry first to use another Modelica.Mechanics.MultiBody.Joints.Assemblies.JointXXX component.\nIn most cases it is best that the joints outside of the JointXXX\ncomponent are revolute and NOT prismatic joints. If this also\nlead to singular positions, it could be that this kinematic loop\ncannot be solved analytically. In this case you have to build\nup the loop with basic joints (NO aggregation JointXXX components)\nand rely on dynamic state selection, i.e., during simulation\nthe states will be dynamically selected in such a way that in no\nposition a degree of freedom is lost.\n"))))))))))))) )) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1b)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . Internal . maxWithoutEvent) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1a)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1.0e-12))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k2)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name sqrt) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1b))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference kcos_angle)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference A))) (mul_op *) (factor (primary (component_reference C)))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference positiveBranch))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference B))))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference B))))))))))))) ))) (mul_op *) (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference ksin_angle)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference B))) (mul_op *) (factor (primary (component_reference C)))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference positiveBranch))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference A))))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference A))))))))))))) ))) (mul_op *) (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angle)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Math . atan2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference ksin_angle)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference kcos_angle)))))))))))))) )))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name defaultConnectionStructurallyInconsistent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name preferredView) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "info"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Obsolete model that is not balanced. Use instead Modelica.Mechanics.MultiBody.Joints.Internal.RevoluteWithLengthConstraint"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 139))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 168))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 137))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 111))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 142))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 108))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 147))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 69))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "n=%n")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 41))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 9))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 29))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 9))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) })))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 51))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) })))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . VerticalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) )))))))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 41))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 9))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 29))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 9))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) })))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 51))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) })))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . VerticalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) )))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nJoint where frame_b rotates around axis n which is fixed in frame_a.\nThe two frames coincide when \"phi + phi_offset = 0\", where\n\"phi_offset\" is a parameter with a zero default\nand \"phi\" is the rotation angle.\n</p>\n<p>\nThis variant of the revolute joint is designed to work together\nwith a length constraint in a kinematic loop. This means that the\nangle of the revolute joint, phi, is computed such that the\nlength constraint is fulfilled.\n</p>\n<p>\n<b>Usually, this joint should not be used by a user of the MultiBody\nlibrary. It is only provided to built-up the Modelica.Mechanics.MultiBody.Joints.Assemblies.JointXYZ\njoints.</b>\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end RevoluteWithLengthConstraint)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier PrismaticWithLengthConstraint (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Joints.Internal.PrismaticWithLengthConstraint") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import Cv = (name Modelica . SIunits . Conversions) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . MultiBody . Interfaces . PartialTwoFrames))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Translational . Interfaces . Flange_a)) (component_list (component_declaration (declaration axis) (comment (string_comment "1-dim. translational flange that drives the joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Translational . Interfaces . Flange_b)) (component_list (component_declaration (declaration bearing) (comment (string_comment "1-dim. translational flange of the drive bearing") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration position_a (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_a to frame_a side of length constraint, resolved in frame_a of revolute joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 140))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealInput)) (component_list (component_declaration (declaration position_b (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_b to frame_b side of length constraint, resolved in frame_b of revolute joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 140))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration length (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Fixed length of length constraint")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Modelica . Mechanics . MultiBody . Types . Axis)) (component_list (component_declaration (declaration n (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) (comment (string_comment "Axis of translation resolved in frame_a (= same as in frame_b)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Evaluate) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration s_offset (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment "Relative distance offset (distance between frame_a and frame_b = s(t) + s_offset)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration s_guess (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment "Select the configuration such that at initial time |s(t0)-s_guess|is minimal")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Modelica . Mechanics . MultiBody . Types . Axis)) (component_list (component_declaration (declaration boxWidthDirection (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) (comment (string_comment "Vector in width direction of box, resolved in frame_a") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Evaluate) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Distance)) (component_list (component_declaration (declaration boxWidth (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultJointWidth))))))))))))) (comment (string_comment "Width of prismatic joint box") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Distance)) (component_list (component_declaration (declaration boxHeight (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference boxWidth))))))))))))) (comment (string_comment "Height of prismatic joint box") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Modelica . Mechanics . MultiBody . Types . Color)) (component_list (component_declaration (declaration boxColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . JointColor))))))))))))) (comment (string_comment "Color of prismatic joint box") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Modelica . Mechanics . MultiBody . Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration axisForceBalance (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if force balance of flange axis with the frame_b connector (axis.f = -e*frame_b.f) shall be defined. Otherwise this equation has to be provided outside of this joint") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Advanced"))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element final (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration positiveBranch (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name fixed) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment)))) )))) (comment (string_comment "Selection of one of the two solutions of the non-linear constraint equation")))))) ; (element final (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration e (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable each final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "1"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Math . Vectors . normalize) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference n))))))))))))) )))))))))))))) (comment (string_comment "Unit vector in direction of translation axis, resolved in frame_a")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration s) (comment (string_comment "Relative distance between frame_a and frame_b along axis n = s + s_offset)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration distance) (comment (string_comment "Relative distance between frame_a and frame_b along axis n")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_rel_a (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_a to frame_b resolved in frame_a")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Force)) (component_list (component_declaration (declaration f) (comment (string_comment "= axis.f (driving force in the axis)")))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_a (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference position_a))))))))))))) (comment (string_comment "Position vector from frame_a to frame_a side of length constraint, resolved in frame_a of revolute joint")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_b (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference position_b))))))))))))) (comment (string_comment "Position vector from frame_b to frame_b side of length constraint, resolved in frame_b of revolute joint")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Position)) (component_list (component_declaration (declaration rbra (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "= rb - ra")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration B) (comment (string_comment "Coefficient B of equation: s*s + B*s + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration C) (comment (string_comment "Coefficient C of equation: s*s + B*s + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1) (comment (string_comment "Constant of quadratic equation solution")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k2) (comment (string_comment "Constant of quadratic equation solution")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1a (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name start) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1b) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Shape)) (component_list (component_declaration (declaration box (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name shapeType) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "box"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference boxColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name length) (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name noEvent) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name abs) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference s)))) (add_op +) (term (factor (primary (component_reference s_offset))))))))))))) )))))) (rel_op >) (arithmetic_expression (term (factor (primary 1.e-6)))))))))))) )))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference s)))) (add_op +) (term (factor (primary (component_reference s_offset))))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1.e-6)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name width) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference boxWidth)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name height) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference boxHeight)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name lengthDirection) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name widthDirection) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference boxWidthDirection)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ; (element (class_definition (class_prefixes function) (class_specifier (long_class_specifier selectBranch (string_comment "Determine branch which is closest to initial angle=0") (composition (element_list (element (import_clause import (name Modelica . Math) .* (comment string_comment))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Length)) (component_list (component_declaration (declaration L) (comment (string_comment "Length of length constraint")))))) ; (element (component_clause (type_prefix input) (type_specifier (name Real)) (component_list (component_declaration (declaration e (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable each final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "1"))))))))))) string_comment)))) )))) (comment (string_comment "Unit vector along axis of translation, resolved in frame_a (= same in frame_b)")))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration d_guess) (comment (string_comment "Select the configuration such that at initial time |d-d_guess|is minimal (d: distance between origin of frame_a and origin of frame_b)")))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_a (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_a to frame_a side of length constraint, resolved in frame_a of prismatic joint")))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_b (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Position vector from frame_b to frame_b side of length constraint, resolved in frame_b of prismatic joint")))))) ; (element (component_clause (type_prefix output) (type_specifier (name Boolean)) (component_list (component_declaration (declaration positiveBranch) (comment (string_comment "Branch of the initial solution")))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Position)) (component_list (component_declaration (declaration rbra (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "= rb - ra")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration B) (comment (string_comment "Coefficient B of equation: d*d + B*d + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration C) (comment (string_comment "Coefficient C of equation: d*d + B*d + C = 0")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k1) (comment (string_comment "Constant of quadratic equation solution")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration k2) (comment (string_comment "Constant of quadratic equation solution")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration d1) (comment (string_comment "solution 1 of quadratic equation")))))) ; (element (component_clause type_prefix (type_specifier (name Real)) (component_list (component_declaration (declaration d2) (comment (string_comment "solution 2 of quadratic equation")))))) ;) (algorithm_section algorithm (statement (component_reference rbra) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_b)))) (add_op -) (term (factor (primary (component_reference r_a))))))))))) (comment string_comment)) ; (statement (component_reference B) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2)) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference rbra)))))))))))) ))))))))))) (comment string_comment)) ; (statement (component_reference C) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference rbra))) (mul_op *) (factor (primary (component_reference rbra)))) (add_op -) (term (factor (primary (component_reference L))) (mul_op *) (factor (primary (component_reference L))))))))))) (comment string_comment)) ; (statement (component_reference k1) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference B))) (mul_op /) (factor (primary 2)))))))))) (comment string_comment)) ; (statement (component_reference k2) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name sqrt) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1))) (mul_op *) (factor (primary (component_reference k1)))) (add_op -) (term (factor (primary (component_reference C))))))))))))) )))))))))))) (comment string_comment)) ; (statement (component_reference d1) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference k1)))) (add_op +) (term (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (statement (component_reference d2) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference k1)))) (add_op -) (term (factor (primary (component_reference k2))))))))))) (comment string_comment)) ; (statement (if_statement if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name abs) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference d1)))) (add_op -) (term (factor (primary (component_reference d_guess))))))))))))) )))))) (rel_op <=) (arithmetic_expression (term (factor (primary (name abs) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference d2)))) (add_op -) (term (factor (primary (component_reference d_guess))))))))))))) )))))))))))) then (statement (component_reference positiveBranch) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))) (comment string_comment)) ; else (statement (component_reference positiveBranch) := (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;)) end selectBranch)))) ;) (equation_section initial equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference positiveBranch)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name selectBranch) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference length)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference s_offset)))) (add_op +) (term (factor (primary (component_reference s_guess)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_a)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_b))))))))))))))))) )))))))))))) (comment string_comment)) ;) (equation_section equation (equation (name Connections . branch) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))))) )) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference axis . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference axis . s)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference s))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing . s)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference distance)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference s_offset)))) (add_op +) (term (factor (primary (component_reference s))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_a)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference distance))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))) (add_op +) (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_a)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))) (add_op +) (term (factor (primary (component_reference frame_b . f))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) ))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))) (add_op +) (term (factor (primary (component_reference frame_b . t)))) (add_op +) (term (factor (primary (name cross) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_a)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference axisForceBalance))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference frame_b . f))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference rbra)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_b)))) (add_op -) (term (factor (primary (component_reference r_a))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference B)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2)) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference e))) (mul_op *) (factor (primary (component_reference rbra)))))))))))) ))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference C)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference rbra))) (mul_op *) (factor (primary (component_reference rbra)))) (add_op -) (term (factor (primary (component_reference length))) (mul_op *) (factor (primary (component_reference length))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference B))) (mul_op /) (factor (primary 2)))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1a)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1))) (mul_op *) (factor (primary (component_reference k1)))) (add_op -) (term (factor (primary (component_reference C))))))))))) (comment string_comment)) ; (equation (name assert) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name noEvent) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1a))))) (rel_op >) (arithmetic_expression (term (factor (primary 1.e-10)))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "\nSingular position of loop (either no or two analytic solutions;\nthe mechanism has lost one-degree-of freedom in this position).\nTry first to use another Modelica.Mechanics.MultiBody.Joints.Assemblies.JointXXX component.\nIf this also lead to singular positions, it could be that this\nkinematic loop cannot be solved analytically with a fixed state\nselection. In this case you have to build up the loop with\nbasic joints (NO aggregation JointXXX components) and rely on\ndynamic state selection, i.e., during simulation the states will\nbe dynamically selected in such a way that in no position a\ndegree of freedom is lost.\n"))))))))))))) )) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1b)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . Internal . maxWithoutEvent) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1a)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1.0e-12))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k2)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name sqrt) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k1b))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference distance)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference k1)))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference positiveBranch))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference k2))))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference k2))))))))))))) ))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name defaultConnectionStructurallyInconsistent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name preferredView) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "info"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Obsolete model that is not balanced. Use instead Modelica.Mechanics.MultiBody.Joints.Internal.PrismaticWithLengthConstraint"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 136))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 170))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 140))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 113))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 136))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 116))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 153))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 77))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "n=%n")))))))))))))))) ))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 67))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 67))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 31))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 68))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 68))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 81))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "s")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 67))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 67))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 39))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 64))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 29))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 67))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 39))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 39))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 64))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 77))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 43))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 85))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "s_offset")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 71))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 51))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 73))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 33))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 64))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 67))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 64))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . None))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid))))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 42))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 91))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 57))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "f"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 21))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 78))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 21))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 72))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 21))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 78))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 8))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 31))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 21))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 6))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "f"))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 78))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 75))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 72))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 78))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 64))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 64))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 67))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 64))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 61))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 67))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 63))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 37))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "s")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) )))))))))))))))))))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nJoint where frame_b is translated along axis n which is fixed in frame_a.\nThe two frames coincide when \"s + s_offset = 0\", where\n\"s_offset\" is a parameter with a zero default\nand \"s\" is the relative distance.\n</p>\n<p>\nThis variant of the prismatic joint is designed to work together\nwith a length constraint in a kinematic loop. This means that the\nrelative distance \"s\" of the joint is computed such that the\nlength constraint is fulfilled.\n</p>\n<p>\n<b>Usually, this joint should not be used by a user of the MultiBody\nlibrary. It is only provided to built-up the Modelica.Mechanics.MultiBody.Joints.Assemblies.JointXYZ\njoints.</b>\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end PrismaticWithLengthConstraint)))) ;)) end Internal)))) ;)) end Joints)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Sensors (string_comment "Sensors to measure variables") (composition (element_list (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier AbsoluteSensor (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Sensors.AbsoluteSensor") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Frames) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Types) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . MultiBody . Interfaces . PartialAbsoluteSensor) (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name n_out) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))))))))))) )))))))))))) string_comment)))) )))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Interfaces . Frame_resolve)) (component_list (component_declaration (declaration frame_resolve) (comment (string_comment "If connected, the output signals are resolved in this frame") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 270))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled (show arrow)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration resolveInFrame_a (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, if vectors are resolved in frame_a, otherwise in the world frame (if connector frame_resolve is connected, vectors are resolved in frame_resolve)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_r_abs (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, to measure the position vector from the origin of the world frame to the origin of frame_a in [m]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_v_abs (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the absolute velocity of the origin of frame_a in [m/s]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_a_abs (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the absolute acceleration of the origin of frame_a in [m/s^2]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_angles (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the 3 rotation angles to rotate the world frame into frame_a along the axes defined in 'sequence' below in [rad]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_w_abs (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the absolute angular velocity of frame_a in [rad/s]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_z_abs (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the absolute angular acceleration to frame_a in [rad/s^2]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Types . RotationSequence)) (component_list (component_declaration (declaration sequence (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name max) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))))) }))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))))) })))))))))))) (comment (string_comment " Angles are returned to rotate world frame around axes sequence[1], sequence[2] and finally sequence[3] into frame_a") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Evaluate) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if get_angles = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration guessAngle1 (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment " Select angles[1] such that abs(angles[1] - guessAngle1) is a minimum") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if get_angles = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration arrowDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultArrowDiameter))))))))))))) (comment (string_comment " Diameter of arrow from world frame to frame_a") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration arrowColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . SensorColor))))))))))))) (comment (string_comment " Color of arrow from world frame to frame_a") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_abs (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or position vector from origin of the world frame to origin of frame_a (resolved in frame_resolve, frame_a or world frame)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Velocity)) (component_list (component_declaration (declaration v_abs (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or velocity of origin of frame_a with respect to origin of world frame (resolved in frame_resolve, frame_a or world frame)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Acceleration)) (component_list (component_declaration (declaration a_abs (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or acceleration of origin of frame_a with respect to origin of word frame (resolved in frame_resolve, frame_a or world frame)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration angles (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or angles to rotate world frame into frame_a via 'sequence'")))))) ; (element (component_clause type_prefix (type_specifier (name SI . AngularVelocity)) (component_list (component_declaration (declaration w_abs (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or angular velocity of frame_a with respect to world frame (resolved in frame_resolve, frame_a or world frame)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . AngularAcceleration)) (component_list (component_declaration (declaration z_abs (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or angular acceleration of frame_a with respect to world frame (resolved in frame_resolve, frame_a or world frame)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Velocity)) (component_list (component_declaration (declaration v_abs_0 (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or absolute velocity of origin of frame_a resolved in world frame")))))) ; (element (component_clause type_prefix (type_specifier (name SI . AngularVelocity)) (component_list (component_declaration (declaration w_abs_0 (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or absolute angular velocity of frame_a resolved in world frame")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i1 (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i2 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i3 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i4 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i5 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i6 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_abs))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5)))))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Arrow)) (component_list (component_declaration (declaration arrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference arrowDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference arrowColor)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ;) (equation_section equation (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angles)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . axesRotationsAngles) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference sequence)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference guessAngle1))))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angles)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 1)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_abs)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0))))))))))))) ))))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_abs)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . angularVelocity1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs_0)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs_0))))))))))))) ))))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . nullRotation) (function_call_args ( )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_abs))))))))))) then (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_abs)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0))))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_abs))))))))))) then (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0))))))))))))) ))))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs_0))))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_abs)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_abs))))))))))) then (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . angularVelocity2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . angularVelocity1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R))))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_abs)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_abs))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_abs))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_abs))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angles))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_abs))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_abs))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i6))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i6)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_abs))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Based on a packed result signal which is not a good design. Use instead Modelica.Mechanics.MultiBody.Sensors.AbsoluteSensor"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 19))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 109))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "resolve")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 132))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 96))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 27))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "a")))))))))))))))) )))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 82))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 82))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 98))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nAbsolute kinematic quantities of frame_a are\ncomputed and provided at the output signal connector <b>y</b>\nin packed format in the order\n</p>\n<ol>\n<li> absolute position vector (= r_abs)</li>\n<li> absolute velocity vector (= v_abs)</li>\n<li> absolute acceleration vector (= a_abs)</li>\n<li> 3 angles to rotate the world frame into frame_a (= angles)</li>\n<li> absolute angular velocity vector (= w_abs)</li>\n<li> absolute angular acceleration vector (= z_abs)</li>\n</ol>\n<p>\nFor example, if parameters <b>get_v</b> and <b>get_w</b>\nare <b>true</b> and all other get_XXX parameters are <b>false</b>, then\ny contains 6 elements:\n</p>\n<pre>\n y[1:3] = absolute velocity\n y[4:6] = absolute angular velocity\n</pre>\n<p>\nIn the following figure the animation of an AbsoluteSensor\ncomponent is shown. The light blue coordinate system is\nframe_a and the yellow arrow is the animated sensor.\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Sensors/AbsoluteSensor.png\">\n\n<p>\nIf <b>frame_resolve</b> is connected to another frame, then the\nprovided absolute kinematic vectors are resolved in this frame.\nIf <b>frame_resolve</b> is <b>not</b> connected then the\ncoordinate system in which the relative quantities are\nresolved is defined by parameter <b>resolveInFrame_a</b>.\nIf this parameter is <b>true</b>, then the\nprovided kinematic vectors are resolved in frame_a of this\ncomponent. Otherwise, the kinematic vectors are resolved in\nthe world frame. For example, if frame_resolve is not\nconnected and if resolveInFrame_a = <b>false</b>, and\nget_v = <b>true</b>, then\n</p>\n<pre>\n  y = <b>der</b>(frame_a.r) // resolved in world frame\n</pre>\n<p>\nis returned, i.e., the derivative of the distance frame_a.r_0\nfrom the origin of the world frame to the origin of frame_a,\nresolved in the world frame.\n</p>\n<p>\nNote, the cut-force and the cut-torque in frame_resolve are\nalways zero, whether frame_resolve is connected or not.\n</p>\n<p>\nIf <b>get_angles</b> = <b>true</b>, the 3 angles to rotate the world\nframe into frame_a along the axes defined by parameter <b>sequence</b>\nare returned. For example, if sequence = {3,1,2} then the world frame is\nrotated around angles[1] along the z-axis, afterwards it is rotated\naround angles[2] along the x-axis, and finally it is rotated around\nangles[3] along the y-axis and is then identical to frame_a.\nThe 3 angles are returned in the range\n</p>\n<pre>\n    -<font face=\"Symbol\">p</font> &lt;= angles[i] &lt;= <font face=\"Symbol\">p</font>\n</pre>\n<p>\nThere are <b>two solutions</b> for \"angles[1]\" in this range.\nVia parameter <b>guessAngle1</b> (default = 0) the\nreturned solution is selected such that |angles[1] - guessAngle1| is\nminimal. The transformation matrix between the world frame and\nframe_a may be in a singular configuration with respect to \"sequence\", i.e.,\nthere is an infinite number of angle values leading to the same\ntransformation matrix. In this case, the returned solution is\nselected by setting angles[1] = guessAngle1. Then angles[2]\nand angles[3] can be uniquely determined in the above range.\n</p>\n<p>\nNote, that parameter <b>sequence</b> has the restriction that\nonly values 1,2,3 can be used and that sequence[1] &ne; sequence[2]\nand sequence[2] &ne; sequence[3]. Often used values are:\n</p>\n<pre>\n  sequence = <b>{1,2,3}</b>  // Cardan angle sequence\n           = <b>{3,1,3}</b>  // Euler angle sequence\n           = <b>{3,2,1}</b>  // Tait-Bryan angle sequence\n</pre>\n<p>\nExact definition of the returned quantities:\n</p>\n<ol>\n<li>r_abs is vector frame_a.r_0, resolved according to table below.</li>\n<li>v_abs is vector <b>der</b>(frame_a.r_0), resolved according to table below.</li>\n<li>a_abs is vector <b>der</b>(<b>der</b>(frame_a.r_0)), resolved according to\n            table below.</li>\n<li>angles is a vector of 3 angles such that\n    frame_a.R = Frames.axesRotations(sequence, angles).</li>\n<li>w_abs is vector Modelica.Mechanics.MultiBody.Frames.angularVelocity1(frame_a.R, <b>der</b>(frame_a.R)),\n            resolved according to table below.</li>\n<li>z_abs is vector <b>der</b>(w_abs) (= derivative of absolute angular\n            velocity of frame_a with respect to the world frame,\n            resolved according to table below).</li>\n</ol>\n<table border=1 cellspacing=0 cellpadding=2>\n  <tr><th><b><i>frame_resolve is</i></b></th>\n      <th><b><i>resolveInFrame_a =</i></b></th>\n      <th><b><i>vector is resolved in</i></b></th>\n  </tr>\n  <tr><td valign=\"top\">connected</td>\n      <td valign=\"top\">true</td>\n      <td valign=\"top\"><b>frame_resolve</b></td>\n  </tr>\n  <tr><td valign=\"top\">connected</td>\n      <td valign=\"top\">false</td>\n      <td valign=\"top\"><b>frame_resolve</b></td>\n  </tr>\n  <tr><td valign=\"top\">not connected</td>\n      <td valign=\"top\">true</td>\n      <td valign=\"top\"><b>frame_a</b></td>\n  </tr>\n  <tr><td valign=\"top\">not connected</td>\n      <td valign=\"top\">false</td>\n      <td valign=\"top\"><b>world frame</b></td>\n  </tr>\n</table><br>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end AbsoluteSensor)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier RelativeSensor (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Sensors.RelativeSensor") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Frames) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Types) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . MultiBody . Interfaces . PartialRelativeSensor) (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name n_out) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)) (mul_op *) (factor (primary ( (output_expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))) (add_op +) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) )))))))))))) )))))))))))) string_comment)))) )))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Interfaces . Frame_resolve)) (component_list (component_declaration (declaration frame_resolve) (comment (string_comment "If connected, the output signals are resolved in this frame") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 270))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled (show arrow)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration resolveInFrame_a (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if relative vectors from frame_a to frame_b are resolved before differentiation in frame_a, otherwise in frame_b. If frame_resolve is connected, the vector and its derivatives are resolved in frame_resolve")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_r_rel (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, to measure the relative position vector from the origin of frame_a to the origin of frame_b in [m]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_v_rel (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the relative velocity of the origin of frame_b with respect to frame_a in [m/s]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_a_rel (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the relative acceleration of the origin of frame_b with respect to frame_a in [m/s^2]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_angles (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the 3 rotation angles to rotate frame_a into frame_b along the axes defined in 'sequence' below in [rad]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_w_rel (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the relative angular velocity of frame_b with respect to frame_a in [rad/s]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration get_z_rel (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false)))))))))))) (comment (string_comment "= true, to measure the relative angular acceleration of frame_b with respect to frame_a in [rad/s^2]")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Types . RotationSequence)) (component_list (component_declaration (declaration sequence (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name max) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))))) }))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))))) })))))))))))) (comment (string_comment " Angles are returned to rotate frame_a around axes sequence[1], sequence[2] and finally sequence[3] into frame_b") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Evaluate) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if get_angles = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration guessAngle1 (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment " Select angles[1] such that abs(angles[1] - guessAngle1) is a minimum") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if get_angles = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration arrowDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultArrowDiameter))))))))))))) (comment (string_comment " Diameter of relative arrow from frame_a to frame_b") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration arrowColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . SensorColor))))))))))))) (comment (string_comment " Color of relative arrow from frame_a to frame_b") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name tab) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Animation"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_rel (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or relative position vector (resolved in frame_a, frame_b or frame_resolve)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Velocity)) (component_list (component_declaration (declaration v_rel (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or relative velocity vector (resolved in frame_a, frame_b or frame_resolve")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Acceleration)) (component_list (component_declaration (declaration a_rel (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or relative acceleration vector (resolved in frame_a, frame_b or frame_resolve")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Angle)) (component_list (component_declaration (declaration angles (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or angles to rotate frame_a into frame_b via 'sequence'")))))) ; (element (component_clause type_prefix (type_specifier (name SI . AngularVelocity)) (component_list (component_declaration (declaration w_rel (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or relative angular velocity vector (resolved in frame_a, frame_b or frame_resolve")))))) ; (element (component_clause type_prefix (type_specifier (name SI . AngularAcceleration)) (component_list (component_declaration (declaration z_rel (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or relative angular acceleration vector (resolved in frame_a, frame_b or frame_resolve")))))) ; (element (component_clause type_prefix (type_specifier (name Frames . Orientation)) (component_list (component_declaration (declaration R_rel) (comment (string_comment "Dummy or relative orientation object from frame_a to frame_b")))))) ;) protected (element_list (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration r_rel_ab (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or relative position vector resolved in frame_a or frame_b")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Velocity)) (component_list (component_declaration (declaration der_r_rel_ab (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or derivative of relative position vector (resolved in frame_a, frame_b or frame_resolve)")))))) ; (element (component_clause type_prefix (type_specifier (name SI . AngularVelocity)) (component_list (component_declaration (declaration w_rel_ab (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Dummy or angular velocity of frame_b with respect to frame_a (resolved in frame_a or frame_b)")))))) ; (element (component_clause type_prefix (type_specifier (name Frames . Orientation)) (component_list (component_declaration (declaration R_resolve) (comment (string_comment "Dummy or relative orientation of frame_a or frame_b with respect to frame_resolve")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i1 (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i2 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i3 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i4 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i5 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4)))))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration i6 (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_rel))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5)))) (add_op +) (term (factor (primary 3)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5)))))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Arrow)) (component_list (component_declaration (declaration arrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))) (add_op -) (term (factor (primary (component_reference frame_a . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference arrowDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference arrowColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ;) (equation_section equation (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . relativeRotation) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . nullRotation) (function_call_args ( )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angles)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . axesRotationsAngles) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference sequence)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference guessAngle1))))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angles)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 1)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . relativeRotation) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . relativeRotation) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))) (add_op -) (term (factor (primary (component_reference frame_a . r_0)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))) (add_op -) (term (factor (primary (component_reference frame_a . r_0)))))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_ab)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference der_r_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_ab))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference der_r_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference der_r_rel_ab)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference der_r_rel_ab))))))))))))) ))))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_rel))))))))))) then (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . angularVelocity1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . angularVelocity2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel))))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel_ab)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel_ab))))))))))))) ))))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . r_0)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . nullRotation) (function_call_args ( )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_resolve)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . nullRotation) (function_call_args ( )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference der_r_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel_ab)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))) (add_op -) (term (factor (primary (component_reference frame_a . r_0)))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))) (add_op -) (term (factor (primary (component_reference frame_a . r_0)))))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_rel))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_rel)))))))) or (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_rel))))))))))) then (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . angularVelocity1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Frames . angularVelocity2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference R_rel))))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel))))))))))))) )))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_rel)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . f)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . t)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name zeros) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) )))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_r_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i1)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference r_rel))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_v_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i2)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference v_rel))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_a_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i3)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference a_rel))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_angles))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i4)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference angles))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_w_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i5)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference w_rel))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference get_z_rel))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference y (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i6))))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference i6)))) (add_op +) (term (factor (primary 2))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference z_rel))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Based on a packed result signal which is not a good design. Use instead Modelica.Mechanics.MultiBody.Sensors.RelativeSensor"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 94))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 157))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 49))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 26))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 74))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "resolve"))))))))))))))))) ))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 98))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 95)))))))))))))) })))))))))))) , (named_arguments (named_argument pattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference LinePattern . Dot))))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nRelative kinematic quantities between frame_a and frame_b are\ndetermined and provided at the output signal connector <b>y</b>\nin packed format in the order\n</p>\n<ol>\n<li> relative position vector (= r_rel)</li>\n<li> relative velocity vector (= v_rel)</li>\n<li> relative acceleration vector (= a_rel))</li>\n<li> 3 angles to rotate frame_a into frame_b (= angles)</li>\n<li> relative angular velocity vector (= w_rel)</li>\n<li> relative angular acceleration vector (= z_rel)</li>\n</ol>\n<p>\nFor example, if parameters <b>get_v_rel</b> and <b>get_w_rel</b>\nare <b>true</b> and all other get_XXX parameters are <b>false</b>, then\ny contains 6 elements:\n</p>\n<pre>\n y = relative velocity\n y = relative angular velocity\n</pre>\n<p>\nIn the following figure the animation of a RelativeSensor\ncomponent is shown. The light blue coordinate system is\nframe_a, the dark blue coordinate system is frame_b, and\nthe yellow arrow is the animated sensor.\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Sensors/RelativeSensor.png\">\n\n<p>\nIf parameter <b>resolveInFrame_a</b> = <b>true</b>, then the\nprovided relative kinematic vectors of frame_b with respect to\nframe_a are resolved before differentiation in frame_a. If this\nparameter is <b>false</b>, the relative kinematic vectors are\nresolved before differentiation in frame_b.\nIf <b>frame_resolve</b> is connected to another frame, then the\nkinematic vector as defined above and/or its required derivatives\nare resolved in frame_resolve. Note, derivatives\nof relative kinematic quantities are always performed with\nrespect to frame_a (<b>resolveInFrame_a</b> = <b>true</b>)\nor with respect to frame_b (<b>resolveInFrame_a</b> = <b>false</b>).\nThe resulting vector is then resolved in frame_resolve, if this\nconnector is connected.\n</p>\n<p>\nFor example, if frame_resolve is not\nconnected and if resolveInFrame_a = <b>false</b>, and\nget_v = <b>true</b>, then\n</p>\n<pre>\n  y = v_rel\n    = <b>der</b>(r_rel)\n</pre>\n<p>\nis returned (r_rel = resolve2(frame_b.R, frame_b.r_0 - frame_a.r0)), i.e.,\nthe derivative of the relative distance from frame_a to frame_b,\nresolved in frame_b. If frame_resolve is connected, then\n</p>\n<pre>\n  y = v_rel\n    = resolve2(frame_resolve.R, <b>der</b>(r_rel))\n</pre>\n<p>\nis returned, i.e., the previous relative velocity vector is\nadditionally resolved in frame_resolve.\n</p>\n<p>\nNote, the cut-force and the cut-torque in frame_resolve are\nalways zero, whether frame_resolve is connected or not.\n</p>\n<p>\nIf <b>get_angles</b> = <b>true</b>, the 3 angles to rotate frame_a\ninto frame_b along the axes defined by parameter <b>sequence</b>\nare returned. For example, if sequence = {3,1,2} then frame_a is\nrotated around angles[1] along the z-axis, afterwards it is rotated\naround angles[2] along the x-axis, and finally it is rotated around\nangles[3] along the y-axis and is then identical to frame_b.\nThe 3 angles are returned in the range\n</p>\n<pre>\n    -<font face=\"Symbol\">p</font> &lt;= angles[i] &lt;= <font face=\"Symbol\">p</font>\n</pre>\n<p>\nThere are <b>two solutions</b> for \"angles[1]\" in this range.\nVia parameter <b>guessAngle1</b> (default = 0) the\nreturned solution is selected such that |angles[1] - guessAngle1| is\nminimal. The relative transformation matrix between frame_a and\nframe_b may be in a singular configuration with respect to \"sequence\", i.e.,\nthere is an infinite number of angle values leading to the same relative\ntransformation matrix. In this case, the returned solution is\nselected by setting angles[1] = guessAngle1. Then angles[2]\nand angles[3] can be uniquely determined in the above range.\n</p>\n<p>\nNote, that parameter <b>sequence</b> has the restriction that\nonly values 1,2,3 can be used and that sequence[1] &ne; sequence[2]\nand sequence[2] &ne; sequence[3]. Often used values are:\n</p>\n<pre>\n  sequence = <b>{1,2,3}</b>  // Cardan angle sequence\n           = <b>{3,1,3}</b>  // Euler angle sequence\n           = <b>{3,2,1}</b>  // Tait-Bryan angle sequence\n</pre>\n<p>\nExact definition of the returned quantities\n(r_rel_ab, R_rel_ab, w_rel_ab are defined below the enumeration):\n</p>\n<ol>\n<li>r_rel is vector r_rel_ab, resolved according to table below.</li>\n<li>v_rel is vector <b>der</b>(r_rel_ab), resolved according to table below.</li>\n<li>a_rel is vector <b>der</b>(<b>der</b>(r_rel_ab)), resolved according to\n            table below.</li>\n<li>angles is a vector of 3 angles such that\n    R_rel_ab = Frames.axesRotations(sequence, angles).</li>\n<li>w_rel is vector w_rel_ab, resolved according to table below.</li>\n<li>z_rel is vector <b>der</b>(w_rel_ab), resolved according to table below.</li>\n</ol>\n<p>\nusing the auxiliary quantities\n</p>\n<ol>\n<li> r_rel_ab is vector frame_b.r_0 - frame_a.r_0, resolved either in frame_a or\n     frame_b according to parameter resolveInFrame_a.</li>\n<li> R_rel_ab is orientation object Frames.relativeRotation(frame_a.R, frame_b.R).</li>\n<li> w_rel_ab is vector Frames.angularVelocity1(R_rel_ab, der(R_rel_ab)), resolved either\n     in frame_a or frame_b according to parameter resolveInFrame_a.</li>\n</ol>\n<p>\nand resolved in the following frame\n</p>\n<table border=1 cellspacing=0 cellpadding=2>\n  <tr><th><b><i>frame_resolve is</i></b></th>\n      <th><b><i>resolveInFrame_a =</i></b></th>\n      <th><b><i>vector is resolved in</i></b></th>\n  </tr>\n  <tr><td valign=\"top\">connected</td>\n      <td valign=\"top\">true</td>\n      <td valign=\"top\"><b>frame_resolve</b></td>\n  </tr>\n  <tr><td valign=\"top\">connected</td>\n      <td valign=\"top\">false</td>\n      <td valign=\"top\"><b>frame_resolve</b></td>\n  </tr>\n  <tr><td valign=\"top\">not connected</td>\n      <td valign=\"top\">true</td>\n      <td valign=\"top\"><b>frame_a</b></td>\n  </tr>\n  <tr><td valign=\"top\">not connected</td>\n      <td valign=\"top\">false</td>\n      <td valign=\"top\"><b>frame_b</b></td>\n  </tr>\n</table>\n</HTML>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end RelativeSensor)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier CutForceAndTorque (string_comment "Obsolete model. Use instead Modelica.Mechanics.MultiBody.Sensors.CutForceAndTorque") (composition (element_list (element (import_clause import SI = (name Modelica . SIunits) (comment string_comment))) ; (element (import_clause import (name Modelica . Mechanics . MultiBody . Types) (comment string_comment))) ; (element (extends_clause extends (name ObsoleteModelica3 . Mechanics . MultiBody . Interfaces . PartialCutForceSensor))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealOutput)) (component_list (component_declaration (declaration load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ])) (comment (string_comment "Cut force and cut torque resolved in frame_a/frame_b or in frame_resolved, if connected") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration animation (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if animation shall be enabled (show force and torque arrow)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration positiveSign (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if force and torque with positive sign is returned (= frame_a.f/.t), otherwise with negative sign (= frame_b.f/.t)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration resolveInFrame_a (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true)))))))))))) (comment (string_comment "= true, if force and torque are resolved in frame_a/frame_b, otherwise in the world frame (if connector frame_resolve is connected, the force/torque is resolved in frame_resolve)")))))) ; (element (component_clause (type_prefix input) (type_specifier (name Real)) (component_list (component_declaration (declaration N_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1000)))))))))))) (comment (string_comment " Force arrow scaling (length = force/N_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Real)) (component_list (component_declaration (declaration Nm_to_m (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N.m/m"))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1000)))))))))))) (comment (string_comment " Torque arrow scaling (length = torque/Nm_to_m)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration forceDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultArrowDiameter))))))))))))) (comment (string_comment " Diameter of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name SI . Diameter)) (component_list (component_declaration (declaration torqueDiameter (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter))))))))))))) (comment (string_comment " Diameter of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration forceColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . ForceColor))))))))))))) (comment (string_comment " Color of force arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . Color)) (component_list (component_declaration (declaration torqueColor (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Defaults . TorqueColor))))))))))))) (comment (string_comment " Color of torque arrow") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause (type_prefix input) (type_specifier (name Types . SpecularCoefficient)) (component_list (component_declaration (declaration specularCoefficient (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . defaultSpecularCoefficient))))))))))))) (comment (string_comment "Reflection of ambient light (= 0: light is completely absorbed)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Dialog) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name group) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "if animation = true"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name enable) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name SI . Force)) (component_list (component_declaration (declaration force (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Cut force resolved in frame_a/frame_b or in frame_resolved, if connected")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Torque)) (component_list (component_declaration (declaration torque (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ])) (comment (string_comment "Cut torque resolved in frame_a/frame_b or in frame_resolved, if connected")))))) ;) protected (element_list (element outer (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . World)) (component_list (component_declaration (declaration world) (comment string_comment))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Integer)) (component_list (component_declaration (declaration csign (modification = (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference positiveSign))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op +) (term (factor (primary 1)))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 1))))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration f_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f))) (mul_op *) (factor (primary (component_reference csign))) (mul_op /) (factor (primary (component_reference N_to_m))))))))))))) (comment (string_comment "Force mapped from N to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name SI . Position)) (component_list (component_declaration (declaration t_in_m (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t))) (mul_op *) (factor (primary (component_reference csign))) (mul_op /) (factor (primary (component_reference Nm_to_m))))))))))))) (comment (string_comment "Torque mapped from Nm to m for animation")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . Arrow)) (component_list (component_declaration (declaration forceArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference forceColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference f_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference f_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . MultiBody . Visualizers . Advanced . DoubleArrow)) (component_list (component_declaration (declaration torqueArrow (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name diameter) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueDiameter)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torqueColor)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name specularCoefficient) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference specularCoefficient)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name R) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . R)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_b . r_0)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_tail) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference t_in_m)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name r_head) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference t_in_m)))))))))))) string_comment)))) )))) (condition_attribute if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference world . enableAnimation))))))) and (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference animation)))))))))))) (comment string_comment))))) ;) (equation_section equation (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 1)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference force)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))))))))))))) ))))))))))))))) )))) (mul_op *) (factor (primary (component_reference csign))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torque)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve2) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_resolve . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))))))))))))) ))))))))))))))) )))) (mul_op *) (factor (primary (component_reference csign))))))))))) (comment string_comment)) ; elseif (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference resolveInFrame_a))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference force)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f))) (mul_op *) (factor (primary (component_reference csign))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torque)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t))) (mul_op *) (factor (primary (component_reference csign))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference force)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . f)))))))))))))) )))) (mul_op *) (factor (primary (component_reference csign))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torque)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Modelica . Mechanics . MultiBody . Frames . resolve1) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . R)))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference frame_a . t)))))))))))))) )))) (mul_op *) (factor (primary (component_reference csign))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference force))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference load (array_subscripts [ (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))) : (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6))))))))))) ]))))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference torque))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Based on a packed result signal which is not a good design. Use instead Modelica.Mechanics.MultiBody.Sensors.CutForceAndTorque"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name preferredView) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "info"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nThe cut-force and cut-torque acting at the component to which frame_b is\nconnected are determined and provided at the output signal connector\n<b>load</b>:\n</p>\n<pre>\n  load[1:3] = frame_a.f;\n  load[4:6] = frame_a.t;\n</pre>\n<p>\nIf parameter <b>positiveSign</b> =\n<b>false</b>, the negative cut-force and negative\ncut-torque is provided (= frame_b.f and frame_b.t).\nIf <b>frame_resolve</b> is connected to another frame, then the\ncut-force and cut-torque are resolved in frame_resolve.\nIf <b>frame_resolve</b> is <b>not</b> connected then the\ncoordinate system in which the cut-force and cut-torque is resolved\nis defined by parameter <b>resolveInFrame_a</b>.\nIf this parameter is <b>true</b>, then the\ncut-force and cut-torque is resolved in frame_a, otherwise it is\nresolved in the world frame.\n</p>\n<p>\nIn the following figure the animation of a CutForceAndTorque\nsensor is shown. The dark blue coordinate system is frame_b,\nand the green arrows are the cut force and the cut torque,\nrespectively, acting at frame_b and\nwith negative sign at frame_a.\n</p>\n\n<IMG src=\"modelica://Modelica/Resources/Images/Mechanics/MultiBody/Sensors/CutForceAndTorque.png\">\n</HTML>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end CutForceAndTorque)))) ;)) end Sensors)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Types (string_comment "Constants and types with choices, especially to build menus") (composition (element_list (element (class_definition (class_prefixes type) (class_specifier (short_class_specifier AngularVelocity_degs = (base_prefix type_prefix) (name Modelica . Icons . TypeReal) (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name quantity) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "AngularVelocity"))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "deg/s"))))))))))) string_comment)))) )) (comment (string_comment "Obsolete type. Use Modelica.SIunits.AngularVelocity instead with an appropriate displayUnit") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Non SI-units should no longer be used. Use Modelica.SIunits.AngularVelocity instead with an appropriate displayUnit"))))))))))) string_comment)))) )))))))) ; (element (class_definition (class_prefixes type) (class_specifier (short_class_specifier AngularAcceleration_degs2 = (base_prefix type_prefix) (name Modelica . Icons . TypeReal) (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name quantity) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "AngularAcceleration"))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "deg/s2"))))))))))) string_comment)))) )) (comment (string_comment "Obsolete type. Use Modelica.SIunits.AngularAcceleration instead with an appropriate displayUnit") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Non SI-units should no longer be used. Use Modelica.SIunits.AngularAcceleration instead with an appropriate displayUnit"))))))))))) string_comment)))) )))))))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Init (string_comment "Obsolete type. This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . Enumeration))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration Free (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration PositionVelocity (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration SteadyState (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration Position (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration Velocity (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 5)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration VelocityAcceleration (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6)))))))))))) (comment string_comment))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration PositionVelocityAcceleration (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 7)))))))))))) (comment string_comment))))) ; (element (class_definition (class_prefixes type) (class_specifier (long_class_specifier Temp (string_comment "Obsolete type. This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu") (composition (element_list (element (extends_clause extends (name Modelica . Icons . TypeInteger))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name choices) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Init . Free)))))))))))) (string_comment "free (no initialization)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Init . PositionVelocity)))))))))))) (string_comment "initialize generalized position and velocity variables")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Init . SteadyState)))))))))))) (string_comment "initialize in steady state (velocity and acceleration are zero)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Init . Position)))))))))))) (string_comment "initialize only generalized position variable(s)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Init . Velocity)))))))))))) (string_comment "initialize only generalized velocity variable(s)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Init . VelocityAcceleration)))))))))))) (string_comment "initialize generalized velocity and acceleration variables")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . MultiBody . Types . Init . PositionVelocityAcceleration)))))))))))) (string_comment "initialize generalized position, velocity and acceleration variables"))))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n\n<table border=1 cellspacing=0 cellpadding=2>\n<tr><th><b>Types.Init.</b></th><th><b>Meaning</b></th></tr>\n<tr><td valign=\"top\">Free</td>\n    <td valign=\"top\">No initialization</td></tr>\n\n<tr><td valign=\"top\">PositionVelocity</td>\n    <td valign=\"top\">Initialize generalized position and velocity variables</td></tr>\n\n<tr><td valign=\"top\">SteadyState</td>\n    <td valign=\"top\">Initialize in steady state (velocity and acceleration are zero)</td></tr>\n\n<tr><td valign=\"top\">Position </td>\n    <td valign=\"top\">Initialize only generalized position variable(s)</td></tr>\n\n<tr><td valign=\"top\">Velocity</td>\n    <td valign=\"top\">Initialize only generalized velocity variable(s)</td></tr>\n\n<tr><td valign=\"top\">VelocityAcceleration</td>\n    <td valign=\"top\">Initialize generalized velocity and acceleration variables</td></tr>\n\n<tr><td valign=\"top\">PositionVelocityAcceleration</td>\n    <td valign=\"top\">Initialize generalized position, velocity and acceleration variables</td></tr>\n\n</table>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Temp)))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Init)))) ;)) end Types)))) ;)) end MultiBody)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Rotational (string_comment "Library to model 1-dimensional, rotational mechanical systems") (composition (element_list (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Interfaces (string_comment "Connectors and partial models for 1D rotational mechanical components") (composition (element_list (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier Rigid (string_comment "Base class for the rigid connection of two rotational 1D flanges") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Angle)) (component_list (component_declaration (declaration phi) (comment (string_comment "Absolute rotation angle of component (= flange_a.phi = flange_b.phi)")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_a)) (component_list (component_declaration (declaration flange_a) (comment (string_comment "(left) driving flange (flange axis directed INTO cut plane)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_b)) (component_list (component_declaration (declaration flange_b) (comment (string_comment "(right) driven flange (flange axis directed OUT OF cut plane)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_b . phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis is a 1D rotational component with two rigidly connected flanges,\ni.e., flange_a.phi = flange_b.phi. It is used e.g., to built up components\nwith inertia.\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Rigid)))) ; (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier Bearing (string_comment "Obsolete model. Use one of Modelica.Mechanics.Rotational.Interfaces.PartialXXX instead") (composition (element_list (element (extends_clause extends (name Modelica . Mechanics . Rotational . Interfaces . PartialTwoFlanges))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Torque)) (component_list (component_declaration (declaration tau_support) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_a)) (component_list (component_declaration (declaration bearing) (comment (string_comment "Flange of bearing") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "The Rotational library has now a new improved design with optional support connectors. Use Modelica.Mechanics.Rotational.Interfaces.PartialXXX instead."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) )))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis is a 1D rotational component with two flanges and an additional bearing flange.\nIt is a superclass for the two components TwoFlangesAndBearing and TwoFlangesAndBearingH.</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Bearing)))) ; (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier TwoFlangesAndBearing (string_comment "Obsolete model. Use one of Modelica.Mechanics.Rotational.Interfaces.PartialXXX instead") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Mechanics . Rotational . Interfaces . Bearing))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Angle)) (component_list (component_declaration (declaration phi_a) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Angle)) (component_list (component_declaration (declaration phi_b) (comment string_comment))))) ;) (equation_section equation (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 0)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing . phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing . tau)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference tau_support))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . tau)))) (add_op +) (term (factor (primary (component_reference flange_b . tau)))) (add_op +) (term (factor (primary (component_reference tau_support))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi_a)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . phi)))) (add_op -) (term (factor (primary (component_reference bearing . phi))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi_b)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_b . phi)))) (add_op -) (term (factor (primary (component_reference bearing . phi))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "The Rotational library has now a new improved design with optional support connectors. Use Modelica.Mechanics.Rotational.Interfaces.PartialXXX instead."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis is a 1D rotational component with two flanges and an additional bearing flange.\nIt is used e.g., to build up equation-based parts of a drive train.</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end TwoFlangesAndBearing)))) ; (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier TwoFlangesAndBearingH (string_comment "Obsolete model. Use one of Modelica.Mechanics.Rotational.Interfaces.PartialXXX instead") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Mechanics . Rotational . Interfaces . Bearing))) ; (element (component_clause type_prefix (type_specifier (name Adapter)) (component_list (component_declaration (declaration adapter (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name bearingConnected) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing))))))))))))) )))))) (rel_op >) (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )))) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) protected (element_list (element (class_definition encapsulated (class_prefixes model) (class_specifier (long_class_specifier Adapter string_comment (composition (element_list (element (import_clause import (name Modelica) (comment string_comment))) ; (element (import_clause import (name ObsoleteModelica3) (comment string_comment))) ; (element (import_clause import TwoFlanges = (name Modelica . Mechanics . Rotational . Interfaces . PartialTwoFlanges) (comment string_comment))) ; (element (extends_clause extends (name Modelica . Mechanics . Rotational . Interfaces . PartialTwoFlanges))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Boolean)) (component_list (component_declaration (declaration bearingConnected) (comment string_comment))))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_b . phi))))))))))) (comment string_comment)) ; (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearingConnected))))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . tau)))) (add_op +) (term (factor (primary (component_reference flange_b . tau))))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . phi))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name")))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))))))) ))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Adapter)))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference tau_support)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference adapter . flange_b . tau))))))))))) (comment string_comment)) ; (equation (connect_clause connect ( (component_reference adapter . flange_a) , (component_reference bearing) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) })))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "The Rotational library has now a new improved design with optional support connectors. Use Modelica.Mechanics.Rotational.Interfaces.PartialXXX instead."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis is a 1D rotational component with two flanges and an additional bearing flange.\nIt is used e.g., to build up parts of a drive train consisting\nof several base components.</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end TwoFlangesAndBearingH)))) ; (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier PartialSpeedDependentTorque (string_comment "Partial model of a torque acting at the flange (accelerates the flange)") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . AngularVelocity)) (component_list (component_declaration (declaration w (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange . phi))))))))))))) )))))))))))))) (comment (string_comment "Angular velocity at flange")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Torque)) (component_list (component_declaration (declaration tau (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange . tau))))))))))))) (comment (string_comment "accelerating torque acting at flange")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_b)) (component_list (component_declaration (declaration flange) (comment (string_comment "Flange on which torque is acting") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_a)) (component_list (component_declaration (declaration bearing) (comment (string_comment "Bearing at which the reaction torque (i.e., -flange.tau) is acting") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 130))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (equation_section equation (equation (if_equation if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name cardinality) (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing))))))))))))) )))))) (rel_op ==) (arithmetic_expression (term (factor (primary 0)))))))))) then (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing . phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))) (comment string_comment)) ; else (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference bearing . tau)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary (component_reference flange . tau))))))))))) (comment string_comment)) ; end if) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary false))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 96))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 96))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 140))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 92))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 76))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 36))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 54))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 62))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 14))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 88))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 92))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 26))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 64))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 62))))))))))))) })))))))))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 140))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 74))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 52))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 94))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nPartial model of torque dependent on speed that accelerates the flange.\n</p>\n</HTML>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end PartialSpeedDependentTorque)))) ; (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier AbsoluteSensor (string_comment "Obsolete model. Use Modelica.Mechanics.Rotational.Interfaces.PartialAbsoluteSensor instead and define a meaningful name for the output signal") (composition (element_list (element (extends_clause extends (name Modelica . Icons . RotationalSensor))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_a)) (component_list (component_declaration (declaration flange_a) (comment (string_comment "(left) flange to be measured (flange axis directed INTO cut plane)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealOutput)) (component_list (component_declaration (declaration y) (comment (string_comment "Sensor signal") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Use Modelica.Mechanics.Rotational.Interfaces.PartialAbsoluteSensor instead and define a meaningful name for the output signal."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis is the base class of a 1D rotational component with one flange and one\noutput signal y in order to measure an absolute kinematic quantity in the flange\nand to provide the measured signal as output signal for further processing\nwith the blocks of package Modelica.Blocks.\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 120))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name")))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))))))) )))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) }))))))))))))))) ))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end AbsoluteSensor)))) ; (element (class_definition (class_prefixes partial model) (class_specifier (long_class_specifier RelativeSensor (string_comment "Obsolete model. Use Modelica.Mechanics.Rotational.Interfaces.PartialRelativbeSensor instead and define a meaningful name for the output signal") (composition (element_list (element (extends_clause extends (name Modelica . Icons . RotationalSensor))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_a)) (component_list (component_declaration (declaration flange_a) (comment (string_comment "(left) driving flange (flange axis directed INTO cut plane)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Interfaces . Flange_b)) (component_list (component_declaration (declaration flange_b) (comment (string_comment "(right) driven flange (flange axis directed OUT OF cut plane)") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Blocks . Interfaces . RealOutput)) (component_list (component_declaration (declaration y) (comment (string_comment "Sensor signal") (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name origin) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 110))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name rotation) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "Use Modelica.Mechanics.Rotational.Interfaces.PartialRelativeSensor instead and define a meaningful name for the output signal."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis is a base class for 1D rotational components with two rigidly connected\nflanges and one output signal y in order to measure relative kinematic quantities\nbetween the two flanges or the cut-torque in the flange and\nto provide the measured signal as output signal for further processing\nwith the blocks of package Modelica.Blocks.\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 127)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name")))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))))))) ))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 90))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) }))))))))))))))) )))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end RelativeSensor)))) ;)) end Interfaces)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Types (string_comment "Constants and types with choices, especially to build menus") (composition (element_list (element (extends_clause extends (name Modelica . Icons . Library))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier Init (string_comment "Obsolete type. This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . Enumeration))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration NoInit (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "no initialization (phi_start, w_start are guess values)")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration SteadyState (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2)))))))))))) (comment (string_comment "steady state initialization (der(phi)=der(w)=0)")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialState (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) (comment (string_comment "initialization with phi_start, w_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialAngle (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))))))) (comment (string_comment "initialization with phi_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialSpeed (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 5)))))))))))) (comment (string_comment "initialization with w_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialAcceleration (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 6)))))))))))) (comment (string_comment "initialization with a_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialAngleAcceleration (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 7)))))))))))) (comment (string_comment "initialization with phi_start, a_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialSpeedAcceleration (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 8)))))))))))) (comment (string_comment "initialization with w_start, a_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialAngleSpeedAcceleration (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 9)))))))))))) (comment (string_comment "initialization with phi_start, w_start, a_start")))))) ; (element (class_definition (class_prefixes type) (class_specifier (long_class_specifier Temp (string_comment "Obsolete type. This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu") (composition (element_list (element (extends_clause extends (name Modelica . Icons . TypeInteger) (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name max) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 9))))))))))) string_comment)))) )))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Evaluate) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name choices) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . NoInit)))))))))))) (string_comment "no initialization (phi_start, w_start are guess values)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . SteadyState)))))))))))) (string_comment "steady state initialization (der(phi)=der(w)=0)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialState)))))))))))) (string_comment "initialization with phi_start, w_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialAngle)))))))))))) (string_comment "initialization with phi_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialSpeed)))))))))))) (string_comment "initialization with w_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialAcceleration)))))))))))) (string_comment "initialization with a_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialAngleAcceleration)))))))))))) (string_comment "initialization with phi_start, a_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialSpeedAcceleration)))))))))))) (string_comment "initialization with w_start, a_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialAngleSpeedAcceleration)))))))))))) (string_comment "initialization with phi_start, w_start, a_start"))))) ))) string_comment)))) ))) ;) end Temp)))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nType <b>Init</b> defines initialization of absolute rotational\nquantities.\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Init)))) ; (element (class_definition (class_prefixes package) (class_specifier (long_class_specifier InitRel (string_comment "Obsolete type. This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Icons . Enumeration))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration NoInit (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "no initialization (phi_rel_start, w_rel_start are guess values)")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration SteadyState (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2)))))))))))) (comment (string_comment "steady state initialization (der(phi_rel)=der(w_rel)=0)")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialState (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 3)))))))))))) (comment (string_comment "initialization with phi_rel_start, w_rel_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialAngle (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4)))))))))))) (comment (string_comment "initialization with phi_rel_start")))))) ; (element (component_clause (type_prefix constant) (type_specifier (name Integer)) (component_list (component_declaration (declaration InitialSpeed (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 5)))))))))))) (comment (string_comment "initialization with w_rel_start")))))) ; (element (class_definition (class_prefixes type) (class_specifier (long_class_specifier Temp (string_comment "Obsolete type. This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu") (composition (element_list (element (extends_clause extends (name Modelica . Icons . TypeInteger) (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name max) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 5))))))))))) string_comment)))) )))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "This is an emulated enumeration for initialization. Initialization is now defined with start/fixed values and appropriate support in the parameter menu"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Evaluate) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name choices) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . NoInit)))))))))))) (string_comment "no initialization (phi_rel_start, w_rel_start are guess values)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . SteadyState)))))))))))) (string_comment "steady state initialization (der(phi)=der(w)=0)")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialState)))))))))))) (string_comment "initialization with phi_rel_start, w_rel_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialAngle)))))))))))) (string_comment "initialization with phi_rel_start")))) , (argument (element_modification_or_replaceable (element_modification (name choice) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Mechanics . Rotational . Types . Init . InitialSpeed)))))))))))) (string_comment "initialization with w_rel_start"))))) ))) string_comment)))) ))) ;) end Temp)))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nType <b>Init</b> defines initialization of relative rotational\nquantities.\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end InitRel)))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preferredView) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "info"))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<HTML>\n<p>\nIn this package <b>types</b> and <b>constants</b> are defined that are used\nin library Modelica.Blocks. The types have additional annotation choices\ndefinitions that define the menus to be built up in the graphical\nuser interface when the type is used as parameter in a declaration.\n</p>\n</HTML>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Types)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier GearEfficiency (string_comment "Obsolete model. Use Modelica.Mechanics.Rotational.Components.LossyGear instead") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Mechanics . Rotational . Interfaces . TwoFlangesAndBearing))) ; (element (extends_clause extends (name ObsoleteModelica3 . Icons . ObsoleteModel))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration eta (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Constants . small)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name max) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Efficiency")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Angle)) (component_list (component_declaration (declaration phi) (comment string_comment))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . SIunits . Power)) (component_list (component_declaration (declaration power_a) (comment (string_comment "Energy flowing into flange_a (= power)")))))) ; (element (component_clause type_prefix (type_specifier (name Boolean)) (component_list (component_declaration (declaration driving_a) (comment (string_comment "True, if energy is flowing INTO and not out of flange flange_a")))))) ;) (equation_section equation (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi_a))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi_b))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference power_a)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . tau))) (mul_op *) (factor (primary der (function_call_args ( (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference phi))))))))))))) )))))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference driving_a)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference power_a))))) (rel_op >=) (arithmetic_expression (term (factor (primary 0)))))))))) (comment string_comment)) ; (equation (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_b . tau)))))))))) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary ( (output_expression_list (expression if (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference driving_a))))))))))) then (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference eta))) (mul_op *) (factor (primary (component_reference flange_a . tau))))))))))) else (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference flange_a . tau))) (mul_op /) (factor (primary (component_reference eta))))))))))))) ))))))))))) (comment string_comment)) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "This model can get stuck due when the torque direction varies, use Modelica.Mechanics.Rotational.Components.LossyGear instead."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name")))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) })))))))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "eta=%eta")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))))) )))))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nTHIS COMPONENT IS <b>OBSOLETE</b> and should <b>no longer be used</b>. It is only\nkept for <b>backward compatibility</b> purposes. Use model\nModelica.Mechanics.Rotational.LossyGear instead which implements\ngear efficiency in a much more reliable way.\n</p>\n<p>\nThis component consists of two rigidly connected flanges flange_a and flange_b without\ninertia where an <b>efficiency</b> coefficient <b>eta</b> reduces the driven\ntorque as function of the driving torque depending on the direction\nof the energy flow, i.e., energy is always lost. This can be seen as a\nsimple model of the Coulomb friction acting between the teeth of a\ngearbox.\n</p>\n<p>\nNote, that most gearbox manufacturers provide tables of the\nefficiency of a gearbox as function of the angular velocity\n(efficiency becomes zero, if the angular velocity is zero).\nHowever, such a table is practically useless for simulation purposes,\nbecause in gearboxes always two types of friction is present:\n(1) Friction in the <b>bearings</b> and (2) friction between\nthe teeth of the gear. (1) leads to a velocity dependent, additive\nloss-torque, whereas (2) leads to a torque-dependent reduction of the\ndriving torque. The gearbox manufacturers measure both effects\ntogether and determine the gear efficiency from it, although for\nsimulation purposes the two effects need to be separated.\nAssume for example that only constant bearing friction, i.e.,\nbearingTorque=const., is present, i.e.,\n</p>\n<pre>\n   (1)  loadTorque = motorTorque - sign(w)*bearingTorque\n</pre>\n<p>\nGearbox manufacturers use the loss-formula\n</p>\n<pre>\n   (2)  loadTorque = eta*motorTorque\n</pre>\n<p>\nComparing (1) and (2) gives a formula for the efficiency eta:\n</p>\n<pre>\n   eta = (1 - sign(w)*bearingTorque/motorTorque)\n</pre>\n<p>\nWhen the motorTorque becomes smaller as the bearingTorque,\n(2) is useless, because the efficiency is zero. To summarize,\nbe careful to determine the gear <b>efficiency</b> of this element\nfrom tables of the gear manufacturers.\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 96))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 96))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 21))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 29))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) })))))))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 16))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 83))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 84))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "rotation axis")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 12))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 8))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 81))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 8))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 71))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 12))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 78))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 7))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 76))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))))) })))))))))))))) ))))))))))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end GearEfficiency)))) ; (element (class_definition (class_prefixes model) (class_specifier (long_class_specifier Gear (string_comment "Obsolete model. Use Modelica.Mechanics.Rotational.Components.Gearbox instead") (composition (element_list (element (extends_clause extends (name ObsoleteModelica3 . Mechanics . Rotational . Interfaces . TwoFlangesAndBearingH))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration ratio (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "transmission ratio (flange_a.phi/flange_b.phi)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration eta (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Constants . small)))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name max) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "Gear efficiency")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration friction_pos (array_subscripts [ (subscript_ :) , (subscript_ (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2))))))))))) ]) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary [ (expression_list (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))) , (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) ])))))))))))) (comment (string_comment "[w,tau] positive sliding friction characteristic (w>=0)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration peak (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1)))))))))))) (comment (string_comment "peak*friction_pos[1,2] = maximum friction torque at zero velocity")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration c (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N.m/rad"))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference Modelica . Constants . small)))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 1.e5)))))))))))) (comment (string_comment "Gear elasticity (spring constant)")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Real)) (component_list (component_declaration (declaration d (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name unit) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "N.m.s/rad"))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment "(relative) gear damping")))))) ; (element (component_clause (type_prefix parameter) (type_specifier (name Modelica . SIunits . Angle)) (component_list (component_declaration (declaration b (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name min) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) string_comment)))) )) = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))) (comment (string_comment "Total backlash")))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Components . IdealGear)) (component_list (component_declaration (declaration gearRatio (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name ratio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference ratio)))))))))))) string_comment)))) )))) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name ObsoleteModelica3 . Mechanics . Rotational . GearEfficiency)) (component_list (component_declaration (declaration gearEfficiency (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name eta) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference eta)))))))))))) string_comment)))) )))) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Components . ElastoBacklash)) (component_list (component_declaration (declaration elastoBacklash (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name b) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference b)))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name c) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference c)))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name phi_rel0) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name d) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference d)))))))))))) string_comment)))) )))) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ; (element (component_clause type_prefix (type_specifier (name Modelica . Mechanics . Rotational . Components . BearingFriction)) (component_list (component_declaration (declaration bearingFriction (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable final (element_modification (name tau_pos) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference friction_pos)))))))))))) string_comment))) , (argument (element_modification_or_replaceable final (element_modification (name peak) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference peak)))))))))))) string_comment)))) )))) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Placement) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name transformation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment)))) )))))))) ;) (equation_section equation (equation (connect_clause connect ( (component_reference flange_a) , (component_reference gearRatio . flange_a) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ; (equation (connect_clause connect ( (component_reference gearRatio . flange_b) , (component_reference gearEfficiency . flange_a) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ; (equation (connect_clause connect ( (component_reference gearEfficiency . flange_b) , (component_reference bearingFriction . flange_a) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ; (equation (connect_clause connect ( (component_reference bearingFriction . flange_b) , (component_reference elastoBacklash . flange_a) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 30))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 50))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ; (equation (connect_clause connect ( (component_reference elastoBacklash . flange_b) , (component_reference flange_b) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ; (equation (connect_clause connect ( (component_reference gearEfficiency . bearing) , (component_reference adapter . flange_b) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))))))) }))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name color) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ; (equation (connect_clause connect ( (component_reference bearingFriction . support) , (component_reference adapter . flange_b) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ; (equation (connect_clause connect ( (component_reference gearRatio . support) , (component_reference adapter . flange_b) )) (comment string_comment (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Line) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name points) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 50))))))))))))) }))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name obsolete) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "This model can get stuck due when the torque direction varies, use Modelica.Mechanics.Rotational.Components.Gearbox instead."))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis component models the essential effects of a gearbox, in particular\ngear <b>efficiency</b> due to friction between the teeth, <b>bearing friction</b>,\ngear <b>elasticity</b> and <b>damping</b>, <b>backlash</b>.\nThe inertia of the gear wheels is not modeled. If necessary, inertia\nhas to be taken into account by connecting components of model Inertia\nto the left and/or the right flange.\n</p>\n\n</html>"))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Icon) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument lineThickness = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0.25)))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) })))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 46))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 90))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 80))))))))))))) })))))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Rectangle) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 10))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 192)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 10))))))))))))) }))))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . HorizontalCylinder))))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 40))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 40))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 20))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 60))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 20))))))))))))) })))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 110))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 70))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "%name=%ratio")))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 255)))))))))))))) })))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 160))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 150))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 120))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 0)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "c=%c")))))))))))))))) ))))))))))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Diagram) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name coordinateSystem) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name preserveAspectRatio) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary true))))))))))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name extent) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 100))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 100))))))))))))) }))))))))))))) }))))))))))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name graphics) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Text) (function_call_args ( (function_arguments (named_arguments (named_argument extent = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 2))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 29))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 46))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 22))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument textString = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "rotation axis")))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Polygon) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 25))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 4))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 27))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 4))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 23))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 4))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 25))))))))))))) }))))))))))))))) })))))))))))) , (named_arguments (named_argument lineColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillColor = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) })))))))))))) , (named_arguments (named_argument fillPattern = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (component_reference FillPattern . Solid)))))))))))))))))) ))))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary (name Line) (function_call_args ( (function_arguments (named_arguments (named_argument points = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 36))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 25))))))))))))) }))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (add_op -) (term (factor (primary 3))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 25))))))))))))) }))))))))))))) })))))))))))) , (named_arguments (named_argument color = (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary { (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128))))))))))) , (function_arguments (function_argument (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary 128)))))))))))))) }))))))))))))))) )))))))))))))))) }))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end Gear)))) ;)) end Rotational)))) ;)) end Mechanics)))) ;) (annotation annotation (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name uses) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name Modelica) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name version) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "3.2.2"))))))))))) string_comment)))) ))) string_comment)))) ))) string_comment))) , (argument (element_modification_or_replaceable (element_modification (name Documentation) (modification (class_modification ( (argument_list (argument (element_modification_or_replaceable (element_modification (name info) (modification = (expression (simple_expression (logical_expression (logical_term (logical_factor (relation (arithmetic_expression (term (factor (primary "<html>\n<p>\nThis package contains models and blocks from the Modelica Standard Library\nversion 2.2.2 that are no longer available in version 3.0.\nThe conversion script for version 3.0 changes references in existing\nuser models automatically to the models and blocks of package\nObsoleteModelica3. The user should <b>manually</b> replace all\nreferences to ObsoleteModelica3 in his/her models to the models\nthat are recommended in the documentation of the respective model.\n</p>\n\n<p>\nIn most cases, this means that a model with the name\n\"ObsoleteModelica3.XXX\" should be renamed to \"Modelica.XXX\" (version 3.0)\nand then a manual adaptation is needed. For example, a reference to\nObsoleteModelica3.Mechanics.MultiBody.Sensors.AbsoluteSensor\nshould be replaced by\nModelica.Mechanics.MultiBody.Sensors.AbsoluteSensor (version 3.0).\nSince the design of the component has changed (e.g., several\noptional connectors, and no longer one connector where all signals\nare packed together), this requires some changes at the place where\nthe model is used (besides the renaming of the underlying class).\n</p>\n\n<p>\nThe models in ObsoleteModelica3 are either not according to the Modelica Language\nversion 3.0 and higher, or the model was changed to get a better design.\nIn all cases, an automatic conversion to the new implementation\nwas not feasible, since too complicated.\n</p>\n\n<p>\nIn order to easily detect obsolete models and blocks, all of them are specially\nmarked in the icon layer with a red box.\n</p>\n\n<p>\nCopyright &copy; 2007-2016, Modelica Association.\n</p>\n<p>\n<i>This Modelica package is <u>free</u> software and the use is completely at <u>your own risk</u>; it can be redistributed and/or modified under the terms of the Modelica License 2. For license conditions (including the disclaimer of warranty) see <a href=\"modelica://Modelica.UsersGuide.ModelicaLicense2\">Modelica.UsersGuide.ModelicaLicense2</a> or visit <a href=\"https://www.modelica.org/licenses/ModelicaLicense2\"> https://www.modelica.org/licenses/ModelicaLicense2</a>.</i>\n</p>\n</html>"))))))))))) string_comment)))) ))) string_comment)))) ))) ;) end ObsoleteModelica3))) ; <EOF>)