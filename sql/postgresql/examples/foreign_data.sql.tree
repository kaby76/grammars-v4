(root (stmtblock (stmtmulti (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) TO (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'warning'))))))))))) ; (stmt (droprolestmt DROP ROLE IF EXISTS (role_list (rolespec (nonreservedword (identifier regress_foreign_data_user))) , (rolespec (nonreservedword (identifier regress_test_role))) , (rolespec (nonreservedword (identifier regress_test_role2))) , (rolespec (nonreservedword (identifier regress_test_role_super))) , (rolespec (nonreservedword (identifier regress_test_indirect))) , (rolespec (nonreservedword (identifier regress_unprivileged_role)))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_foreign_data_user)))) (optrolelist (createoptroleelem (alteroptroleelem (identifier LOGIN))) (createoptroleelem (alteroptroleelem (identifier SUPERUSER)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more SESSION AUTHORIZATION (nonreservedword_or_sconst (sconst (anysconst 'regress_foreign_data_user'))))))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_test_role)))) optrolelist)) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_test_role2)))) optrolelist)) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_test_role_super)))) (optrolelist (createoptroleelem (alteroptroleelem (identifier SUPERUSER)))))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_test_indirect)))) optrolelist)) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_unprivileged_role)))) optrolelist)) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier dummy))))) ; (stmt (commentstmt COMMENT ON (object_type_name (drop_type_name FOREIGN DATA WRAPPER)) (name (colid (identifier dummy))) IS (comment_text (sconst (anysconst 'useless'))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier postgresql))) (fdw_options_ (fdw_options (fdw_option VALIDATOR (handler_name (name (colid (identifier postgresql_fdw_validator))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwhandler)))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwvalidator)))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwoptions)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_data_wrapper)))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier srvname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier srvoptions)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_server))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_user_mapping))))))))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))) (fdw_options_ (fdw_options (fdw_option VALIDATOR (handler_name (name (colid (identifier bar))))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; \dew\n\n (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier testing))) (generic_option_arg (sconst (anysconst '1'))))) )))) ; \dew+\n\n (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier testing))) (generic_option_arg (sconst (anysconst '1')))) , (generic_option_elem (generic_option_name (colLabel (identifier testing))) (generic_option_arg (sconst (anysconst '2'))))) )))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier testing))) (generic_option_arg (sconst (anysconst '1')))) , (generic_option_elem (generic_option_name (colLabel (identifier another))) (generic_option_arg (sconst (anysconst '2'))))) )))) ; \dew+\n\n (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))) (fdw_options_ (fdw_options (fdw_option VALIDATOR (handler_name (name (colid (identifier postgresql_fdw_validator))))))))) ; \dew+\n\n (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier invalid_fdw_handler))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT 1;'))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier test_fdw))) (fdw_options_ (fdw_options (fdw_option HANDLER (handler_name (name (colid (identifier invalid_fdw_handler))))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier test_fdw))) (fdw_options_ (fdw_options (fdw_option HANDLER (handler_name (name (colid (identifier test_fdw_handler))))) (fdw_option HANDLER (handler_name (name (colid (identifier invalid_fdw_handler))))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier test_fdw))) (fdw_options_ (fdw_options (fdw_option HANDLER (handler_name (name (colid (identifier test_fdw_handler))))))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier test_fdw)))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (fdw_options (fdw_option NO VALIDATOR)))) ; \dew+\n\n (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier a))) (generic_option_arg (sconst (anysconst '1'))))) , (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier b))) (generic_option_arg (sconst (anysconst '2')))))) )))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (identifier c))) (generic_option_arg (sconst (anysconst '4')))))) )))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier c))))) )))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier x))) (generic_option_arg (sconst (anysconst '1'))))) , (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier x))))) )))) ; \dew+\n\n (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier a)))) , (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (identifier b))) (generic_option_arg (sconst (anysconst '3'))))) , (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier c))) (generic_option_arg (sconst (anysconst '4')))))) )))) ; \dew+\n\n (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier a))) (generic_option_arg (sconst (anysconst '2')))))) )))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier b))) (generic_option_arg (sconst (anysconst '4')))))) )))) ; \dew+\n\n (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier d))) (generic_option_arg (sconst (anysconst '5')))))) )))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role_super))))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier d))) (generic_option_arg (sconst (anysconst '5')))))) )))) ; \dew+\n\n (stmt (alterownerstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) OWNER TO (rolespec (nonreservedword (identifier regress_test_role))))) ; (stmt (alterownerstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) OWNER TO (rolespec (nonreservedword (identifier regress_test_role_super))))) ; (stmt (alterrolestmt ALTER ROLE (rolespec (nonreservedword (identifier regress_test_role_super))) (alteroptrolelist (alteroptroleelem (identifier NOSUPERUSER))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role_super))))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier e))) (generic_option_arg (sconst (anysconst '6')))))) )))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; \dew+\n\n (stmt (renamestmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) RENAME TO (name (colid (identifier foo1))))) ; \dew+\n (stmt (renamestmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo1))) RENAME TO (name (colid (identifier foo))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (fdw_options (fdw_option HANDLER (handler_name (name (colid (identifier invalid_fdw_handler)))))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (fdw_options (fdw_option HANDLER (handler_name (name (colid (identifier test_fdw_handler))))) (fdw_option HANDLER (handler_name (name (colid (identifier anything)))))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (fdw_options (fdw_option HANDLER (handler_name (name (colid (identifier test_fdw_handler)))))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier invalid_fdw_handler))) (func_args ( )))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier nonexistent)))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) IF EXISTS (name_list (name (colid (identifier nonexistent)))))) ; \dew+\n\n (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_test_role_super)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role_super))))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_test_role_super)))))) ; \dew+\n\n (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s1))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (commentstmt COMMENT ON (object_type_name (drop_type_name SERVER)) (name (colid (identifier s1))) IS (comment_text (sconst (anysconst 'foreign server'))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s1))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s1))))) ; (stmt (createusermappingstmt CREATE USER MAPPING IF NOT EXISTS FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s1))))) ; \dew+\n \des+\n \deu+\n (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))) (drop_behavior_ CASCADE))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))) (drop_behavior_ CASCADE))) ; \dew+\n \des+\n \deu+\n\n (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s1))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier "test wrapper"))) (generic_option_arg (sconst (anysconst 'true'))))) )))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s1))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s1))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createforeignserverstmt CREATE SERVER IF NOT EXISTS (name (colid (identifier s1))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s2))) FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier host))) (generic_option_arg (sconst (anysconst 'a')))) , (generic_option_elem (generic_option_name (colLabel (identifier dbname))) (generic_option_arg (sconst (anysconst 'b'))))) )))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s3))) (type_ TYPE (sconst (anysconst 'oracle'))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s4))) (type_ TYPE (sconst (anysconst 'oracle'))) FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier host))) (generic_option_arg (sconst (anysconst 'a')))) , (generic_option_elem (generic_option_name (colLabel (identifier dbname))) (generic_option_arg (sconst (anysconst 'b'))))) )))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s5))) (foreign_server_version_ (foreign_server_version VERSION (sconst (anysconst '15.0')))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s6))) (foreign_server_version_ (foreign_server_version VERSION (sconst (anysconst '16.0')))) FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier host))) (generic_option_arg (sconst (anysconst 'a')))) , (generic_option_elem (generic_option_name (colLabel (identifier dbname))) (generic_option_arg (sconst (anysconst 'b'))))) )))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s7))) (type_ TYPE (sconst (anysconst 'oracle'))) (foreign_server_version_ (foreign_server_version VERSION (sconst (anysconst '17.0')))) FOREIGN DATA WRAPPER (name (colid (identifier foo))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier host))) (generic_option_arg (sconst (anysconst 'a')))) , (generic_option_elem (generic_option_name (colLabel (identifier dbname))) (generic_option_arg (sconst (anysconst 'b'))))) )))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s8))) FOREIGN DATA WRAPPER (name (colid (identifier postgresql))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier foo))) (generic_option_arg (sconst (anysconst '1'))))) )))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s8))) FOREIGN DATA WRAPPER (name (colid (identifier postgresql))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier host))) (generic_option_arg (sconst (anysconst 'localhost')))) , (generic_option_elem (generic_option_name (colLabel (identifier dbname))) (generic_option_arg (sconst (anysconst 's8db'))))) )))) ; \des+\n (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier t1))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier t1))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; \des+\n\n (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_indirect))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier t2))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (grantrolestmt GRANT (privilege_list (privilege (colid (identifier regress_test_indirect)))) TO (role_list (rolespec (nonreservedword (identifier regress_test_role)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier t2))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; \des+\n (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (revokerolestmt REVOKE (privilege_list (privilege (colid (identifier regress_test_indirect)))) FROM (role_list (rolespec (nonreservedword (identifier regress_test_role)))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s1))) (foreign_server_version VERSION (sconst (anysconst '1.0'))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier servername))) (generic_option_arg (sconst (anysconst 's1')))))) )))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s2))) (foreign_server_version VERSION (sconst (anysconst '1.1'))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s3))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier "tns name"))) (generic_option_arg (sconst (anysconst 'orcl'))))) , (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier port))) (generic_option_arg (sconst (anysconst '1521')))))) )))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s1))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s6))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role2))))) (grant_grant_option_ WITH GRANT OPTION))) ; \des+\n (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (alterownerstmt ALTER SERVER (name (colid (identifier s1))) OWNER TO (rolespec (nonreservedword (identifier regress_test_role))))) ; (stmt (grantrolestmt GRANT (privilege_list (privilege (colid (identifier regress_test_role2)))) TO (role_list (rolespec (nonreservedword (identifier regress_test_role)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s1))) (foreign_server_version VERSION (sconst (anysconst '1.1'))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s8))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier foo))) (generic_option_arg (sconst (anysconst '1')))))) )))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s8))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier connect_timeout))) (generic_option_arg (sconst (anysconst '30'))))) , (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (identifier dbname))) (generic_option_arg (sconst (anysconst 'db1'))))) , (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier host))))) )))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (grantrolestmt GRANT (privilege_list (privilege (colid (identifier regress_test_indirect)))) TO (role_list (rolespec (nonreservedword (identifier regress_test_role)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (alterownerstmt ALTER SERVER (name (colid (identifier s1))) OWNER TO (rolespec (nonreservedword (identifier regress_test_indirect))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_indirect))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (alterownerstmt ALTER SERVER (name (colid (identifier s1))) OWNER TO (rolespec (nonreservedword (identifier regress_test_indirect))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_test_indirect)))))) ; \des+\n\n (stmt (renamestmt ALTER SERVER (name (colid (identifier s8))) RENAME to (name (colid (identifier s8new))))) ; \des+\n (stmt (renamestmt ALTER SERVER (name (colid (identifier s8new))) RENAME to (name (colid (identifier s8))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier nonexistent)))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) IF EXISTS (name_list (name (colid (identifier nonexistent)))))) ; \des\n (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s2)))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s1)))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; \des\n (stmt (alterownerstmt ALTER SERVER (name (colid (identifier s2))) OWNER TO (rolespec (nonreservedword (identifier regress_test_role))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s2)))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; \des\n (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s3))))) ; \deu\n (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s3)))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s3)))) (drop_behavior_ CASCADE))) ; \des\n \deu\n\n (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_missing_role)))) SERVER (name (colid (identifier s1))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s1))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s4))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident user) SERVER (name (colid (identifier s4))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s4))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier "this mapping"))) (generic_option_arg (sconst (anysconst 'is public'))))) )))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident user) SERVER (name (colid (identifier s8))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier username))) (generic_option_arg (sconst (anysconst 'test')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword password))) (generic_option_arg (sconst (anysconst 'secret'))))) )))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident user) SERVER (name (colid (identifier s8))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (reserved_keyword user))) (generic_option_arg (sconst (anysconst 'test')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword password))) (generic_option_arg (sconst (anysconst 'secret'))))) )))) ; (stmt (alterownerstmt ALTER SERVER (name (colid (identifier s5))) OWNER TO (rolespec (nonreservedword (identifier regress_test_role))))) ; (stmt (alterownerstmt ALTER SERVER (name (colid (identifier s6))) OWNER TO (rolespec (nonreservedword (identifier regress_test_indirect))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s5))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s6))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier username))) (generic_option_arg (sconst (anysconst 'test'))))) )))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s7))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s8))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (alterownerstmt ALTER SERVER (name (colid (identifier t1))) OWNER TO (rolespec (nonreservedword (identifier regress_test_indirect))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier t1))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier username))) (generic_option_arg (sconst (anysconst 'bob')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword password))) (generic_option_arg (sconst (anysconst 'boo'))))) )))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier t1))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; \deu\n\n (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_missing_role)))) SERVER (name (colid (identifier s4))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier gotcha))) (generic_option_arg (sconst (anysconst 'true')))))) )))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident user) SERVER (name (colid (identifier ss4))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier gotcha))) (generic_option_arg (sconst (anysconst 'true')))))) )))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s5))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier gotcha))) (generic_option_arg (sconst (anysconst 'true')))))) )))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s8))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier username))) (generic_option_arg (sconst (anysconst 'test')))))) )))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s8))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem DROP (generic_option_name (colLabel (reserved_keyword user)))) , (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (unreserved_keyword password))) (generic_option_arg (sconst (anysconst 'public')))))) )))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s5))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier modified))) (generic_option_arg (sconst (anysconst '1')))))) )))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s4))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier modified))) (generic_option_arg (sconst (anysconst '1')))))) )))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier t1))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier modified))) (generic_option_arg (sconst (anysconst '1')))))) )))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; \deu+\n\n (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_missing_role)))) SERVER (name (colid (identifier s4))))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident user) SERVER (name (colid (identifier ss4))))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s7))))) ; (stmt (dropusermappingstmt DROP USER MAPPING IF EXISTS FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_missing_role)))) SERVER (name (colid (identifier s4))))) ; (stmt (dropusermappingstmt DROP USER MAPPING IF EXISTS FOR (auth_ident user) SERVER (name (colid (identifier ss4))))) ; (stmt (dropusermappingstmt DROP USER MAPPING IF EXISTS FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s7))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s8))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s8))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s7)))))) ; \deu\n\n (stmt (createschemastmt CREATE SCHEMA (colid (identifier foreign_schema)) optschemaeltlist)) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s0))) FOREIGN DATA WRAPPER (name (colid (identifier dummy))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft1))) ( ) SERVER (name (colid (identifier no_server))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier "param 1"))) (generic_option_arg (sconst (anysconst 'val1'))))) )) (colquallist (colconstraint (colconstraintelem PRIMARY KEY))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier param2))) (generic_option_arg (sconst (anysconst 'val2')))) , (generic_option_elem (generic_option_name (colLabel (identifier param3))) (generic_option_arg (sconst (anysconst 'val3'))))) )) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier ref_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem PRIMARY KEY))))))) ))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier "param 1"))) (generic_option_arg (sconst (anysconst 'val1'))))) )) (colquallist (colconstraint (colconstraintelem REFERENCES (qualified_name (colid (identifier ref_table))) (column_list_ ( (columnlist (columnElem (colid (identifier id)))) ))))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier param2))) (generic_option_arg (sconst (anysconst 'val2')))) , (generic_option_elem (generic_option_name (colLabel (identifier param3))) (generic_option_arg (sconst (anysconst 'val3'))))) )) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier ref_table)))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier "param 1"))) (generic_option_arg (sconst (anysconst 'val1'))))) )) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier param2))) (generic_option_arg (sconst (anysconst 'val2')))) , (generic_option_elem (generic_option_name (colLabel (identifier param3))) (generic_option_arg (sconst (anysconst 'val3'))))) )) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)) , (tableelement (tableconstraint (constraintelem UNIQUE ( (columnlist (columnElem (colid (identifier c3)))) ) constraintattributespec))))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier "param 1"))) (generic_option_arg (sconst (anysconst 'val1'))))) )) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier param2))) (generic_option_arg (sconst (anysconst 'val2')))) , (generic_option_elem (generic_option_name (colLabel (identifier param3))) (generic_option_arg (sconst (anysconst 'val3'))))) )) (colquallist (colconstraint (colconstraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c2)))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ''))))))))))))))))))))))))) )))))) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)) , (tableelement (tableconstraint (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c3))))))))))))))))))) BETWEEN (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '1994-01-01')))) :: (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds)))))))))))))))) AND (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '1994-01-31')))) :: (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds)))))))))))))))))))))) ) constraintattributespec))))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; (stmt (commentstmt COMMENT ON (object_type_any_name FOREIGN TABLE) (any_name (colid (identifier ft1))) IS (comment_text (sconst (anysconst 'ft1'))))) ; (stmt (commentstmt COMMENT ON COLUMN (any_name (colid (identifier ft1)) (attrs . (attr_name (colLabel (identifier c1))))) IS (comment_text (sconst (anysconst 'ft1.c1'))))) ; \d+ ft1\n \det+\n (stmt (indexstmt CREATE INDEX (index_name_ (name (colid (identifier id_ft1_c2)))) ON (relation_expr (qualified_name (colid (identifier ft1)))) ( (index_params (index_elem (colid (identifier c2)) index_elem_options)) ))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier ft1))))))))))))) ; (stmt (explainstmt EXPLAIN (explainablestmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier ft1))))))))))))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier lt1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric INT)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec PARTITION BY (colid (unreserved_keyword RANGE)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part1))) PARTITION OF (qualified_name (colid (identifier lt1))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )) SERVER (name (colid (identifier s0))))) ; (stmt (indexstmt CREATE INDEX ON (relation_expr (qualified_name (colid (identifier lt1)))) ( (index_params (index_elem (colid (identifier a)) index_elem_options)) ))) ; (stmt (indexstmt CREATE (unique_ UNIQUE) INDEX ON (relation_expr (qualified_name (colid (identifier lt1)))) ( (index_params (index_elem (colid (identifier a)) index_elem_options)) ))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint (constraintelem PRIMARY KEY ( (columnlist (columnElem (colid (identifier a)))) ) constraintattributespec)))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier lt1)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier lt1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric INT)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec PARTITION BY (colid (unreserved_keyword RANGE)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (indexstmt CREATE INDEX ON (relation_expr (qualified_name (colid (identifier lt1)))) ( (index_params (index_elem (colid (identifier a)) index_elem_options)) ))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part1))) PARTITION OF (qualified_name (colid (identifier lt1))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )) SERVER (name (colid (identifier s0))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric INT)) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier ft_part2))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier ft_part1))) , (any_name (colid (identifier ft_part2)))))) ; (stmt (indexstmt CREATE (unique_ UNIQUE) INDEX ON (relation_expr (qualified_name (colid (identifier lt1)))) ( (index_params (index_elem (colid (identifier a)) index_elem_options)) ))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint (constraintelem PRIMARY KEY ( (columnlist (columnElem (colid (identifier a)))) ) constraintattributespec)))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part1))) PARTITION OF (qualified_name (colid (identifier lt1))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )) SERVER (name (colid (identifier s0))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric INT)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))))) ) SERVER (name (colid (identifier s0))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier ft_part2))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier lt1)))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier ft_part2)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier lt1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric INT)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec PARTITION BY (colid (unreserved_keyword RANGE)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (indexstmt CREATE INDEX ON (relation_expr (qualified_name (colid (identifier lt1)))) ( (index_params (index_elem (colid (identifier a)) index_elem_options)) ))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier lt1_part1))) PARTITION OF (qualified_name (colid (identifier lt1))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )) (optpartitionspec (partitionspec PARTITION BY (colid (unreserved_keyword RANGE)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part_1_1))) PARTITION OF (qualified_name (colid (identifier lt1_part1))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100))))))))))))))))))))))))) )) SERVER (name (colid (identifier s0))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part_1_2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric INT)) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1_part1)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier ft_part_1_2))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 200))))))))))))))))))))))))) ))))) ; (stmt (indexstmt CREATE (unique_ UNIQUE) INDEX ON (relation_expr (qualified_name (colid (identifier lt1)))) ( (index_params (index_elem (colid (identifier a)) index_elem_options)) ))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint (constraintelem PRIMARY KEY ( (columnlist (columnElem (colid (identifier a)))) ) constraintattributespec)))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier ft_part_1_1))) , (any_name (colid (identifier ft_part_1_2)))))) ; (stmt (indexstmt CREATE (unique_ UNIQUE) INDEX ON (relation_expr (qualified_name (colid (identifier lt1)))) ( (index_params (index_elem (colid (identifier a)) index_elem_options)) ))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint (constraintelem PRIMARY KEY ( (columnlist (columnElem (colid (identifier a)))) ) constraintattributespec)))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part_1_1))) PARTITION OF (qualified_name (colid (identifier lt1_part1))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100))))))))))))))))))))))))) )) SERVER (name (colid (identifier s0))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft_part_1_2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric INT)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))))) ) SERVER (name (colid (identifier s0))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier lt1_part1)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier ft_part_1_2))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100))))))))))))))))))))))))) ) TO ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 200))))))))))))))))))))))))) ))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier lt1)))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier ft_part_1_2)))))) ; (stmt (commentstmt COMMENT ON (object_type_any_name FOREIGN TABLE) (any_name (colid (identifier ft1))) IS (comment_text (sconst (anysconst 'foreign table'))))) ; (stmt (commentstmt COMMENT ON (object_type_any_name FOREIGN TABLE) (any_name (colid (identifier ft1))) IS (comment_text NULL))) ; (stmt (commentstmt COMMENT ON COLUMN (any_name (colid (identifier ft1)) (attrs . (attr_name (colLabel (identifier c1))))) IS (comment_text (sconst (anysconst 'foreign column'))))) ; (stmt (commentstmt COMMENT ON COLUMN (any_name (colid (identifier ft1)) (attrs . (attr_name (colLabel (identifier c1))))) IS (comment_text NULL))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c4)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c5)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem DEFAULT (b_expr (c_expr (aexprconst (iconst 0)))))))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c6)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c7)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL)))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c8)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c9)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c10)) (typename (simpletypename (numeric integer)) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier p1))) (generic_option_arg (sconst (anysconst 'v1'))))) )) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c4)) (alter_column_default SET DEFAULT (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c5)) (alter_column_default DROP DEFAULT))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c6)) SET NOT NULL)))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c7)) DROP NOT NULL)))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) TYPE (typename (simpletypename (character (character_c char) ( (iconst 10) ))) opt_array_bounds) (alter_using USING (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '0')))))))))))))))))))))))))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) TYPE (typename (simpletypename (character (character_c char) ( (iconst 10) ))) opt_array_bounds))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (set_data_ SET DATA) TYPE (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier xmin)) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p1))) (generic_option_arg (sconst (anysconst 'v1')))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c7)) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p1))) (generic_option_arg (sconst (anysconst 'v1'))))) , (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p2))) (generic_option_arg (sconst (anysconst 'v2')))))) ))) , (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p1))) (generic_option_arg (sconst (anysconst 'v1'))))) , (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p2))) (generic_option_arg (sconst (anysconst 'v2')))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (identifier p2))) (generic_option_arg (sconst (anysconst 'V2'))))) , (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier p1))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c1)) SET STATISTICS (signediconst (iconst 10000)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c1)) SET (reloptions ( (reloption_list (reloption_elem (colLabel (identifier n_distinct)) = (def_arg (numericonly (signediconst (iconst 100)))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) SET STATISTICS (signediconst - (iconst 1)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) SET STORAGE (colid (identifier PLAIN)))))) ; \d+ ft1\n (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier use_ft1_column_type))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier x)) (typename (simpletypename (generictype (type_function_name (identifier ft1)))) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (set_data_ SET DATA) TYPE (typename (simpletypename (numeric integer)) opt_array_bounds))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier use_ft1_column_type)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint (constraintelem PRIMARY KEY ( (columnlist (columnElem (colid (identifier c7)))) ) constraintattributespec)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier ft1_c9_check))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c9)))))))))))))) < (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) ) (constraintattributespec (constraintattributeElem NOT VALID)))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd ALTER CONSTRAINT (name (colid (identifier ft1_c9_check))) (constraintattributespec (constraintattributeElem DEFERRABLE)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT (name (colid (identifier ft1_c9_check))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT (name (colid (identifier no_const))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT IF EXISTS (name (colid (identifier no_const))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd OWNER TO (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem DROP (generic_option_name (colLabel (unreserved_keyword delimiter)))) , (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '~'))))) , (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (unreserved_keyword escape))) (generic_option_arg (sconst (anysconst '@')))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier no_column)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) IF EXISTS (colid (identifier no_column)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier c9)))))) ; (stmt (alterobjectschemastmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) SET SCHEMA (name (colid (identifier foreign_schema))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft1)))) (alter_table_cmds (alter_table_cmd SET TABLESPACE (name (colid (identifier ts))))))) ; (stmt (renamestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier ft1))))))) RENAME (name (colid (identifier c1))) TO (name (colid (identifier foreign_column_1))))) ; (stmt (renamestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier ft1))))))) RENAME TO (name (colid (identifier foreign_table_1))))) ; \d foreign_schema.foreign_table_1\n\n (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c4)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c6)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c7)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL)))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c8)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c9)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c10)) (typename (simpletypename (numeric integer)) opt_array_bounds) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier p1))) (generic_option_arg (sconst (anysconst 'v1'))))) )) colquallist))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c6)) SET NOT NULL)))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c7)) DROP NOT NULL)))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) TYPE (typename (simpletypename (character (character_c char) ( (iconst 10) ))) opt_array_bounds))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (set_data_ SET DATA) TYPE (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c7)) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p1))) (generic_option_arg (sconst (anysconst 'v1'))))) , (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p2))) (generic_option_arg (sconst (anysconst 'v2')))))) ))) , (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p1))) (generic_option_arg (sconst (anysconst 'v1'))))) , (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (identifier p2))) (generic_option_arg (sconst (anysconst 'v2')))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (identifier p2))) (generic_option_arg (sconst (anysconst 'V2'))))) , (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier p1))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT IF EXISTS (name (colid (identifier no_const))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT (name (colid (identifier ft1_c1_check))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd OWNER TO (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem DROP (generic_option_name (colLabel (unreserved_keyword delimiter)))) , (alter_generic_option_elem SET (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '~'))))) , (alter_generic_option_elem ADD (generic_option_elem (generic_option_name (colLabel (unreserved_keyword escape))) (generic_option_arg (sconst (anysconst '@')))))) )))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) IF EXISTS (colid (identifier no_column)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier c9)))))) ; (stmt (alterobjectschemastmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) SET SCHEMA (name (colid (identifier foreign_schema))))) ; (stmt (renamestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) RENAME (name (colid (identifier c1))) TO (name (colid (identifier foreign_column_1))))) ; (stmt (renamestmt ALTER FOREIGN TABLE IF EXISTS (relation_expr (qualified_name (colid (identifier doesnt_exist_ft1)))) RENAME TO (name (colid (identifier foreign_table_1))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_data_wrappers))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_data_wrapper_options))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_servers))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_server_options))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier user_mappings))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier lower))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier authorization_identifier))))))))))))))))))))))))))) )))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier user_mapping_options))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier lower))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier authorization_identifier))))))))))))))))))))))))))) )))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier usage_privileges)))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_type))))))))))))) LIKE (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'FOREIGN%')))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_name)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's6'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier role_usage_grants)))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_type))))))))))))) LIKE (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'FOREIGN%')))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_name)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's6'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_tables))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_options))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier user_mapping_options))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier usage_privileges)))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_type))))))))))))) LIKE (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'FOREIGN%')))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_name)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's6'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier role_usage_grants)))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_type))))))))))))) LIKE (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'FOREIGN%')))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier object_name)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's6'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))))))))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier t1))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role2))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier user_mapping_options))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))))))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_foreign_data_wrapper_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_data_wrapper))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_foreign_data_wrapper_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_foreign_data_wrapper_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_roles))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier rolname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_data_wrapper))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_foreign_data_wrapper_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_data_wrapper))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_foreign_data_wrapper_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_roles))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier rolname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_foreign_data_wrapper_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_foreign_data_wrapper_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_server_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_server))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier srvname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's8')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_server_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's8')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_server_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_roles))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier rolname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_server))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier srvname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's8')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_server_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_server))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier srvname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's8')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_server_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (select_with_parens ( (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_roles))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier rolname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))))))) ))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's8')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_server_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's8')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s8))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier has_server_privilege))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'regress_test_role')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 's8')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USAGE'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s8))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s4))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s4))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s6))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier host)))) , (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier dbname))))) )))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_role)))) SERVER (name (colid (identifier s6))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem DROP (generic_option_name (colLabel (identifier username))))) )))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (fdw_options (fdw_option VALIDATOR (handler_name (name (colid (identifier postgresql_fdw_validator)))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foobar))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier gotcha))) (generic_option_arg (sconst (anysconst 'true')))))) )))) ; (stmt (alterownerstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) OWNER TO (rolespec (nonreservedword (identifier regress_unprivileged_role))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s9))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s4))) (foreign_server_version VERSION (sconst (anysconst '0.5'))))) ; (stmt (alterownerstmt ALTER SERVER (name (colid (identifier s4))) OWNER TO (rolespec (nonreservedword (identifier regress_unprivileged_role))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s4)))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s4))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s4))))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_role)))) SERVER (name (colid (identifier s6))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier gotcha))) (generic_option_arg (sconst (anysconst 'true')))))) )))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_role)))) SERVER (name (colid (identifier s6))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier postgresql))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_unprivileged_role))))) (grant_grant_option_ WITH GRANT OPTION))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (createfdwstmt CREATE FOREIGN DATA WRAPPER (name (colid (identifier foobar))))) ; (stmt (alterfdwstmt ALTER FOREIGN DATA WRAPPER (name (colid (identifier foo))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier gotcha))) (generic_option_arg (sconst (anysconst 'true')))))) )))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier postgresql))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s9))) FOREIGN DATA WRAPPER (name (colid (identifier postgresql))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s6))) (foreign_server_version VERSION (sconst (anysconst '0.5'))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s6)))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s6))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s9))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s6))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s9))))) ; (stmt (alterusermappingstmt ALTER USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_role)))) SERVER (name (colid (identifier s6))) (alter_generic_options OPTIONS ( (alter_generic_option_list (alter_generic_option_elem (generic_option_elem (generic_option_name (colLabel (identifier gotcha))) (generic_option_arg (sconst (anysconst 'true')))))) )))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_role)))) SERVER (name (colid (identifier s6))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_unprivileged_role))))) (drop_behavior_ CASCADE))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier foo))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s10))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s9))) (foreign_server_version VERSION (sconst (anysconst '1.1'))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s9))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s9))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s9)))) (drop_behavior_ CASCADE))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s9))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s9))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (alterforeignserverstmt ALTER SERVER (name (colid (identifier s9))) (foreign_server_version VERSION (sconst (anysconst '1.2'))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target FOREIGN SERVER (name_list (name (colid (identifier s9))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_test_role))))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec current_user)) SERVER (name (colid (identifier s9))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s9)))) (drop_behavior_ CASCADE))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_test_role))))))) ; (stmt (createforeignserverstmt CREATE SERVER (name (colid (identifier s10))) FOREIGN DATA WRAPPER (name (colid (identifier foo))))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier public)))) SERVER (name (colid (identifier s10))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (reserved_keyword user))) (generic_option_arg (sconst (anysconst 'secret'))))) )))) ; (stmt (createusermappingstmt CREATE USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_unprivileged_role)))) SERVER (name (colid (identifier s10))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (reserved_keyword user))) (generic_option_arg (sconst (anysconst 'secret'))))) )))) ; \deu+\n (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; \deu+\n (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_unprivileged_role))))))) ; \deu+\n (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s10)))) (drop_behavior_ CASCADE))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier dummy_trigger))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword TRIGGER)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst $$ \n  BEGIN\n    RETURN NULL;\n  END\n $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier trigtest_before_stmt))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1)))))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_trigger))) ( triggerfuncargs ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier trigtest_after_stmt))) (triggeractiontime AFTER) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1)))))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_trigger))) ( triggerfuncargs ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier trigtest_after_stmt_tt))) (triggeractiontime AFTER) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1)))))) (triggerreferencing REFERENCING (triggertransitions (triggertransition (transitionoldornew NEW) (transitionrowortable TABLE) (as_ AS) (transitionrelname (colid (identifier new_table)))))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_trigger))) ( triggerfuncargs ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier trigtest_before_row))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1)))))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_trigger))) ( triggerfuncargs ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier trigtest_after_row))) (triggeractiontime AFTER) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1)))))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_trigger))) ( triggerfuncargs ))) ; (stmt (createtrigstmt CREATE CONSTRAINT TRIGGER (name (colid (identifier trigtest_constraint))) AFTER (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1)))))) constraintattributespec FOR EACH ROW EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_trigger))) ( triggerfuncargs ))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1))))))) (alter_table_cmds (alter_table_cmd DISABLE TRIGGER (name (colid (identifier trigtest_before_stmt))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier foreign_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier foreign_table_1))))))) (alter_table_cmds (alter_table_cmd ENABLE TRIGGER (name (colid (identifier trigtest_before_stmt))))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier trigtest_before_stmt))) ON (any_name (colid (identifier foreign_schema)) (attrs . (attr_name (colLabel (identifier foreign_table_1))))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier trigtest_before_row))) ON (any_name (colid (identifier foreign_schema)) (attrs . (attr_name (colLabel (identifier foreign_table_1))))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier trigtest_after_stmt))) ON (any_name (colid (identifier foreign_schema)) (attrs . (attr_name (colLabel (identifier foreign_table_1))))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier trigtest_after_row))) ON (any_name (colid (identifier foreign_schema)) (attrs . (attr_name (colLabel (identifier foreign_table_1))))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier dummy_trigger))) (func_args ( )))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier fd_pt1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft2))) ( ) (optinherit INHERITS ( (qualified_name_list (qualified_name (colid (identifier fd_pt1)))) )) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; \d+ fd_pt1\n \d+ ft2\n (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier ft2)))))) ; \d+ fd_pt1\n (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; \d+ ft2\n (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft2)))) (alter_table_cmds (alter_table_cmd INHERIT (qualified_name (colid (identifier fd_pt1))))))) ; \d+ fd_pt1\n \d+ ft2\n (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier ct3))) ( ) (optinherit INHERITS ( (qualified_name_list (qualified_name (colid (identifier ft2)))) )))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft3))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ) (optinherit INHERITS ( (qualified_name_list (qualified_name (colid (identifier ft2)))) )) SERVER (name (colid (identifier s0))))) ; \d+ ft2\n \d+ ct3\n \d+ ft3\n\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c4)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c5)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem DEFAULT (b_expr (c_expr (aexprconst (iconst 0)))))))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c6)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c7)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL)))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD COLUMN (columnDef (colid (identifier c8)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist))))) ; \d+ fd_pt1\n \d+ ft2\n \d+ ct3\n \d+ ft3\n\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c4)) (alter_column_default SET DEFAULT (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c5)) (alter_column_default DROP DEFAULT))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c6)) SET NOT NULL)))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c7)) DROP NOT NULL)))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) TYPE (typename (simpletypename (character (character_c char) ( (iconst 10) ))) opt_array_bounds) (alter_using USING (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '0')))))))))))))))))))))))))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) TYPE (typename (simpletypename (character (character_c char) ( (iconst 10) ))) opt_array_bounds))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) (set_data_ SET DATA) TYPE (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c1)) SET STATISTICS (signediconst (iconst 10000)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c1)) SET (reloptions ( (reloption_list (reloption_elem (colLabel (identifier n_distinct)) = (def_arg (numericonly (signediconst (iconst 100)))))) )))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) SET STATISTICS (signediconst - (iconst 1)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ALTER (column_ COLUMN) (colid (identifier c8)) SET STORAGE (colid (unreserved_keyword EXTERNAL)))))) ; \d+ fd_pt1\n \d+ ft2\n\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier c4)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier c5)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier c6)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier c7)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier c8)))))) ; \d+ fd_pt1\n \d+ ft2\n\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier fd_pt1chk1))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c1)))))))))))))) > (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) ) (constraintattributespec (constraintattributeElem NO INHERIT)))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier fd_pt1chk2))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c2)))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ''))))))))))))))))))))))))) ) constraintattributespec)))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier relname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier conname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier contype)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier conislocal)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier coninhcount)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier connoinherit)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_class)))) (alias_clause AS (colid (identifier pc))) JOIN (table_ref (relation_expr (qualified_name (colid (identifier pg_constraint)))) (alias_clause AS (colid (identifier pgc)))) (join_qual ON (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier conrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pc)) (indirection (indirection_el . (attr_name (colLabel (identifier oid)))))))))))))))))))))))))))) ) opt_indirection)))))))))))))))))))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pc)) (indirection (indirection_el . (attr_name (colLabel (identifier relname))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'fd_pt1'))))))))))))))))))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))) ; \d+ fd_pt1\n \d+ ft2\n (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier ft2)))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier ft2)))) (drop_behavior_ CASCADE))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier ft2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft2)))) (alter_table_cmds (alter_table_cmd INHERIT (qualified_name (colid (identifier fd_pt1))))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft2)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier fd_pt1chk2))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c2)))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ''))))))))))))))))))))))))) ) constraintattributespec)))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier ft2)))) (alter_table_cmds (alter_table_cmd INHERIT (qualified_name (colid (identifier fd_pt1))))))) ; \d+ fd_pt1\n \d+ ft2\n\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT (name (colid (identifier fd_pt1chk1))) (drop_behavior_ CASCADE))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT (name (colid (identifier fd_pt1chk2))) (drop_behavior_ CASCADE))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier fd_pt1)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'fd_pt1')))) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '1994-01-01')))) :: (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds))))))))))))))))))))))) )))))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier fd_pt1chk3))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c2)))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ''))))))))))))))))))))))))) ) (constraintattributespec (constraintattributeElem NOT VALID)))))))) ; \d+ fd_pt1\n \d+ ft2\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) (alter_table_cmds (alter_table_cmd VALIDATE CONSTRAINT (name (colid (identifier fd_pt1chk3))))))) ; \d+ fd_pt1\n \d+ ft2\n\n (stmt (renamestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) RENAME (column_ COLUMN) (name (colid (identifier c1))) TO (name (colid (identifier f1))))) ; (stmt (renamestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) RENAME (column_ COLUMN) (name (colid (identifier c2))) TO (name (colid (identifier f2))))) ; (stmt (renamestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) RENAME (column_ COLUMN) (name (colid (identifier c3))) TO (name (colid (identifier f3))))) ; (stmt (renamestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt1)))) RENAME CONSTRAINT (name (colid (identifier fd_pt1chk3))) TO (name (colid (identifier f2_check))))) ; \d+ fd_pt1\n \d+ ft2\n\n (stmt (truncatestmt TRUNCATE (relation_expr_list (relation_expr (qualified_name (colid (identifier ft2))))))) ; (stmt (truncatestmt TRUNCATE (relation_expr_list (relation_expr (qualified_name (colid (identifier fd_pt1))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier fd_pt1)))) (drop_behavior_ CASCADE))) ; (stmt (importforeignschemastmt IMPORT FOREIGN SCHEMA (name (colid (identifier s1))) FROM SERVER (name (colid (identifier s9))) INTO (name (colid (identifier public))))) ; (stmt (importforeignschemastmt IMPORT FOREIGN SCHEMA (name (colid (identifier s1))) (import_qualification (import_qualification_type LIMIT TO) ( (relation_expr_list (relation_expr (qualified_name (colid (identifier t1))))) )) FROM SERVER (name (colid (identifier s9))) INTO (name (colid (identifier public))))) ; (stmt (importforeignschemastmt IMPORT FOREIGN SCHEMA (name (colid (identifier s1))) (import_qualification (import_qualification_type EXCEPT) ( (relation_expr_list (relation_expr (qualified_name (colid (identifier t1))))) )) FROM SERVER (name (colid (identifier s9))) INTO (name (colid (identifier public))))) ; (stmt (importforeignschemastmt IMPORT FOREIGN SCHEMA (name (colid (identifier s1))) (import_qualification (import_qualification_type EXCEPT) ( (relation_expr_list (relation_expr (qualified_name (colid (identifier t1)))) , (relation_expr (qualified_name (colid (identifier t2))))) )) FROM SERVER (name (colid (identifier s9))) INTO (name (colid (identifier public))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (identifier option1))) (generic_option_arg (sconst (anysconst 'value1')))) , (generic_option_elem (generic_option_name (colLabel (identifier option2))) (generic_option_arg (sconst (anysconst 'value2'))))) )))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier no_table)))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) IF EXISTS (any_name_list_ (any_name (colid (identifier no_table)))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier foreign_schema)) (attrs . (attr_name (colLabel (identifier foreign_table_1)))))))) ; (stmt (reassignownedstmt REASSIGN OWNED BY (role_list (rolespec (nonreservedword (identifier regress_test_role)))) TO (rolespec (nonreservedword (identifier regress_test_role2))))) ; (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_test_role2)))))) ; (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_test_role2)))) (drop_behavior_ CASCADE))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier fd_pt2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec PARTITION BY (colid (identifier LIST)) ( (part_params (part_elem (colid (identifier c1)))) ))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier fd_pt2_1))) PARTITION OF (qualified_name (colid (identifier fd_pt2))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; \d+ fd_pt2\n \d+ fd_pt2_1\n\n (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier fd_pt2_1)))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier fd_pt2_1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c4)) (typename (simpletypename (character (character_c char))) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; \d+ fd_pt2_1\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier fd_pt2_1))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier fd_pt2_1)))))) ; \d+ fd_pt2\n (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier fd_pt2_1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c1)) (typename (simpletypename (numeric integer)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))) , (tableelement (columnDef (colid (identifier c2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c3)) (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))) (create_generic_options OPTIONS ( (generic_option_list (generic_option_elem (generic_option_name (colLabel (unreserved_keyword delimiter))) (generic_option_arg (sconst (anysconst ',')))) , (generic_option_elem (generic_option_name (colLabel (unreserved_keyword quote))) (generic_option_arg (sconst (anysconst '"')))) , (generic_option_elem (generic_option_name (colLabel (identifier "be quoted"))) (generic_option_arg (sconst (anysconst 'value'))))) )))) ; \d+ fd_pt2_1\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier fd_pt2_1))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ))))) ; \d+ fd_pt2\n \d+ fd_pt2_1\n\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2_1)))) (alter_table_cmds (alter_table_cmd ADD (columnDef (colid (identifier c4)) (typename (simpletypename (character (character_c char))) opt_array_bounds) colquallist))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2_1)))) (alter_table_cmds (alter_table_cmd ALTER (colid (identifier c3)) SET NOT NULL)))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2_1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier p21chk))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c2)))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ''))))))))))))))))))))))))) ) constraintattributespec)))))) ; \d+ fd_pt2\n \d+ fd_pt2_1\n\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2_1)))) (alter_table_cmds (alter_table_cmd ALTER (colid (identifier c1)) DROP NOT NULL)))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd DETACH PARTITION (qualified_name (colid (identifier fd_pt2_1)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (alter_table_cmds (alter_table_cmd ALTER (colid (identifier c2)) SET NOT NULL)))) ; \d+ fd_pt2\n \d+ fd_pt2_1\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier fd_pt2_1))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier fd_pt2_1)))) (alter_table_cmds (alter_table_cmd ALTER (colid (identifier c2)) SET NOT NULL)))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier fd_pt2_1))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd DETACH PARTITION (qualified_name (colid (identifier fd_pt2_1)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier fd_pt2chk1))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c1)))))))))))))) > (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) ) constraintattributespec)))))) ; \d+ fd_pt2\n \d+ fd_pt2_1\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier fd_pt2_1))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ))))) ; (stmt (altertablestmt ALTER FOREIGN TABLE (relation_expr (qualified_name (colid (identifier fd_pt2_1)))) (alter_table_cmds (alter_table_cmd ADD (tableconstraint CONSTRAINT (name (colid (identifier fd_pt2chk1))) (constraintelem CHECK ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c1)))))))))))))) > (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) ) constraintattributespec)))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier fd_pt2)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier fd_pt2_1))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ))))) ; (stmt (truncatestmt TRUNCATE (relation_expr_list (relation_expr (qualified_name (colid (identifier fd_pt2_1))))))) ; (stmt (truncatestmt TRUNCATE (relation_expr_list (relation_expr (qualified_name (colid (identifier fd_pt2))))))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier fd_pt2_1)))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier fd_pt2)))))) ; (stmt (createstmt CREATE (opttemp TEMP) TABLE (qualified_name (colid (identifier temp_parted))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec PARTITION BY (colid (identifier LIST)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier foreign_part))) PARTITION OF (qualified_name (colid (identifier temp_parted))) (partitionboundspec DEFAULT) SERVER (name (colid (identifier s0))))) ; (stmt (createforeigntablestmt CREATE FOREIGN TABLE (qualified_name (colid (identifier foreign_part))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) SERVER (name (colid (identifier s0))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier temp_parted)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier foreign_part))) (partitionboundspec DEFAULT)))) ; (stmt (dropstmt DROP (object_type_any_name FOREIGN TABLE) (any_name_list_ (any_name (colid (identifier foreign_part)))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier temp_parted)))))) ; (stmt (dropstmt DROP (drop_type_name SCHEMA) (name_list (name (colid (identifier foreign_schema)))) (drop_behavior_ CASCADE))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_test_role)))))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier t1)))) (drop_behavior_ CASCADE))) ; (stmt (dropusermappingstmt DROP USER MAPPING FOR (auth_ident (rolespec (nonreservedword (identifier regress_test_role)))) SERVER (name (colid (identifier s6))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier foo)))) (drop_behavior_ CASCADE))) ; (stmt (dropstmt DROP (drop_type_name SERVER) (name_list (name (colid (identifier s8)))) (drop_behavior_ CASCADE))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_test_indirect)))))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_test_role)))))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_unprivileged_role)))))) ; (stmt (revokestmt REVOKE (privileges ALL) ON (privilege_target FOREIGN DATA WRAPPER (name_list (name (colid (identifier postgresql))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_unprivileged_role))))))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_unprivileged_role)))))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_test_role2)))))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier postgresql)))) (drop_behavior_ CASCADE))) ; (stmt (dropstmt DROP (drop_type_name FOREIGN DATA WRAPPER) (name_list (name (colid (identifier dummy)))) (drop_behavior_ CASCADE))) ; \c\n (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_foreign_data_user)))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwhandler)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwvalidator)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier fdwoptions)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_data_wrapper))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier srvname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier srvoptions)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_foreign_server))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_user_mapping))))))))))))) ;)) <EOF>)