(root (stmtblock (stmtmulti (stmt (definestmt CREATE TYPE (any_name (colid (identifier casttesttype))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier casttesttype_in))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'textin')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier casttesttype_out))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'textout')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier casttesttype))) (definition ( (def_list (def_elem (colLabel (identifier internallength)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier variable)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword input)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier casttesttype_in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier output)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier casttesttype_out)))) opt_array_bounds)))) , (def_elem (colLabel (identifier alignment)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds))))) )))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier casttestfunc))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  SELECT 1;  $$))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier casttestfunc))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (createcaststmt CREATE CAST ( (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) AS (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds) ) WITHOUT FUNCTION)) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier casttestfunc))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier casttestfunc))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (dropcaststmt DROP CAST ( (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) AS (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds) ))) ; (stmt (createcaststmt CREATE CAST ( (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) AS (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds) ) WITHOUT FUNCTION (cast_context AS IMPLICIT))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier casttestfunc))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1234))) :: (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds))))))))))))))))))))))))))))))) ; (stmt (createcaststmt CREATE CAST ( (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) AS (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds) ) WITH INOUT)) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1234))) :: (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds))))))))))))))))))))))))))))))) ; (stmt (dropcaststmt DROP CAST ( (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) AS (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier int4_casttesttype))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  SELECT ('foo'::text ||  $1::text)::casttesttype;  $$))))))) ; (stmt (createcaststmt CREATE CAST ( (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) AS (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds) ) WITH FUNCTION (function_with_argtypes (func_name (type_function_name (identifier int4_casttesttype))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds)))) ))) (cast_context AS IMPLICIT))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1234))) :: (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (identifier casttesttype)))) opt_array_bounds))))))))))))))))))))))))))))))) ;)) <EOF>)