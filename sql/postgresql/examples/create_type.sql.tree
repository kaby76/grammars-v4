(root (stmtblock (stmtmulti (stmt (definestmt CREATE TYPE (any_name (colid (identifier widget))) (definition ( (def_list (def_elem (colLabel (identifier internallength)) = (def_arg (numericonly (signediconst (iconst 24))))) , (def_elem (colLabel (unreserved_keyword input)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier widget_in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier output)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier widget_out)))) opt_array_bounds)))) , (def_elem (colLabel (identifier typmod_in)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numerictypmodin)))) opt_array_bounds)))) , (def_elem (colLabel (identifier typmod_out)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numerictypmodout)))) opt_array_bounds)))) , (def_elem (colLabel (identifier alignment)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword double)))) opt_array_bounds))))) )))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier city_budget))) (definition ( (def_list (def_elem (colLabel (identifier internallength)) = (def_arg (numericonly (signediconst (iconst 16))))) , (def_elem (colLabel (unreserved_keyword input)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int44in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier output)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int44out)))) opt_array_bounds)))) , (def_elem (colLabel (identifier element)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds)))) , (def_elem (colLabel (identifier category)) = (def_arg (sconst (anysconst 'x')))) , (def_elem (colLabel (identifier preferred)) = (def_arg (reserved_keyword true)))) )))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier shell))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier shell))))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier shell)))) opt_array_bounds)))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier shell)))) opt_array_bounds)))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier myshell))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier int42))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier text_w_default))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier int42_in))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier int42)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'int4in')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier int42_out))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int42)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'int4out')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier text_w_default_in))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier text_w_default)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'textin')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier text_w_default_out))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier text_w_default)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'textout')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier int42))) (definition ( (def_list (def_elem (colLabel (identifier internallength)) = (def_arg (numericonly (signediconst (iconst 4))))) , (def_elem (colLabel (unreserved_keyword input)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int42_in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier output)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int42_out)))) opt_array_bounds)))) , (def_elem (colLabel (identifier alignment)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds)))) , (def_elem (colLabel (reserved_keyword default)) = (def_arg (numericonly (signediconst (iconst 42))))) , (def_elem (colLabel (identifier passedbyvalue)))) )))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier text_w_default))) (definition ( (def_list (def_elem (colLabel (identifier internallength)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier variable)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword input)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier text_w_default_in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier output)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier text_w_default_out)))) opt_array_bounds)))) , (def_elem (colLabel (identifier alignment)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds)))) , (def_elem (colLabel (reserved_keyword default)) = (def_arg (sconst (anysconst 'zippo'))))) )))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier default_test))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (generictype (type_function_name (identifier text_w_default)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier f2)) (typename (simpletypename (generictype (type_function_name (identifier int42)))) opt_array_bounds) colquallist)))) ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier default_test)))) (insert_rest DEFAULT VALUES))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier default_test))))))))))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier bogus_type))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier bogus_type))) (definition ( (def_list (def_elem (colLabel (unreserved_keyword INPUT)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier array_in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier OUTPUT)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier array_out)))) opt_array_bounds)))) , (def_elem (colLabel (identifier ELEMENT)) = (def_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (def_elem (colLabel (identifier INTERNALLENGTH)) = (def_arg (numericonly (signediconst (iconst 32)))))) )))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier bogus_type)))) opt_array_bounds)))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier bogus_type))) (definition ( (def_list (def_elem (colLabel (unreserved_keyword INPUT)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier array_in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier OUTPUT)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier array_out)))) opt_array_bounds)))) , (def_elem (colLabel (identifier ELEMENT)) = (def_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (def_elem (colLabel (identifier INTERNALLENGTH)) = (def_arg (numericonly (signediconst (iconst 32)))))) )))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier default_test_row))) AS ( (opttablefuncelementlist (tablefuncelementlist (tablefuncelement (colid (identifier f1)) (typename (simpletypename (generictype (type_function_name (identifier text_w_default)))) opt_array_bounds)) , (tablefuncelement (colid (identifier f2)) (typename (simpletypename (generictype (type_function_name (identifier int42)))) opt_array_bounds)))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier get_default_test))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename SETOF (simpletypename (generictype (type_function_name (identifier default_test_row)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst '\n  SELECT * FROM default_test;\n')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (func_table (func_expr_windowless (func_application (func_name (type_function_name (identifier get_default_test))) ( ))))))))))))) ; (stmt (commentstmt COMMENT ON TYPE (typename (simpletypename (generictype (type_function_name (identifier bad)))) opt_array_bounds) IS (comment_text (sconst (anysconst 'bad comment'))))) ; (stmt (commentstmt COMMENT ON TYPE (typename (simpletypename (generictype (type_function_name (identifier default_test_row)))) opt_array_bounds) IS (comment_text (sconst (anysconst 'good comment'))))) ; (stmt (commentstmt COMMENT ON TYPE (typename (simpletypename (generictype (type_function_name (identifier default_test_row)))) opt_array_bounds) IS (comment_text NULL))) ; (stmt (commentstmt COMMENT ON COLUMN (any_name (colid (identifier default_test_row)) (attrs . (attr_name (colLabel (identifier nope))))) IS (comment_text (sconst (anysconst 'bad comment'))))) ; (stmt (commentstmt COMMENT ON COLUMN (any_name (colid (identifier default_test_row)) (attrs . (attr_name (colLabel (identifier f1))))) IS (comment_text (sconst (anysconst 'good comment'))))) ; (stmt (commentstmt COMMENT ON COLUMN (any_name (colid (identifier default_test_row)) (attrs . (attr_name (colLabel (identifier f1))))) IS (comment_text NULL))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier text_w_default))))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier default_test_row)))) opt_array_bounds)) (drop_behavior_ CASCADE))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier default_test)))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier base_type))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier base_fn_in))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier base_type)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'boolin')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE)) (createfunc_opt_item (common_func_opt_item STRICT))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier base_fn_out))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier base_type)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst 'boolout')))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE)) (createfunc_opt_item (common_func_opt_item STRICT))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier base_type))) (definition ( (def_list (def_elem (colLabel (unreserved_keyword INPUT)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier base_fn_in)))) opt_array_bounds)))) , (def_elem (colLabel (identifier OUTPUT)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier base_fn_out)))) opt_array_bounds))))) )))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier base_type)))) opt_array_bounds)))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier base_type)))) opt_array_bounds)) (drop_behavior_ CASCADE))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary TABLE (relation_expr (qualified_name (colid (identifier mytab)))))))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier myvarchar))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier myvarcharin))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier oid)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric integer)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarchar)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE)) (createfunc_opt_item (common_func_opt_item PARALLEL (colid (identifier SAFE)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item AS (func_as (sconst (anysconst 'varcharin'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier myvarcharout))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarchar)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier cstring)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE)) (createfunc_opt_item (common_func_opt_item PARALLEL (colid (identifier SAFE)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item AS (func_as (sconst (anysconst 'varcharout'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier myvarcharsend))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarchar)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bytea)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STABLE)) (createfunc_opt_item (common_func_opt_item PARALLEL (colid (identifier SAFE)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item AS (func_as (sconst (anysconst 'varcharsend'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier myvarcharrecv))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier internal)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier oid)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric integer)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarchar)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier internal)))) (createfunc_opt_item (common_func_opt_item STABLE)) (createfunc_opt_item (common_func_opt_item PARALLEL (colid (identifier SAFE)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item AS (func_as (sconst (anysconst 'varcharrecv'))))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier myvarchar))) (definition ( (def_list (def_elem (colLabel (unreserved_keyword input)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarcharin)))) opt_array_bounds)))) , (def_elem (colLabel (identifier output)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarcharout)))) opt_array_bounds)))) , (def_elem (colLabel (identifier alignment)) = (def_arg (func_type (typename (simpletypename (numeric integer)) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword storage)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier main)))) opt_array_bounds))))) )))) ; (stmt (createdomainstmt CREATE DOMAIN (any_name (colid (identifier myvarchardom))) (as_ AS) (typename (simpletypename (generictype (type_function_name (identifier myvarchar)))) opt_array_bounds) colquallist)) ; (stmt (altertypestmt ALTER TYPE (any_name (colid (identifier myvarchar))) SET ( (operator_def_list (operator_def_elem (colLabel (identifier send)) = (operator_def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarcharsend)))) opt_array_bounds)))) , (operator_def_elem (colLabel (identifier receive)) = (operator_def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier myvarcharrecv)))) opt_array_bounds)))) , (operator_def_elem (colLabel (identifier typmod_in)) = (operator_def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier varchartypmodin)))) opt_array_bounds)))) , (operator_def_elem (colLabel (identifier typmod_out)) = (operator_def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier varchartypmodout)))) opt_array_bounds)))) , (operator_def_elem (colLabel (reserved_keyword analyze)) = (operator_def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier array_typanalyze)))) opt_array_bounds))))) ))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typinput)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typoutput)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typreceive)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typsend)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typmodin)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typmodout)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typanalyze)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typstorage)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_type))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'myvarchar')))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typinput)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typoutput)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typreceive)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typsend)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typmodin)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typmodout)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typanalyze)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typstorage)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_type))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'myvarchardom')))))))))))))))))))))))))))))))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier myvarchar)))) opt_array_bounds)))) ; (stmt (dropstmt DROP TYPE (type_name_list (typename (simpletypename (generictype (type_function_name (identifier myvarchar)))) opt_array_bounds)) (drop_behavior_ CASCADE))) ;)) <EOF>)