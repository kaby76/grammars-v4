(root (stmtblock (stmtmulti (stmt (definestmt CREATE OPERATOR (any_operator (all_op ##)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword path)))) opt_array_bounds)))) , (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword path)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword function)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier path_inter)))) opt_array_bounds)))) , (def_elem (colLabel (identifier commutator)) = (def_arg (qual_all_op (all_op ##))))) )))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op <%)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier point)))) opt_array_bounds)))) , (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier widget)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier pt_in_widget)))) opt_array_bounds)))) , (def_elem (colLabel (identifier commutator)) = (def_arg (qual_all_op (all_op >%)))) , (def_elem (colLabel (identifier negator)) = (def_arg (qual_all_op (all_op >=%))))) )))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op @#@)) (definition ( (def_list (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #@#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #%#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (func_name (type_function_name (identifier point))) (sconst (anysconst '(1,2)')))))))))))) (qual_op <%) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (func_name (type_function_name (identifier widget))) (sconst (anysconst '(0,0,3)'))))))))))))))))))))))))) AS (colLabel (identifier t))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (func_name (type_function_name (identifier point))) (sconst (anysconst '(1,2)')))))))))))) (qual_op <%) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (func_name (type_function_name (identifier widget))) (sconst (anysconst '(0,0,1)'))))))))))))))))))))))))) AS (colLabel (identifier f))))))))))) ; (stmt (commentstmt COMMENT ON OPERATOR (operator_with_argtypes (any_operator (all_op ######)) (oper_argtypes ( (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) , NONE ))) IS (comment_text (sconst (anysconst 'bad right unary'))))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op !=-)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))) (qual_op !=-)))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))) (qual_op !=) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))) (qual_op !=) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))))) ; (stmt (dostmt DO (dostmt_opt_list (dostmt_opt_item (sconst (anysconst $$  -- use DO to protect -- from psql\n  declare r boolean;\n  begin\n    execute  $e $ select 2 !=-- comment\n      1  $e $ into r;\n    raise info 'r = %', r;\n  end;\n $$)))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst true)))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign - (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) BETWEEN (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) AND (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst false)))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) BETWEEN (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) AND (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst false)))))))))))) <= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign - (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) BETWEEN (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) AND (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst false)))))))))))) >= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign - (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) BETWEEN (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))) AND (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))) <= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))) >= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))) <= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))) >= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))))) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_rol_op1)))) optrolelist)) ; (stmt (createschemastmt CREATE SCHEMA (colid (identifier schema_op1)) optschemaeltlist)) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target SCHEMA (name_list (name (colid (identifier schema_op1))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier PUBLIC))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target SCHEMA (name_list (name (colid (identifier schema_op1))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_rol_op1))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_rol_op1))))))) ; (stmt (definestmt CREATE OPERATOR (any_operator (colid (identifier schema_op1)) . (all_op #*#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #*#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename SETOF (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #*#)) (definition ( (def_list (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename SETOF (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (createfunctionstmt CREATE (or_replace_ OR REPLACE) FUNCTION (func_name (type_function_name (identifier fn_op2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric boolean)) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric boolean)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric boolean)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst $$ \n    SELECT NULL::BOOLEAN;\n $$)))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword sql)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op ===)) (definition ( (def_list (def_elem (colLabel (identifier LEFTARG)) = (def_arg (func_type (typename (simpletypename (numeric boolean)) opt_array_bounds)))) , (def_elem (colLabel (identifier RIGHTARG)) = (def_arg (func_type (typename (simpletypename (numeric boolean)) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword PROCEDURE)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier fn_op2)))) opt_array_bounds)))) , (def_elem (colLabel (identifier COMMUTATOR)) = (def_arg (qual_all_op (all_op ===)))) , (def_elem (colLabel (identifier NEGATOR)) = (def_arg (qual_all_op (all_op !==)))) , (def_elem (colLabel (unreserved_keyword RESTRICT)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier contsel)))) opt_array_bounds)))) , (def_elem (colLabel (type_func_name_keyword JOIN)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier contjoinsel)))) opt_array_bounds)))) , (def_elem (colLabel (identifier SORT1))) , (def_elem (colLabel (identifier SORT2))) , (def_elem (colLabel (identifier LTCMP))) , (def_elem (colLabel (identifier GTCMP))) , (def_elem (colLabel (identifier HASHES))) , (def_elem (colLabel (identifier MERGES)))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #@%#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds)))) , (def_elem (colLabel (identifier invalid_att)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))))) )))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #@%#)) (definition ( (def_list (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier numeric_fac)))) opt_array_bounds))))) )))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #@%#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_rol_op3)))) optrolelist)) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier type_op3))) AS ENUM ( (enum_val_list_ (enum_val_list (sconst (anysconst 'new')) , (sconst (anysconst 'open')) , (sconst (anysconst 'closed')))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier fn_op3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier type_op3)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst $$ \n    SELECT NULL::int8;\n $$)))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword sql)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target TYPE (any_name_list_ (any_name (colid (identifier type_op3))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_rol_op3))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target TYPE (any_name_list_ (any_name (colid (identifier type_op3))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier PUBLIC))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_rol_op3))))))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #*#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier type_op3)))) opt_array_bounds)))) , (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier fn_op3)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_rol_op4)))) optrolelist)) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier type_op4))) AS ENUM ( (enum_val_list_ (enum_val_list (sconst (anysconst 'new')) , (sconst (anysconst 'open')) , (sconst (anysconst 'closed')))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier fn_op4))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier type_op4)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst $$ \n    SELECT NULL::int8;\n $$)))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword sql)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target TYPE (any_name_list_ (any_name (colid (identifier type_op4))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_rol_op4))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target TYPE (any_name_list_ (any_name (colid (identifier type_op4))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier PUBLIC))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_rol_op4))))))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #*#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier type_op4)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier fn_op4)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_rol_op5)))) optrolelist)) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier type_op5))) AS ENUM ( (enum_val_list_ (enum_val_list (sconst (anysconst 'new')) , (sconst (anysconst 'open')) , (sconst (anysconst 'closed')))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier fn_op5))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst $$ \n    SELECT NULL::int8;\n $$)))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword sql)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (unreserved_keyword EXECUTE))))) ON (privilege_target FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier fn_op5))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))) , (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) ))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_rol_op5))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (unreserved_keyword EXECUTE))))) ON (privilege_target FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier fn_op5))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))) , (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) ))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier PUBLIC))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_rol_op5))))))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #*#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier fn_op5)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (transactionstmt BEGIN (transaction_ TRANSACTION))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_rol_op6)))) optrolelist)) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier type_op6))) AS ENUM ( (enum_val_list_ (enum_val_list (sconst (anysconst 'new')) , (sconst (anysconst 'open')) , (sconst (anysconst 'closed')))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier fn_op6))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier type_op6)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst $$ \n    SELECT NULL::type_op6;\n $$)))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword sql)))) (createfunc_opt_item (common_func_opt_item IMMUTABLE))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target TYPE (any_name_list_ (any_name (colid (identifier type_op6))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_rol_op6))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (identifier USAGE))))) ON (privilege_target TYPE (any_name_list_ (any_name (colid (identifier type_op6))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier PUBLIC))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_rol_op6))))))) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op #*#)) (definition ( (def_list (def_elem (colLabel (identifier leftarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (identifier rightarg)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int8)))) opt_array_bounds)))) , (def_elem (colLabel (unreserved_keyword procedure)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier fn_op6)))) opt_array_bounds))))) )))) ; (stmt (transactionstmt ROLLBACK)) ; (stmt (definestmt CREATE OPERATOR (any_operator (all_op ===)) (definition ( (def_list (def_elem (colLabel (identifier "Leftarg")) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier box)))) opt_array_bounds)))) , (def_elem (colLabel (identifier "Rightarg")) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier box)))) opt_array_bounds)))) , (def_elem (colLabel (identifier "Procedure")) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier area_equal_function)))) opt_array_bounds)))) , (def_elem (colLabel (identifier "Commutator")) = (def_arg (qual_all_op (all_op ===)))) , (def_elem (colLabel (identifier "Negator")) = (def_arg (qual_all_op (all_op !==)))) , (def_elem (colLabel (identifier "Restrict")) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier area_restriction_function)))) opt_array_bounds)))) , (def_elem (colLabel (identifier "Join")) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier area_join_function)))) opt_array_bounds)))) , (def_elem (colLabel (identifier "Hashes"))) , (def_elem (colLabel (identifier "Merges")))) )))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))) (qual_op !=) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))))))))) ;)) <EOF>)