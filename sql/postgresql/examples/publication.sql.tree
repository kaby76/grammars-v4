(root (stmtblock (stmtmulti (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_publication_user)))) (optrolelist (createoptroleelem (alteroptroleelem (identifier LOGIN))) (createoptroleelem (alteroptroleelem (identifier SUPERUSER)))))) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_publication_user2)))) optrolelist)) ; (stmt (createrolestmt CREATE ROLE (roleid (rolespec (nonreservedword (identifier regress_publication_user_dummy)))) (optrolelist (createoptroleelem (alteroptroleelem (identifier LOGIN))) (createoptroleelem (alteroptroleelem (identifier NOSUPERUSER)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more SESSION AUTHORIZATION (nonreservedword_or_sconst (sconst (anysconst 'regress_publication_user'))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'ERROR'))))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_default))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; (stmt (commentstmt COMMENT ON (object_type_name (drop_type_name PUBLICATION)) (name (colid (identifier testpub_default))) IS (comment_text (sconst (anysconst 'test publication'))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier obj_description))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier p)) (indirection (indirection_el . (attr_name (colLabel (identifier oid))))))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'pg_publication'))))))))))))))))))))))))))) )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_publication)))) (alias_clause (colid (identifier p)))))))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'ERROR'))))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpib_ins_trunct))) (definition_ WITH (definition ( (def_list (def_elem (colLabel (identifier publish)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword insert)))) opt_array_bounds))))) ))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) SET (definition ( (def_list (def_elem (colLabel (identifier publish)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword update)))) opt_array_bounds))))) )))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_xxx))) (definition_ WITH (definition ( (def_list (def_elem (colLabel (identifier foo)))) ))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_xxx))) (definition_ WITH (definition ( (def_list (def_elem (colLabel (identifier publish)) = (def_arg (sconst (anysconst 'cluster, vacuum'))))) ))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_xxx))) (definition_ WITH (definition ( (def_list (def_elem (colLabel (identifier publish_via_partition_root)) = (def_arg (sconst (anysconst 'true')))) , (def_elem (colLabel (identifier publish_via_partition_root)) = (def_arg (sconst (anysconst '0'))))) ))))) ; \dRp\n\n (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) SET (definition ( (def_list (def_elem (colLabel (identifier publish)) = (def_arg (sconst (anysconst 'insert, update, delete'))))) )))) ; \dRp\n\n (stmt (createschemastmt CREATE SCHEMA (colid (identifier pub_test)) optschemaeltlist)) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier testpub_tbl1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (unreserved_keyword data)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier pub_test)) (indirection (indirection_el . (attr_name (colLabel (identifier testpub_nopk)))))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier foo)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier bar)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (viewstmt CREATE VIEW (qualified_name (colid (identifier testpub_view))) AS (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))))))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier testpub_parted))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec PARTITION BY (colid (identifier LIST)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'ERROR'))))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_foralltables))) (publication_for_tables_ (publication_for_tables FOR ALL TABLES)) (definition_ WITH (definition ( (def_list (def_elem (colLabel (identifier publish)) = (def_arg (sconst (anysconst 'insert'))))) ))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_foralltables))) SET (definition ( (def_list (def_elem (colLabel (identifier publish)) = (def_arg (sconst (anysconst 'insert, update'))))) )))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier testpub_tbl2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (unreserved_keyword data)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_foralltables))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl2))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_foralltables))) DROP TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl2))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_foralltables))) SET TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier pub_test)) (indirection (indirection_el . (attr_name (colLabel (identifier testpub_nopk)))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pubname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier puballtables)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_publication))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pubname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'testpub_foralltables')))))))))))))))))))))))))))))))) ; \d+ testpub_tbl2\n \dRp+ testpub_foralltables\n\n (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier testpub_tbl2)))))) ; (stmt (dropstmt DROP (drop_type_name PUBLICATION) (name_list (name (colid (identifier testpub_foralltables)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier testpub_tbl3))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier testpub_tbl3a))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optinherit INHERITS ( (qualified_name_list (qualified_name (colid (identifier testpub_tbl3)))) )))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'ERROR'))))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub3))) (publication_for_tables_ (publication_for_tables FOR TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl3))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub4))) (publication_for_tables_ (publication_for_tables FOR TABLE (relation_expr_list (relation_expr ONLY (qualified_name (colid (identifier testpub_tbl3))))))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; \dRp+ testpub3\n \dRp+ testpub4\n\n (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier testpub_tbl3))) , (any_name (colid (identifier testpub_tbl3a)))))) ; (stmt (dropstmt DROP (drop_type_name PUBLICATION) (name_list (name (colid (identifier testpub3))) , (name (colid (identifier testpub4)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'ERROR'))))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_forparted))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_forparted1))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier testpub_parted1))) ( (opttableelementlist (tableelementlist (tableelement (tablelikeclause LIKE (qualified_name (colid (identifier testpub_parted))) tablelikeoptionlist)))) ))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_forparted1))) SET (definition ( (def_list (def_elem (colLabel (identifier publish)) = (def_arg (sconst (anysconst 'insert'))))) )))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier testpub_parted1))))) SET (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier testpub_parted)))) (partition_cmd ATTACH PARTITION (qualified_name (colid (identifier testpub_parted1))) (partitionboundspec FOR VALUES IN ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_forparted))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_parted))))))) ; \dRp+ testpub_forparted\n (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier testpub_parted1))))) SET (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier testpub_parted)))) (partition_cmd DETACH PARTITION (qualified_name (colid (identifier testpub_parted1)))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier testpub_parted1))))) SET (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_forparted))) SET (definition ( (def_list (def_elem (colLabel (identifier publish_via_partition_root)) = (def_arg (reserved_keyword true)))) )))) ; \dRp+ testpub_forparted\n (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier testpub_parted1)))))) ; (stmt (dropstmt DROP (drop_type_name PUBLICATION) (name_list (name (colid (identifier testpub_forparted))) , (name (colid (identifier testpub_forparted1)))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_fortbl))) (publication_for_tables_ (publication_for_tables FOR TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_view))))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'ERROR'))))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_fortbl))) (publication_for_tables_ (publication_for_tables FOR TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1)))) , (relation_expr (qualified_name (colid (identifier pub_test)) (indirection (indirection_el . (attr_name (colLabel (identifier testpub_nopk)))))))))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_fortbl))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub_fortbl))) (publication_for_tables_ (publication_for_tables FOR TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1))))))))) ; \dRp+ testpub_fortbl\n\n (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_view))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) SET TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier pub_test)) (indirection (indirection_el . (attr_name (colLabel (identifier testpub_nopk)))))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpib_ins_trunct))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier pub_test)) (indirection (indirection_el . (attr_name (colLabel (identifier testpub_nopk))))))) , (relation_expr (qualified_name (colid (identifier testpub_tbl1))))))) ; \d+ pub_test.testpub_nopk\n \d+ testpub_tbl1\n \dRp+ testpub_default\n\n (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) DROP TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1)))) , (relation_expr (qualified_name (colid (identifier pub_test)) (indirection (indirection_el . (attr_name (colLabel (identifier testpub_nopk)))))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) DROP TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier pub_test)) (indirection (indirection_el . (attr_name (colLabel (identifier testpub_nopk)))))))))) ; \d+ testpub_tbl1\n\n (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_publication_user2))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub2))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_publication_user))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege CREATE))) ON (privilege_target DATABASE (name_list (name (colid (identifier regression))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_publication_user2))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_publication_user2))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier client_min_messages))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (sconst (anysconst 'ERROR'))))))))))) ; (stmt (createpublicationstmt CREATE PUBLICATION (name (colid (identifier testpub2))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier client_min_messages))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub2))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_publication_user))))))) ; (stmt (grantrolestmt GRANT (privilege_list (privilege (colid (identifier regress_publication_user)))) TO (role_list (rolespec (nonreservedword (identifier regress_publication_user2)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_publication_user2))))))) ; (stmt (alterpublicationstmt ALTER PUBLICATION (name (colid (identifier testpub2))) ADD TABLE (relation_expr_list (relation_expr (qualified_name (colid (identifier testpub_tbl1))))))) ; (stmt (dropstmt DROP (drop_type_name PUBLICATION) (name_list (name (colid (identifier testpub2)))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_publication_user))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege CREATE))) ON (privilege_target DATABASE (name_list (name (colid (identifier regression))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_publication_user2))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier testpub_parted)))))) ; (stmt (dropstmt DROP (object_type_any_name VIEW) (any_name_list_ (any_name (colid (identifier testpub_view)))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier testpub_tbl1)))))) ; \dRp+ testpub_default\n\n (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_publication_user_dummy))))))) ; (stmt (renamestmt ALTER PUBLICATION (name (colid (identifier testpub_default))) RENAME TO (name (colid (identifier testpub_dummy))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (renamestmt ALTER PUBLICATION (name (colid (identifier testpub_default))) RENAME TO (name (colid (identifier testpub_foo))))) ; \dRp testpub_foo\n\n (stmt (renamestmt ALTER PUBLICATION (name (colid (identifier testpub_foo))) RENAME TO (name (colid (identifier testpub_default))))) ; (stmt (alterownerstmt ALTER PUBLICATION (name (colid (identifier testpub_default))) OWNER TO (rolespec (nonreservedword (identifier regress_publication_user2))))) ; \dRp testpub_default\n\n (stmt (dropstmt DROP (drop_type_name PUBLICATION) (name_list (name (colid (identifier testpub_default)))))) ; (stmt (dropstmt DROP (drop_type_name PUBLICATION) (name_list (name (colid (identifier testpib_ins_trunct)))))) ; (stmt (dropstmt DROP (drop_type_name PUBLICATION) (name_list (name (colid (identifier testpub_fortbl)))))) ; (stmt (dropstmt DROP (drop_type_name SCHEMA) (name_list (name (colid (identifier pub_test)))) (drop_behavior_ CASCADE))) ; (stmt (variableresetstmt RESET (reset_rest SESSION AUTHORIZATION))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_publication_user))) , (rolespec (nonreservedword (identifier regress_publication_user2)))))) ; (stmt (droprolestmt DROP ROLE (role_list (rolespec (nonreservedword (identifier regress_publication_user_dummy)))))) ;)) <EOF>)