(root (stmtblock (stmtmulti (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_dep_user)))) optrolelist)) ; (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_dep_user2)))) optrolelist)) ; (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_dep_user3)))) optrolelist)) ; (stmt (creategroupstmt CREATE GROUP (roleid (rolespec (nonreservedword (identifier regress_dep_group)))) optrolelist)) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier deptest))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier f2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege SELECT))) ON (privilege_target TABLE (qualified_name_list (qualified_name (colid (identifier deptest))))) TO (grantee_list (grantee GROUP (rolespec (nonreservedword (identifier regress_dep_group))))))) ; (stmt (grantstmt GRANT (privileges ALL) ON (privilege_target TABLE (qualified_name_list (qualified_name (colid (identifier deptest))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user)))) , (grantee (rolespec (nonreservedword (identifier regress_dep_user2))))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user)))))) ; (stmt (droprolestmt DROP GROUP (role_list (rolespec (nonreservedword (identifier regress_dep_group)))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege SELECT))) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier deptest))))) FROM (grantee_list (grantee GROUP (rolespec (nonreservedword (identifier regress_dep_group))))))) ; (stmt (droprolestmt DROP GROUP (role_list (rolespec (nonreservedword (identifier regress_dep_group)))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege SELECT) , (privilege (colid (unreserved_keyword INSERT))) , (privilege (colid (unreserved_keyword UPDATE))) , (privilege (colid (unreserved_keyword DELETE))) , (privilege (colid (unreserved_keyword TRUNCATE))) , (privilege REFERENCES))) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier deptest))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user))))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user)))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (unreserved_keyword TRIGGER))))) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier deptest))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user))))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user)))))) ; (stmt (revokestmt REVOKE (privileges ALL) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier deptest))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user2))))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user2)))))) ; \set VERBOSITY terse\n (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier deptest)))) (alter_table_cmds (alter_table_cmd OWNER TO (rolespec (nonreservedword (identifier regress_dep_user3))))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user3)))))) ; \set VERBOSITY default\n\n (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier deptest)))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user3)))))) ; (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_dep_user0)))) optrolelist)) ; (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_dep_user1)))) optrolelist)) ; (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_dep_user2)))) optrolelist)) ; (stmt (variablesetstmt SET (set_rest (set_rest_more SESSION AUTHORIZATION (nonreservedword_or_sconst (nonreservedword (identifier regress_dep_user0))))))) ; (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user1)))))) ; (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user0))) , (rolespec (nonreservedword (identifier regress_dep_user2)))))) ; (stmt (reassignownedstmt REASSIGN OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user0)))) TO (rolespec (nonreservedword (identifier regress_dep_user1))))) ; (stmt (reassignownedstmt REASSIGN OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user1)))) TO (rolespec (nonreservedword (identifier regress_dep_user0))))) ; (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user0)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier deptest1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem unique))))))) ))) ; (stmt (grantstmt GRANT (privileges ALL) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier deptest1))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user1))))) (grant_grant_option_ WITH GRANT OPTION))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more SESSION AUTHORIZATION (nonreservedword_or_sconst (nonreservedword (identifier regress_dep_user1))))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier deptest))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (grantstmt GRANT (privileges ALL) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier deptest1))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user2))))))) ; (stmt (variableresetstmt RESET (reset_rest SESSION AUTHORIZATION))) ; \z deptest1\n\n (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user1)))))) ; \z deptest1\n \d deptest\n\n (stmt (grantstmt GRANT (privileges ALL) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier deptest1))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user1))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege CREATE))) ON (privilege_target DATABASE (name_list (name (colid (identifier regression))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user1))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more SESSION AUTHORIZATION (nonreservedword_or_sconst (nonreservedword (identifier regress_dep_user1))))))) ; (stmt (createschemastmt CREATE SCHEMA (colid (identifier deptest)) optschemaeltlist)) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier deptest))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (alterdefaultprivilegesstmt ALTER DEFAULT PRIVILEGES (defacloptionlist (defacloption FOR ROLE (role_list (rolespec (nonreservedword (identifier regress_dep_user1))))) (defacloption IN SCHEMA (name_list (name (colid (identifier deptest)))))) (defaclaction GRANT (privileges ALL) ON (defacl_privilege_target TABLES) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_dep_user2)))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier deptest_func))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier void)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  BEGIN END;  $$))))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier deptest_enum))) AS ENUM ( (enum_val_list_ (enum_val_list (sconst (anysconst 'red')))) ))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier deptest_range))) AS RANGE (definition ( (def_list (def_elem (colLabel (identifier SUBTYPE)) = (def_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds))))) )))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier deptest2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createseqstmt CREATE SEQUENCE (qualified_name (colid (identifier ss1))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier deptest2)))) (alter_table_cmds (alter_table_cmd ALTER (colid (identifier f1)) (alter_column_default SET DEFAULT (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier nextval))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'ss1'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))) ; (stmt (alterseqstmt ALTER SEQUENCE (qualified_name (colid (identifier ss1))) (seqoptlist (seqoptelem OWNED BY (any_name (colid (identifier deptest2)) (attrs . (attr_name (colLabel (identifier f1))))))))) ; (stmt (definestmt CREATE TYPE (any_name (colid (identifier deptest_t))) AS ( (opttablefuncelementlist (tablefuncelementlist (tablefuncelement (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typowner)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier relowner)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_type)))) JOIN (table_ref (relation_expr (qualified_name (colid (identifier pg_class)))) (alias_clause (colid (identifier c)))) (join_qual ON (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)) (indirection (indirection_el . (attr_name (colLabel (identifier oid)))))))))))))))))))))))))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'deptest_t')))))))))))))))))))))))))))))))) ; (stmt (variableresetstmt RESET (reset_rest SESSION AUTHORIZATION))) ; (stmt (reassignownedstmt REASSIGN OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user1)))) TO (rolespec (nonreservedword (identifier regress_dep_user2))))) ; \dt deptest\n\n (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typowner)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier relowner)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_type)))) JOIN (table_ref (relation_expr (qualified_name (colid (identifier pg_class)))) (alias_clause (colid (identifier c)))) (join_qual ON (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)) (indirection (indirection_el . (attr_name (colLabel (identifier oid)))))))))))))))))))))))))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier typname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'deptest_t')))))))))))))))))))))))))))))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user1)))))) ; (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user1)))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user1)))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user2)))))) ; (stmt (dropownedstmt DROP OWNED BY (role_list (rolespec (nonreservedword (identifier regress_dep_user2))) , (rolespec (nonreservedword (identifier regress_dep_user0)))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user2)))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_dep_user0)))))) ;)) <EOF>)