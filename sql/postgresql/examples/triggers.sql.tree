(root (stmtblock (stmtmulti (stmt (createstmt create table (qualified_name (colid (identifier pkeys))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier pkey1)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null))))) , (tableelement (columnDef (colid (identifier pkey2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null))))))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier fkeys))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier fkey1)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier fkey2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier fkey3)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier fkeys2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier fkey21)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier fkey22)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier pkey23)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null))))))) ))) ; (stmt (indexstmt create index (index_name_ (name (colid (identifier fkeys_i)))) on (relation_expr (qualified_name (colid (identifier fkeys)))) ( (index_params (index_elem (colid (identifier fkey1)) index_elem_options) , (index_elem (colid (identifier fkey2)) index_elem_options)) ))) ; (stmt (indexstmt create index (index_name_ (name (colid (identifier fkeys2_i)))) on (relation_expr (qualified_name (colid (identifier fkeys2)))) ( (index_params (index_elem (colid (identifier fkey21)) index_elem_options) , (index_elem (colid (identifier fkey22)) index_elem_options)) ))) ; (stmt (indexstmt create index (index_name_ (name (colid (identifier fkeys2p_i)))) on (relation_expr (qualified_name (colid (identifier fkeys2)))) ( (index_params (index_elem (colid (identifier pkey23)) index_elem_options)) ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier pkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '1')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier pkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 20)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '2')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier pkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '3')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier pkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 40)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '4')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier pkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '5')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier pkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 60)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '6')))))))))))))))))))))))))) )))))))))) ; (stmt (indexstmt create (unique_ unique) index (index_name_ (name (colid (identifier pkeys_i)))) on (relation_expr (qualified_name (colid (identifier pkeys)))) ( (index_params (index_elem (colid (identifier pkey1)) index_elem_options) , (index_elem (colid (identifier pkey2)) index_elem_options)) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier check_fkeys_pkey_exist))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier fkeys))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure function) (func_name (type_function_name (identifier check_primary_key))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'fkey1'))) , (triggerfuncarg (sconst (anysconst 'fkey2'))) , (triggerfuncarg (sconst (anysconst 'pkeys'))) , (triggerfuncarg (sconst (anysconst 'pkey1'))) , (triggerfuncarg (sconst (anysconst 'pkey2')))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier check_fkeys_pkey2_exist))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier fkeys))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure function) (func_name (type_function_name (identifier check_primary_key))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'fkey3'))) , (triggerfuncarg (sconst (anysconst 'fkeys2'))) , (triggerfuncarg (sconst (anysconst 'pkey23')))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier check_fkeys2_pkey_exist))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier fkeys2))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier check_primary_key))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'fkey21'))) , (triggerfuncarg (sconst (anysconst 'fkey22'))) , (triggerfuncarg (sconst (anysconst 'pkeys'))) , (triggerfuncarg (sconst (anysconst 'pkey1'))) , (triggerfuncarg (sconst (anysconst 'pkey2')))) ))) ; (stmt (commentstmt COMMENT ON (object_type_name_on_any_name TRIGGER) (name (colid (identifier check_fkeys2_pkey_bad))) ON (any_name (colid (identifier fkeys2))) IS (comment_text (sconst (anysconst 'wrong'))))) ; (stmt (commentstmt COMMENT ON (object_type_name_on_any_name TRIGGER) (name (colid (identifier check_fkeys2_pkey_exist))) ON (any_name (colid (identifier fkeys2))) IS (comment_text (sconst (anysconst 'right'))))) ; (stmt (commentstmt COMMENT ON (object_type_name_on_any_name TRIGGER) (name (colid (identifier check_fkeys2_pkey_exist))) ON (any_name (colid (identifier fkeys2))) IS (comment_text NULL))) ; (stmt (createtrigstmt create trigger (name (colid (identifier check_pkeys_fkey_cascade))) (triggeractiontime before) (triggerevents (triggeroneevent delete) or (triggeroneevent update)) on (qualified_name (colid (identifier pkeys))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier check_foreign_key))) ( (triggerfuncargs (triggerfuncarg (iconst 2)) , (triggerfuncarg (sconst (anysconst 'cascade'))) , (triggerfuncarg (sconst (anysconst 'pkey1'))) , (triggerfuncarg (sconst (anysconst 'pkey2'))) , (triggerfuncarg (sconst (anysconst 'fkeys'))) , (triggerfuncarg (sconst (anysconst 'fkey1'))) , (triggerfuncarg (sconst (anysconst 'fkey2'))) , (triggerfuncarg (sconst (anysconst 'fkeys2'))) , (triggerfuncarg (sconst (anysconst 'fkey21'))) , (triggerfuncarg (sconst (anysconst 'fkey22')))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier check_fkeys2_fkey_restrict))) (triggeractiontime before) (triggerevents (triggeroneevent delete) or (triggeroneevent update)) on (qualified_name (colid (identifier fkeys2))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier check_foreign_key))) ( (triggerfuncargs (triggerfuncarg (iconst 1)) , (triggerfuncarg (sconst (anysconst 'restrict'))) , (triggerfuncarg (sconst (anysconst 'pkey23'))) , (triggerfuncarg (sconst (anysconst 'fkeys'))) , (triggerfuncarg (sconst (anysconst 'fkey3')))) ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '1'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '3'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 40)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '4'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '5'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 70)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '5'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '1'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '3'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 40)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '4'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '5'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 70)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '5'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier fkeys)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 60)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '6'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) )))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier pkeys))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey1)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey2)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '3')))))))))))))))))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier pkeys))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey1)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 40))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey2)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '4')))))))))))))))))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier pkeys))))) set (set_clause_list (set_clause (set_target (colid (identifier pkey1)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 7))))))))))))))))))))))))) , (set_clause (set_target (colid (identifier pkey2)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '70'))))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey1)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey2)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '5')))))))))))))))))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier pkeys))))) set (set_clause_list (set_clause (set_target (colid (identifier pkey1)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 7))))))))))))))))))))))))) , (set_clause (set_target (colid (identifier pkey2)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '70'))))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey1)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier pkey2)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '1')))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier trigger_name)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_manipulation)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_schema)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_table)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_order)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_condition)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_orientation)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_timing)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_reference_old_table)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_reference_new_table)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier triggers)))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_table)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'pkeys'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'fkeys'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'fkeys2')))))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier trigger_name))))) COLLATE (any_name (colid (identifier "C")))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier pkeys)))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier fkeys)))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier fkeys2)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigtest))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier f2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigger_return_old))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent delete) or (triggeroneevent update)) on (qualified_name (colid (identifier trigtest))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_return_old))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))) set (set_clause_list (set_clause (set_target (colid (identifier f2)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier f2)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bar'))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier f1_times_10))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$  begin new.f1 := new.f1 * 10; return new; end  $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigger_alpha))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier trigtest))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier f1_times_10))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))) set (set_clause_list (set_clause (set_target (colid (identifier f2)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier f2)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bar'))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigger_zed))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier trigtest))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier f1_times_10))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))) set (set_clause_list (set_clause (set_target (colid (identifier f2)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier f2)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bar'))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier trigger_alpha))) on (any_name (colid (identifier trigtest))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))) set (set_clause_list (set_clause (set_target (colid (identifier f2)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier f2)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bar'))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigtest)))))) ; (stmt (createseqstmt create sequence (qualified_name (colid (identifier ttdummy_seq))) (optseqoptlist (seqoptlist (seqoptelem increment (numericonly (signediconst (iconst 10)))) (seqoptelem start (numericonly (signediconst (iconst 0)))) (seqoptelem minvalue (numericonly (signediconst (iconst 0)))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier tttest))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier price_id)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier price_val)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier price_on)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier price_off)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem default (b_expr (c_expr (aexprconst (iconst 999999))))))))))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier ttdummy))) (triggeractiontime before) (triggerevents (triggeroneevent delete) or (triggeroneevent update)) on (qualified_name (colid (identifier tttest))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier ttdummy))) ( (triggerfuncargs (triggerfuncarg (colLabel (identifier price_on))) , (triggerfuncarg (colLabel (identifier price_off)))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier ttserial))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier tttest))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier autoinc))) ( (triggerfuncargs (triggerfuncarg (colLabel (identifier price_on))) , (triggerfuncarg (colLabel (identifier ttdummy_seq)))) ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier tttest)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst null)))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier tttest)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst null)))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier tttest)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_off)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 999999))))))))))))))))))))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) set (set_clause_list (set_clause (set_target (colid (identifier price_val)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30)))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) set (set_clause_list (set_clause (set_target (colid (identifier price_id)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5)))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier set_ttdummy))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) set (set_clause_list (set_clause (set_target (colid (identifier price_off)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 999999)))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_val)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) set (set_clause_list (set_clause (set_target (colid (identifier price_id)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5)))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier set_ttdummy))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) set (set_clause_list (set_clause (set_target (colid (identifier price_on)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign - (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier set_ttdummy))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier tttest))))) set (set_clause_list (set_clause (set_target (colid (identifier price_on)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign - (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier tttest))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_on)))))))))))))) <= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 35))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_off)))))))))))))) > (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 35))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier price_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier tttest)))))) ; (stmt (dropstmt drop (object_type_any_name sequence) (any_name_list_ (any_name (colid (identifier ttdummy_seq)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier log_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier tstamp)) (typename (simpletypename (constdatetime timestamp)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem default (b_expr (b_expr (c_expr (func_expr (func_application (func_name (type_function_name (identifier timeofday))) ( ))))) :: (typename (simpletypename (constdatetime timestamp)) opt_array_bounds))))))))) ))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier main_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem unique))))) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (copystmt COPY (qualified_name (colid (identifier main_table))) (column_list_ ( (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))) )) (copy_from FROM) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier trigger_func))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst '\nBEGIN\n\tRAISE NOTICE ''trigger_func(%) called: action = %, when = %, level = %'', TG_ARGV[0], TG_OP, TG_WHEN, TG_LEVEL;\n\tRETURN NULL;\nEND;'))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier before_ins_stmt_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_ins_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_ins_stmt_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_ins_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_upd_stmt_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_table))) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_upd_stmt')))) ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier main_table)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier a)) opt_indirection) , (insert_column_item (colid (identifier b)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10))))))))))))))))))))))))) )))))))) (on_conflict_ ON CONFLICT (conf_expr_ ( (index_params (index_elem (colid (identifier a)) index_elem_options)) )) DO UPDATE SET (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier EXCLUDED)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))))))))))))))))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_upd_row_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_upd_row')))) ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier main_table)))) (insert_rest DEFAULT VALUES))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_table))))) SET (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))) < (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_table))))) SET (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))) > (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100))))))))))))))))))))))))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier main_table)))) (alter_table_cmds (alter_table_cmd DROP CONSTRAINT (name (colid (identifier main_table_a_key))))))) ; (stmt (copystmt COPY (qualified_name (colid (identifier main_table))) (column_list_ ( (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))) )) (copy_from FROM) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier main_table)))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))))))))))))))))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier modified_a))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier a))))))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier a)))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'modified_a')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier modified_any))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . *))))))))))))))) IS DISTINCT FROM (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . *))))))))))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'modified_any')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier insert_a))) (triggeractiontime AFTER) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier a))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 123)))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'insert_a')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier delete_a))) (triggeractiontime AFTER) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier a))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 123)))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'delete_a')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier insert_when))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst true))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'insert_when')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier delete_when))) (triggeractiontime AFTER) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst true))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'delete_when')))) ))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier trigger_name)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_manipulation)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_schema)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_table)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_order)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_condition)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_orientation)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_timing)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_reference_old_table)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_reference_new_table)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier triggers)))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_table)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'main_table')))))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier trigger_name))))) COLLATE (any_name (colid (identifier "C")))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier main_table)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier a)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 123))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 456))))))))))))))))))))))))) )))))))))) ; (stmt (copystmt COPY (qualified_name (colid (identifier main_table))) (copy_from FROM) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_table))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 123)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 456))))))))))))))))))))))))) )))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_table))))) SET (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50))))))))))))))))))))))))) , (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 60)))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier main_table)))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_triggerdef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst true))))))))))))))))))))))))) )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'main_table')))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'modified_a')))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_triggerdef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst false))))))))))))))))))))))))) )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'main_table')))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'modified_a')))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_triggerdef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst true))))))))))))))))))))))))) )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'main_table')))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'modified_any')))))))))))))))))))))))))))))))) ; (stmt (renamestmt ALTER TRIGGER (name (colid (identifier modified_a))) ON (qualified_name (colid (identifier main_table))) RENAME TO (name (colid (identifier modified_modified_a))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier count))) ( * )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'main_table')))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'modified_a')))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier count))) ( * )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'main_table')))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'modified_modified_a')))))))))))))))))))))))))))))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier modified_modified_a))) ON (any_name (colid (identifier main_table))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier modified_any))) ON (any_name (colid (identifier main_table))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier insert_a))) ON (any_name (colid (identifier main_table))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier delete_a))) ON (any_name (colid (identifier main_table))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier insert_when))) ON (any_name (colid (identifier main_table))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier delete_when))) ON (any_name (colid (identifier main_table))))) ; (stmt (createstmt create table (qualified_name (colid (identifier table_with_oids))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier table_with_oids)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier oid_unchanged_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier table_with_oids))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) (triggerwhen when ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword new)) (indirection (indirection_el . (attr_name (colLabel (identifier tableoid))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword old)) (indirection (indirection_el . (attr_name (colLabel (identifier tableoid))))))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword new)) (indirection (indirection_el . (attr_name (colLabel (identifier tableoid))))))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) )) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_upd_oid_unchanged')))) ))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier table_with_oids))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier table_with_oids)))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier after_upd_row_trig))) ON (any_name (colid (identifier main_table))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier before_upd_a_row_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_upd_a_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_upd_b_row_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier b)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_upd_b_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_upd_a_b_row_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_upd_a_b_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier before_upd_a_stmt_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_upd_a_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_upd_b_stmt_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier b)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_upd_b_stmt')))) ))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_triggerdef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid))))))))))))))))))))))))))) )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'main_table')))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'after_upd_a_b_row_trig')))))))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_table))))) SET (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50)))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_table))))) SET (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10)))))))))))))))))))))))))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier some_t))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier some_col)) (typename (simpletypename (numeric boolean)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem NOT NULL))))))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier dummy_update_func))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nBEGIN\n  RAISE NOTICE 'dummy_update_func(%) called: action = %, old = %, new = %',\n    TG_ARGV[0], TG_OP, OLD, NEW;\n  RETURN NEW;\nEND;\n $$)))) (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier some_trig_before))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier some_t))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_update_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier some_trig_aftera))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier some_t))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not NOT (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier some_col))))))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier some_col)))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_update_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'aftera')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier some_trig_afterb))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier some_t))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not NOT (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier some_col)))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier dummy_update_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'afterb')))) ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier some_t)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst TRUE)))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier some_t))))) SET (set_clause_list (set_clause (set_target (colid (identifier some_col)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst TRUE))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier some_t))))) SET (set_clause_list (set_clause (set_target (colid (identifier some_col)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst FALSE))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier some_t))))) SET (set_clause_list (set_clause (set_target (colid (identifier some_col)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst TRUE))))))))))))))))))))))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier some_t)))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier error_upd_and_col))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE) OR (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'error_upd_and_col')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier error_upd_a_a))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'error_upd_a_a')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier error_ins_when))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier a))))))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier a)))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'error_ins_old')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier error_del_when))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent DELETE) OR (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier a))))))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier a)))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'error_del_new')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier error_del_when))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier tableoid))))))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'error_when_sys_column')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier error_stmt_when))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . *))))))))))))))) IS DISTINCT FROM (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . *))))))))))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'error_stmt_when')))) ))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier main_table)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier b)))))) ; (stmt (transactionstmt begin)) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier after_upd_a_b_row_trig))) ON (any_name (colid (identifier main_table))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier after_upd_b_row_trig))) ON (any_name (colid (identifier main_table))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier after_upd_b_stmt_trig))) ON (any_name (colid (identifier main_table))))) ; (stmt (altertablestmt ALTER TABLE (relation_expr (qualified_name (colid (identifier main_table)))) (alter_table_cmds (alter_table_cmd DROP (column_ COLUMN) (colid (identifier b)))))) ; (stmt (transactionstmt rollback)) ; (stmt (createstmt create table (qualified_name (colid (identifier trigtest))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier i)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigtest2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier i)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem references (qualified_name (colid (identifier trigtest))) (column_list_ ( (columnlist (columnElem (colid (identifier i)))) )) (key_actions (key_delete on delete (key_action cascade)))))))))) ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier trigtest))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n\traise notice '% % % %', TG_RELNAME, TG_OP, TG_WHEN, TG_LEVEL;\n\treturn new;\nend; $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigtest_b_row_tg))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update) or (triggeroneevent delete)) on (qualified_name (colid (identifier trigtest))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigtest))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigtest_a_row_tg))) (triggeractiontime after) (triggerevents (triggeroneevent insert) or (triggeroneevent update) or (triggeroneevent delete)) on (qualified_name (colid (identifier trigtest))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigtest))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigtest_b_stmt_tg))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update) or (triggeroneevent delete)) on (qualified_name (colid (identifier trigtest))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigtest))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigtest_a_stmt_tg))) (triggeractiontime after) (triggerevents (triggeroneevent insert) or (triggeroneevent update) or (triggeroneevent delete)) on (qualified_name (colid (identifier trigtest))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigtest))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest default values))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigtest)))) (alter_table_cmds (alter_table_cmd disable trigger (name (colid (identifier trigtest_b_row_tg))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest default values))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigtest)))) (alter_table_cmds (alter_table_cmd disable trigger user)))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest default values))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigtest)))) (alter_table_cmds (alter_table_cmd enable trigger (name (colid (identifier trigtest_a_stmt_tg))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest default values))) ; (stmt (variablesetstmt set (set_rest (set_rest_more (generic_set (var_name (colid (identifier session_replication_role))) = (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (nonreservedword (unreserved_keyword replica))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest default values))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigtest)))) (alter_table_cmds (alter_table_cmd enable always trigger (name (colid (identifier trigtest_a_stmt_tg))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest default values))) ; (stmt (variableresetstmt reset (reset_rest (generic_reset (var_name (colid (identifier session_replication_role))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier i)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest2))))))))))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigtest)))) (alter_table_cmds (alter_table_cmd disable trigger all)))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigtest))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier i)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest2))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigtest)))) (insert_rest default values))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trigtest))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigtest2)))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigtest)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier trigger_test))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier i)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier v)) (typename (simpletypename (character (character_c varchar))) opt_array_bounds) colquallist)))) ))) ; (stmt (createfunctionstmt CREATE (or_replace_ OR REPLACE) FUNCTION (func_name (type_function_name (identifier trigger_data))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \n\ndeclare\n\n\targstr text;\n\trelid text;\n\nbegin\n\n\trelid := TG_relid::regclass;\n\n\t-- plpgsql can't discover its trigger data in a hash like perl and python\n\t-- can, or by a sort of reflection like tcl can,\n\t-- so we have to hard code the names.\n\traise NOTICE 'TG_NAME: %', TG_name;\n\traise NOTICE 'TG_WHEN: %', TG_when;\n\traise NOTICE 'TG_LEVEL: %', TG_level;\n\traise NOTICE 'TG_OP: %', TG_op;\n\traise NOTICE 'TG_RELID::regclass: %', relid;\n\traise NOTICE 'TG_RELNAME: %', TG_relname;\n\traise NOTICE 'TG_TABLE_NAME: %', TG_table_name;\n\traise NOTICE 'TG_TABLE_SCHEMA: %', TG_table_schema;\n\traise NOTICE 'TG_NARGS: %', TG_nargs;\n\n\targstr := '[';\n\tfor i in 0 .. TG_nargs - 1 loop\n\t\tif i > 0 then\n\t\t\targstr := argstr || ', ';\n\t\tend if;\n\t\targstr := argstr || TG_argv[i];\n\tend loop;\n\targstr := argstr || ']';\n\traise NOTICE 'TG_ARGV: %', argstr;\n\n\tif TG_OP != 'INSERT' then\n\t\traise NOTICE 'OLD: %', OLD;\n\tend if;\n\n\tif TG_OP != 'DELETE' then\n\t\traise NOTICE 'NEW: %', NEW;\n\tend if;\n\n\tif TG_OP = 'DELETE' then\n\t\treturn OLD;\n\telse\n\t\treturn NEW;\n\tend if;\n\nend;\n $$))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier show_trigger_data_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier trigger_test))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_data))) ( (triggerfuncargs (triggerfuncarg (iconst 23)) , (triggerfuncarg (sconst (anysconst 'skidoo')))) ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigger_test)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'insert')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))) set (set_clause_list (set_clause (set_target (colid (identifier v)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'update'))))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier i)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier show_trigger_data_trig))) on (any_name (colid (identifier trigger_test))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier trigger_data))) (func_args ( )))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier trigger_test)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier trigger_test))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier f2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier f3)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier mytrigger))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n\tif row(old.*) = row(new.*) then\n\t\traise notice 'row % not changed', new.f1;\n\telse\n\t\traise notice 'row % changed', new.f1;\n\tend if;\n\treturn new;\nend $$))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier t))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier trigger_test))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier mytrigger))) ( triggerfuncargs ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier trigger_test)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bar')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier trigger_test)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'baz'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'quux')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f3)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bar'))))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f3)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst NULL))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f3)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst NULL))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE (or_replace_ OR REPLACE) FUNCTION (func_name (type_function_name (identifier mytrigger))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n\tif row(old.*) is distinct from row(new.*) then\n\t\traise notice 'row % changed', new.f1;\n\telse\n\t\traise notice 'row % not changed', new.f1;\n\tend if;\n\treturn new;\nend $$))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f3)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bar'))))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f3)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst NULL))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier trigger_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f3)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst NULL))))))))))))))))))))))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier trigger_test)))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier mytrigger))) (func_args ( )))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier serializable_update_trig))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \ndeclare\n\trec record;\nbegin\n\tnew.description = 'updated in trigger';\n\treturn new;\nend;\n $$))))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier serializable_update_tab))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier filler)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier description)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier serializable_update_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier serializable_update_tab))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier serializable_update_trig))) ( triggerfuncargs ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier serializable_update_tab)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier repeat))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'xyzxz')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100)))))))))))))))))))))))))) )))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'new')))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (func_table (func_expr_windowless (func_application (func_name (type_function_name (identifier generate_series))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50)))))))))))))))))))))))))) )))) (func_alias_clause (alias_clause (colid (identifier a))))))))))))))) ; (stmt (transactionstmt BEGIN)) ; (stmt (variablesetstmt SET (set_rest TRANSACTION (transaction_mode_list (transaction_mode_item ISOLATION LEVEL (iso_level SERIALIZABLE)))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier serializable_update_tab))))) SET (set_clause_list (set_clause (set_target (colid (identifier description)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'no no')))))))))))))))))))))))))) , (set_clause (set_target (colid (identifier id)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (transactionstmt COMMIT)) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier description)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier serializable_update_tab))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier serializable_update_tab)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier min_updates_test))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier f2)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier f3)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier min_updates_test)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'b'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '2'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst null)))))))))))))))))))))))) )))))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier z_min_update))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier min_updates_test))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier suppress_redundant_updates_trigger))) ( triggerfuncargs ))) ; \set QUIET false\n\n (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier min_updates_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f1)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier f1))))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier min_updates_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f2)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier f2)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier min_updates_test))))) SET (set_clause_list (set_clause (set_target (colid (identifier f3)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier f3))))))))))))))) is null))))))))))))) ; \set QUIET true\n\n (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier min_updates_test))))))))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier min_updates_test)))))) ; (stmt (viewstmt CREATE VIEW (qualified_name (colid (identifier main_view))) AS (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier main_table)))))))))))))) ; (stmt (createfunctionstmt CREATE (or_replace_ OR REPLACE) FUNCTION (func_name (type_function_name (identifier view_trigger))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \ndeclare\n    argstr text := '';\nbegin\n    for i in 0 .. TG_nargs - 1 loop\n        if i > 0 then\n            argstr := argstr || ', ';\n        end if;\n        argstr := argstr || TG_argv[i];\n    end loop;\n\n    raise notice '% % % % (%)', TG_RELNAME, TG_WHEN, TG_OP, TG_LEVEL, argstr;\n\n    if TG_LEVEL = 'ROW' then\n        if TG_OP = 'INSERT' then\n            raise NOTICE 'NEW: %', NEW;\n            INSERT INTO main_table VALUES (NEW.a, NEW.b);\n            RETURN NEW;\n        end if;\n\n        if TG_OP = 'UPDATE' then\n            raise NOTICE 'OLD: %, NEW: %', OLD, NEW;\n            UPDATE main_table SET a = NEW.a, b = NEW.b WHERE a = OLD.a AND b = OLD.b;\n            if NOT FOUND then RETURN NULL; end if;\n            RETURN NEW;\n        end if;\n\n        if TG_OP = 'DELETE' then\n            raise NOTICE 'OLD: %', OLD;\n            DELETE FROM main_table WHERE a = OLD.a AND b = OLD.b;\n            if NOT FOUND then RETURN NULL; end if;\n            RETURN OLD;\n        end if;\n    end if;\n\n    RETURN NULL;\nend;\n $$))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_ins_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_upd_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_del_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_ins_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_upd_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_del_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent TRUNCATE)) ON (qualified_name (colid (identifier main_view))) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_tru_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent TRUNCATE)) ON (qualified_name (colid (identifier main_view))) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_tru_row')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_ins')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_upd')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_table))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_del')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) (triggerwhen WHEN ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier a))))))))))))))))) <> (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier a)))))))))))))))))))))))))))) )) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_upd')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent UPDATE OF (columnlist (columnElem (colid (identifier a)))))) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_upd')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier invalid_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_view))) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_upd')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier instead_of_insert_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_ins')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier instead_of_update_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_upd')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier instead_of_delete_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'instead_of_del')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier before_ins_stmt_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_view_ins_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier before_upd_stmt_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_view_upd_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier before_del_stmt_trig))) (triggeractiontime BEFORE) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'before_view_del_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_ins_stmt_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_view_ins_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_upd_stmt_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_view_upd_stmt')))) ))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier after_del_stmt_trig))) (triggeractiontime AFTER) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier main_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype STATEMENT)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier view_trigger))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'after_view_del_stmt')))) ))) ; \set QUIET false\n\n (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier main_view)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 20)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 30))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier main_view)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 21)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 31))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 31)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 20))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 32)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 21))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 31))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))))))))))))))))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier before_upd_a_row_trig))) ON (any_name (colid (identifier main_table))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 31)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 20))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 32)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 21))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 31))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst false)))))))))))))))))))))))))) ; (stmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_view))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 20)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 21))))))))))))))))))))))))) )))))))))))) ; (stmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier main_view))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 31))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))))))))))))))))))) ; \set QUIET true\n\n \d main_view\n\n (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier instead_of_insert_trig))) ON (any_name (colid (identifier main_view))))) ; (stmt (dropstmt DROP (object_type_name_on_any_name TRIGGER) (name (colid (identifier instead_of_delete_trig))) ON (any_name (colid (identifier main_view))))) ; \d+ main_view\n (stmt (dropstmt DROP (object_type_any_name VIEW) (any_name_list_ (any_name (colid (identifier main_view)))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier country_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier country_id)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier country_name)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem unique)) (colconstraint (colconstraintelem not null))))) , (tableelement (columnDef (colid (identifier continent)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null))))))) ))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier country_table)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier country_name)) opt_indirection) , (insert_column_item (colid (identifier continent)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Japan'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Asia')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'UK'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Europe')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USA'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'North America')))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier city_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier city_id)) (typename (simpletypename (generictype (type_function_name (identifier serial)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier city_name)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null))))) , (tableelement (columnDef (colid (identifier population)) (typename (simpletypename (numeric bigint)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier country_id)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem references (qualified_name (colid (identifier country_table)))))))))) ))) ; (stmt (viewstmt CREATE VIEW (qualified_name (colid (identifier city_view))) AS (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_id)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier population)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier country_name)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier continent)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier city_table)))) (alias_clause (colid (identifier ci))) (join_type LEFT) JOIN (table_ref (relation_expr (qualified_name (colid (identifier country_table)))) (alias_clause (colid (identifier co)))) (join_qual ON (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier co)) (indirection (indirection_el . (attr_name (colLabel (identifier country_id))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier ci)) (indirection (indirection_el . (attr_name (colLabel (identifier country_id))))))))))))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier city_insert))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \ndeclare\n    ctry_id int;\nbegin\n    if NEW.country_name IS NOT NULL then\n        SELECT country_id, continent INTO ctry_id, NEW.continent\n            FROM country_table WHERE country_name = NEW.country_name;\n        if NOT FOUND then\n            raise exception 'No such country: "%"', NEW.country_name;\n        end if;\n    else\n        NEW.continent := NULL;\n    end if;\n\n    if NEW.city_id IS NOT NULL then\n        INSERT INTO city_table\n            VALUES(NEW.city_id, NEW.city_name, NEW.population, ctry_id);\n    else\n        INSERT INTO city_table(city_name, population, country_id)\n            VALUES(NEW.city_name, NEW.population, ctry_id)\n            RETURNING city_id INTO NEW.city_id;\n    end if;\n\n    RETURN NEW;\nend;\n $$))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier city_insert_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent INSERT)) ON (qualified_name (colid (identifier city_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier city_insert))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier city_delete))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nbegin\n    DELETE FROM city_table WHERE city_id = OLD.city_id;\n    if NOT FOUND then RETURN NULL; end if;\n    RETURN OLD;\nend;\n $$))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier city_delete_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent DELETE)) ON (qualified_name (colid (identifier city_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier city_delete))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier city_update))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \ndeclare\n    ctry_id int;\nbegin\n    if NEW.country_name IS DISTINCT FROM OLD.country_name then\n        SELECT country_id, continent INTO ctry_id, NEW.continent\n            FROM country_table WHERE country_name = NEW.country_name;\n        if NOT FOUND then\n            raise exception 'No such country: "%"', NEW.country_name;\n        end if;\n\n        UPDATE city_table SET city_name = NEW.city_name,\n                              population = NEW.population,\n                              country_id = ctry_id\n            WHERE city_id = OLD.city_id;\n    else\n        UPDATE city_table SET city_name = NEW.city_name,\n                              population = NEW.population\n            WHERE city_id = OLD.city_id;\n        NEW.continent := OLD.continent;\n    end if;\n\n    if NOT FOUND then RETURN NULL; end if;\n    RETURN NEW;\nend;\n $$))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier city_update_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent UPDATE)) ON (qualified_name (colid (identifier city_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier city_update))) ( triggerfuncargs ))) ; \set QUIET false\n\n (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier city_view)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier city_name)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Tokyo')))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier city_view)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier city_name)) opt_indirection) , (insert_column_item (colid (identifier population)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'London'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 7556900))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier city_view)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier city_name)) opt_indirection) , (insert_column_item (colid (identifier country_name)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Washington DC'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USA')))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier city_view)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier city_id)) opt_indirection) , (insert_column_item (colid (identifier city_name)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 123456)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'New York')))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier city_view)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 234567)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Birmingham'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1016800)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'UK'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'EU')))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Japon'))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Tokyo')))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Japan'))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Takyo')))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Japan'))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Tokyo')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier population)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 13010279)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Tokyo')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'UK'))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'New York')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USA')))))))))))))))))))))))))) , (set_clause (set_target (colid (identifier population)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 8391881)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'New York')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier continent)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'EU'))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier continent)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Europe')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view)))) (colid (identifier v1))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v2)) (indirection (indirection_el . (attr_name (colLabel (identifier country_name)))))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier city_view)))) (alias_clause (colid (identifier v2)))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v2)) (indirection (indirection_el . (attr_name (colLabel (identifier city_name))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Birmingham')))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v1)) (indirection (indirection_el . (attr_name (colLabel (identifier city_name))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'London')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Birmingham')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; \set QUIET true\n\n (stmt (viewstmt CREATE VIEW (qualified_name (colid (identifier european_city_view))) AS (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier city_view))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier continent)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Europe'))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier count))) ( * )))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier european_city_view))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier no_op_trig_fn))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item AS (func_as (sconst (anysconst 'begin RETURN NULL; end'))))))) ; (stmt (createtrigstmt CREATE TRIGGER (name (colid (identifier no_op_trig))) (triggeractiontime INSTEAD OF) (triggerevents (triggeroneevent INSERT) OR (triggeroneevent UPDATE) OR (triggeroneevent DELETE)) ON (qualified_name (colid (identifier european_city_view))) (triggerforspec FOR (triggerforopteach EACH) (triggerfortype ROW)) EXECUTE (function_or_procedure PROCEDURE) (func_name (type_function_name (identifier no_op_trig_fn))) ( triggerfuncargs ))) ; \set QUIET false\n\n (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier european_city_view)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'x'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10000)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'y'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'z')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier european_city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier population)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10000)))))))))))))))))))))))))))) ; (stmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier european_city_view))))))) ; \set QUIET true\n\n (stmt (rulestmt CREATE RULE (name (colid (identifier european_city_insert_rule))) AS ON (event INSERT) TO (qualified_name (colid (identifier european_city_view))) DO (instead_ INSTEAD) (ruleactionlist (ruleactionstmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier city_view)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier city_id)))))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier city_name)))))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier population)))))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier country_name)))))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier continent))))))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *)))))))) ; (stmt (rulestmt CREATE RULE (name (colid (identifier european_city_update_rule))) AS ON (event UPDATE) TO (qualified_name (colid (identifier european_city_view))) DO (instead_ INSTEAD) (ruleactionlist (ruleactionstmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier city_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier city_name))))))))))))))))))))))))))))) , (set_clause (set_target (colid (identifier population)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier population))))))))))))))))))))))))))))) , (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . (attr_name (colLabel (identifier country_name)))))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier city_id))))))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword NEW)) (indirection (indirection_el . *))))))))))))))))))))))))))))))))) ; (stmt (rulestmt CREATE RULE (name (colid (identifier european_city_delete_rule))) AS ON (event DELETE) TO (qualified_name (colid (identifier european_city_view))) DO (instead_ INSTEAD) (ruleactionlist (ruleactionstmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword OLD)) (indirection (indirection_el . (attr_name (colLabel (identifier city_id))))))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *)))))))) ; \set QUIET false\n\n (stmt (insertstmt INSERT INTO (insert_target (qualified_name (colid (identifier european_city_view)))) (insert_rest ( (insert_column_list (insert_column_item (colid (identifier city_name)) opt_indirection) , (insert_column_item (colid (identifier country_name)) opt_indirection)) ) (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause VALUES ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Cambridge'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USA')))))))))))))))))))))))))) )))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier european_city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'UK'))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Cambridge')))))))))))))))))))))))))))) ; (stmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier european_city_view))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Cambridge')))))))))))))))))))))))))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier country_name)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'UK'))))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Cambridge')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier european_city_view))))) SET (set_clause_list (set_clause (set_target (colid (identifier population)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 122800)))))))))))))))))))))))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Cambridge')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (deletestmt DELETE FROM (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier european_city_view))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier city_name)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Cambridge')))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el *))))) ; (stmt (updatestmt UPDATE (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier city_view)))) (colid (identifier v))) SET (set_clause_list (set_clause (set_target (colid (identifier population)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 599657)))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier city_table)))) (alias_clause (colid (identifier ci)))) , (table_ref (relation_expr (qualified_name (colid (identifier country_table)))) (alias_clause (colid (identifier co)))))) (where_or_current_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier ci)) (indirection (indirection_el . (attr_name (colLabel (identifier city_name))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Washington DC')))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier co)) (indirection (indirection_el . (attr_name (colLabel (identifier country_name))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'USA')))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v)) (indirection (indirection_el . (attr_name (colLabel (identifier city_id))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier ci)) (indirection (indirection_el . (attr_name (colLabel (identifier city_id))))))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v)) (indirection (indirection_el . (attr_name (colLabel (identifier country_name))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier co)) (indirection (indirection_el . (attr_name (colLabel (identifier country_name))))))))))))))))))))))))))))) (returning_clause RETURNING (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier co)) (indirection (indirection_el . (attr_name (colLabel (identifier country_id))))))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v)) (indirection (indirection_el . (attr_name (colLabel (identifier country_name))))))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v)) (indirection (indirection_el . (attr_name (colLabel (identifier city_id))))))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v)) (indirection (indirection_el . (attr_name (colLabel (identifier city_name))))))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier v)) (indirection (indirection_el . (attr_name (colLabel (identifier population))))))))))))))))))))))))))))))))) ; \set QUIET true\n\n (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier city_view))))))))))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier city_table)))) (drop_behavior_ CASCADE))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier country_table)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier depth_a))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null)) (colconstraint (colconstraintelem primary key))))))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier depth_b))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null)) (colconstraint (colconstraintelem primary key))))))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier depth_c))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null)) (colconstraint (colconstraintelem primary key))))))) ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier depth_a_tf))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  raise notice '%: depth = %', tg_name, pg_trigger_depth();\n  insert into depth_b values (new.id);\n  raise notice '%: depth = %', tg_name, pg_trigger_depth();\n  return new;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier depth_a_tr))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier depth_a))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier depth_a_tf))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier depth_b_tf))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  raise notice '%: depth = %', tg_name, pg_trigger_depth();\n  begin\n    execute 'insert into depth_c values (' || new.id::text || ')';\n  exception\n    when sqlstate 'U9999' then\n      raise notice 'SQLSTATE = U9999: depth = %', pg_trigger_depth();\n  end;\n  raise notice '%: depth = %', tg_name, pg_trigger_depth();\n  if new.id = 1 then\n    execute 'insert into depth_c values (' || new.id::text || ')';\n  end if;\n  return new;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier depth_b_tr))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier depth_b))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier depth_b_tf))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier depth_c_tf))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  raise notice '%: depth = %', tg_name, pg_trigger_depth();\n  if new.id = 1 then\n    raise exception sqlstate 'U9999';\n  end if;\n  raise notice '%: depth = %', tg_name, pg_trigger_depth();\n  return new;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier depth_c_tr))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier depth_c))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier depth_c_tf))) ( triggerfuncargs ))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_trigger_depth))) ( )))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier depth_a)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_trigger_depth))) ( )))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier depth_a)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_trigger_depth))) ( )))))))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier depth_a))) , (any_name (colid (identifier depth_b))) , (any_name (colid (identifier depth_c)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier depth_a_tf))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier depth_b_tf))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier depth_c_tf))) (func_args ( )))))) ; (stmt (createstmt create (opttemp temp) table (qualified_name (colid (identifier parent))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier aid)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null)) (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier val1)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier val2)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier val3)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier val4)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier bcnt)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null)) (colconstraint (colconstraintelem default (b_expr (c_expr (aexprconst (iconst 0))))))))))) ))) ; (stmt (createstmt create (opttemp temp) table (qualified_name (colid (identifier child))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier bid)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null)) (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier aid)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null))))) , (tableelement (columnDef (colid (identifier val1)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier parent_upd_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  if old.val1 <> new.val1 then\n    new.val2 = new.val1;\n    delete from child where child.aid = new.aid and child.val1 = new.val1;\n  end if;\n  return new;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_upd_trig))) (triggeractiontime before) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parent))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier parent_upd_func))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier parent_del_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  delete from child where aid = old.aid;\n  return old;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_del_trig))) (triggeractiontime before) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parent))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier parent_del_func))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier child_ins_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  update parent set bcnt = bcnt + 1 where aid = new.aid;\n  return new;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child_ins_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier child_ins_func))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier child_del_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  update parent set bcnt = bcnt - 1 where aid = old.aid;\n  return old;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child_del_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier child))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier child_del_func))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parent)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'b')))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier parent))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier child))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))) set (set_clause_list (set_clause (set_target (colid (identifier val1)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'b'))))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier aid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier parent))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier child))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier aid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier parent))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier child))))))))))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier parent_del_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  delete from child where aid = old.aid;\n  if found then\n    delete from parent where aid = old.aid;\n    return null; -- cancel outer deletion\n  end if;\n  return old;\nend;\n $$))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier aid)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier parent))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier child))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parent))) , (any_name (colid (identifier child)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier parent_upd_func))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier parent_del_func))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier child_ins_func))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier child_del_func))) (func_args ( )))))) ; (stmt (createstmt create (opttemp temp) table (qualified_name (colid (identifier self_ref_trigger))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier id)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier parent)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem references (qualified_name (colid (identifier self_ref_trigger)))))))) , (tableelement (columnDef (colid (unreserved_keyword data)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier nchildren)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem not null)) (colconstraint (colconstraintelem default (b_expr (c_expr (aexprconst (iconst 0))))))))))) ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier self_ref_trigger_ins_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  if new.parent is not null then\n    update self_ref_trigger set nchildren = nchildren + 1\n      where id = new.parent;\n  end if;\n  return new;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier self_ref_trigger_ins_trig))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier self_ref_trigger))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier self_ref_trigger_ins_func))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier self_ref_trigger_del_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  if old.parent is not null then\n    update self_ref_trigger set nchildren = nchildren - 1\n      where id = old.parent;\n  end if;\n  return old;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier self_ref_trigger_del_trig))) (triggeractiontime before) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier self_ref_trigger))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier self_ref_trigger_del_func))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier self_ref_trigger)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst null))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'root')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier self_ref_trigger)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'root child A')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier self_ref_trigger)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'root child B')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier self_ref_trigger)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'grandchild 1')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier self_ref_trigger)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'grandchild 2')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier self_ref_trigger))))) set (set_clause_list (set_clause (set_target (colid (unreserved_keyword data)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'root!'))))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier id)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier self_ref_trigger))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier self_ref_trigger))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier self_ref_trigger))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier self_ref_trigger)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier self_ref_trigger_ins_func))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier self_ref_trigger_del_func))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier stmt_trig_on_empty_upd))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier stmt_trig_on_empty_upd1))) ( ) (optinherit inherits ( (qualified_name_list (qualified_name (colid (identifier stmt_trig_on_empty_upd)))) )))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier update_stmt_notice))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n\traise notice 'updating %', TG_TABLE_NAME;\n\treturn null;\nend;\n $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier before_stmt_trigger))) (triggeractiontime before) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier stmt_trig_on_empty_upd))) execute (function_or_procedure procedure) (func_name (type_function_name (identifier update_stmt_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier before_stmt_trigger))) (triggeractiontime before) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier stmt_trig_on_empty_upd1))) execute (function_or_procedure procedure) (func_name (type_function_name (identifier update_stmt_notice))) ( triggerfuncargs ))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier stmt_trig_on_empty_upd))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a))))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst false)))))))))))))))))))))))) (returning_clause returning (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) as (colLabel (identifier aa))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier stmt_trig_on_empty_upd1))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a))))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst false)))))))))))))))))))))))) (returning_clause returning (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) as (colLabel (identifier aa))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier stmt_trig_on_empty_upd)))) (drop_behavior_ cascade))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier update_stmt_notice))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigger_ddl_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier col1)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier col2)) (typename (simpletypename (numeric integer)) opt_array_bounds) colquallist)))) ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier trigger_ddl_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  alter table trigger_ddl_table add primary key (col1);\n  return new;\nend $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trigger_ddl_func))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier trigger_ddl_table))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_ddl_func))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigger_ddl_table)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier trigger_ddl_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  create index on trigger_ddl_table (col2);\n  return new;\nend $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trigger_ddl_table)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigger_ddl_table)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier trigger_ddl_func))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier upsert))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (unreserved_keyword key)) (typename (simpletypename (generictype (type_function_name (identifier int4)))) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier color)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier upsert_before_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  if (TG_OP = 'UPDATE') then\n    raise warning 'before update (old): %', old.*::text;\n    raise warning 'before update (new): %', new.*::text;\n  elsif (TG_OP = 'INSERT') then\n    raise warning 'before insert (new): %', new.*::text;\n    if new.key % 2 = 0 then\n      new.key := new.key + 1;\n      new.color := new.color || ' trig modified';\n      raise warning 'before insert (new, modified): %', new.*::text;\n    end if;\n  end if;\n  return new;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier upsert_before_trig))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier upsert))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier upsert_before_func))) ( triggerfuncargs ))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier upsert_after_func))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  if (TG_OP = 'UPDATE') then\n    raise warning 'after update (old): %', old.*::text;\n    raise warning 'after update (new): %', new.*::text;\n  elsif (TG_OP = 'INSERT') then\n    raise warning 'after insert (new): %', new.*::text;\n  end if;\n  return null;\nend;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier upsert_after_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier upsert))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier upsert_after_func))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'black')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'red')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'orange')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'green')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'purple')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 6)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'white')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 7)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'pink')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier upsert)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 8)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'yellow')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (unreserved_keyword key)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier color)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'updated ')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier upsert)) (indirection (indirection_el . (attr_name (colLabel (identifier color))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier upsert))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier upsert)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier upsert_before_func))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier upsert_after_func))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier my_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier i)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (viewstmt create view (qualified_name (colid (identifier my_view))) as (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier my_table)))))))))))))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier my_trigger_function))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$  begin end;  $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier my_trigger))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier my_view))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier my_trigger_function))) ( triggerfuncargs ))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier my_trigger_function))) (func_args ( )))))) ; (stmt (dropstmt drop (object_type_any_name view) (any_name_list_ (any_name (colid (identifier my_view)))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier my_table)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier trigger_nothing))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$  begin end;  $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier failed))) (triggeractiontime instead of) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_nothing))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier failed))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_trig))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_nothing))) ( triggerfuncargs ))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_trig)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart1))) partition of (qualified_name (colid (identifier trigpart))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trg1))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier trigpart))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_nothing))) ( triggerfuncargs ))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart2))) partition of (qualified_name (colid (identifier trigpart))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart3))) ( (opttableelementlist (tableelementlist (tableelement (tablelikeclause like (qualified_name (colid (identifier trigpart))) tablelikeoptionlist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart)))) (partition_cmd attach partition (qualified_name (colid (identifier trigpart3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart4))) partition of (qualified_name (colid (identifier trigpart))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4000))))))))))))))))))))))))) )) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart41))) partition of (qualified_name (colid (identifier trigpart4))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3500))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart42))) ( (opttableelementlist (tableelementlist (tableelement (tablelikeclause like (qualified_name (colid (identifier trigpart))) tablelikeoptionlist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart4)))) (partition_cmd attach partition (qualified_name (colid (identifier trigpart42))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3500))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4000))))))))))))))))))))))))) ))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgfoid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))))))))) like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trigpart%'))))))))))))))))))))))))))))) (sort_clause_ (sort_clause order by (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier trg1))) on (any_name (colid (identifier trigpart1))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier trg1))) on (any_name (colid (identifier trigpart2))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier trg1))) on (any_name (colid (identifier trigpart3))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigpart2)))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgfoid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))))))))) like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trigpart%'))))))))))))))))))))))))))))) (sort_clause_ (sort_clause order by (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier trg1))) on (any_name (colid (identifier trigpart))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgfoid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))))))))) like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trigpart%'))))))))))))))))))))))))))))) (sort_clause_ (sort_clause order by (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))))))))))))))))))))))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trg1))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier trigpart))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_nothing))) ( triggerfuncargs ))) ; \d trigpart3\n (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart)))) (partition_cmd detach partition (qualified_name (colid (identifier trigpart3)))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier trg1))) on (any_name (colid (identifier trigpart3))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart)))) (partition_cmd detach partition (qualified_name (colid (identifier trigpart4)))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier trg1))) on (any_name (colid (identifier trigpart41))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigpart4)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart)))) (partition_cmd attach partition (qualified_name (colid (identifier trigpart3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart)))) (partition_cmd detach partition (qualified_name (colid (identifier trigpart3)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart)))) (partition_cmd attach partition (qualified_name (colid (identifier trigpart3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigpart3)))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgfoid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgenabled)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgisinternal)))))))))))))))))))))))))))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))) (qual_op ~) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '^trg1'))))))))))))))))))))))))))))) (sort_clause_ (sort_clause order by (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigpart3))) ( (opttableelementlist (tableelementlist (tableelement (tablelikeclause like (qualified_name (colid (identifier trigpart))) tablelikeoptionlist)))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trg1))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier trigpart3))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_nothing))) ( triggerfuncargs ))) ; \d trigpart3\n (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trigpart)))) (partition_cmd attach partition (qualified_name (colid (identifier trigpart3))) (partitionboundspec FOR VALUES FROM ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigpart3)))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trigpart)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier trigger_nothing))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_stmt_trig))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_stmt_trig1))) partition of (qualified_name (colid (identifier parted_stmt_trig))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_stmt_trig2))) partition of (qualified_name (colid (identifier parted_stmt_trig))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted2_stmt_trig))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted2_stmt_trig1))) partition of (qualified_name (colid (identifier parted2_stmt_trig))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted2_stmt_trig2))) partition of (qualified_name (colid (identifier parted2_stmt_trig))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier trigger_notice))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$ \n  begin\n    raise notice 'trigger % on % % % for %', TG_NAME, TG_TABLE_NAME, TG_WHEN, TG_OP, TG_LEVEL;\n    if TG_LEVEL = 'ROW' then\n       return NEW;\n    end if;\n    return null;\n  end;\n   $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_ins_before))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_ins_after))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_upd_before))) (triggeractiontime before) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_upd_after))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_del_before))) (triggeractiontime before) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_del_after))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_ins_after_parent))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_upd_after_parent))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_del_after_parent))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parted_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_ins_before_child))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_stmt_trig1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_ins_after_child))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_stmt_trig1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_upd_before_child))) (triggeractiontime before) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_stmt_trig1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_upd_after_child))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_stmt_trig1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_del_before_child))) (triggeractiontime before) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parted_stmt_trig1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_del_after_child))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parted_stmt_trig1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_ins_before_3))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted2_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_ins_after_3))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted2_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_upd_before_3))) (triggeractiontime before) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted2_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_upd_after_3))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted2_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_del_before_3))) (triggeractiontime before) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parted2_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_del_after_3))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parted2_stmt_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (insertstmt (with_clause_ (with_clause with (cte_list (common_table_expr (name (colid (identifier ins))) (name_list_ ( (name_list (name (colid (identifier a)))) )) as ( (preparablestmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted2_stmt_trig)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))) (returning_clause returning (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))))))) ))))) insert into (insert_target (qualified_name (colid (identifier parted_stmt_trig)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier ins))))))))))))) (returning_clause returning (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tableoid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))))))))))))))))))) ; (stmt (updatestmt (with_clause_ (with_clause with (cte_list (common_table_expr (name (colid (identifier upd))) as ( (preparablestmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted2_stmt_trig))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a))))))))))))))))))))))))))))) ))))) update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted_stmt_trig))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a))))))))))))))))))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted_stmt_trig))))))) ; (stmt (copystmt copy (qualified_name (colid (identifier parted_stmt_trig))) (column_list_ ( (columnlist (columnElem (colid (identifier a)))) )) (copy_from from) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (copystmt copy (qualified_name (colid (identifier parted_stmt_trig1))) (column_list_ ( (columnlist (columnElem (colid (identifier a)))) )) (copy_from from) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_stmt_trig)))) (alter_table_cmds (alter_table_cmd disable trigger (name (colid (identifier trig_ins_after_parent))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_stmt_trig)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))))))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_stmt_trig)))) (alter_table_cmds (alter_table_cmd enable trigger (name (colid (identifier trig_ins_after_parent))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_stmt_trig)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_stmt_trig))) , (any_name (colid (identifier parted2_stmt_trig)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig_1))) partition of (qualified_name (colid (identifier parted_trig))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig_1_1))) partition of (qualified_name (colid (identifier parted_trig_1))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig_2))) partition of (qualified_name (colid (identifier parted_trig))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) )))) ; (stmt (createtrigstmt create trigger (name (colid (identifier zzz))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier mmm))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_trig_1_1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier aaa))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_trig_1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier bbb))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier qqq))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_trig_1_1))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_trig)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 50))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1500))))))))))))))))))))))))) )))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_trig)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig1))) partition of (qualified_name (colid (identifier parted_trig))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier trigger_notice))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$ \n  declare\n    arg1 text = TG_ARGV[0];\n    arg2 integer = TG_ARGV[1];\n  begin\n    raise notice 'trigger % on % % % for % args % %',\n\t\tTG_NAME, TG_TABLE_NAME, TG_WHEN, TG_OP, TG_LEVEL, arg1, arg2;\n    return null;\n  end;\n   $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier aaa))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_trig))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'quirky'))) , (triggerfuncarg (iconst 1))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig2))) partition of (qualified_name (colid (identifier parted_trig))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trig3))) ( (opttableelementlist (tableelementlist (tableelement (tablelikeclause like (qualified_name (colid (identifier parted_trig))) tablelikeoptionlist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trig)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_trig3))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) ))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_trig)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_trig)))))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier bark))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))) )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item (common_func_opt_item immutable)) (createfunc_opt_item as (func_as (sconst (anysconst $$  begin raise notice '% <- woof!',  $1; return true; end;  $$))))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier trigger_notice_ab))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item as (func_as (sconst (anysconst $$ \n  begin\n    raise notice 'trigger % on % % % for %: (a,b)=(%,%)',\n\t\tTG_NAME, TG_TABLE_NAME, TG_WHEN, TG_OP, TG_LEVEL,\n\t\tNEW.a, NEW.b;\n    if TG_LEVEL = 'ROW' then\n       return NEW;\n    end if;\n    return null;\n  end;\n   $$)))) (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_irreg_ancestor))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier fd)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier fd2)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier fd3)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier b)))) ))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_irreg_ancestor)))) (alter_table_cmds (alter_table_cmd drop (column_ column) (colid (identifier fd))) , (alter_table_cmd drop (column_ column) (colid (identifier fd2))) , (alter_table_cmd drop (column_ column) (colid (identifier fd3)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_irreg))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier fd)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier fd2)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier b)))) ))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_irreg)))) (alter_table_cmds (alter_table_cmd drop (column_ column) (colid (identifier fd))) , (alter_table_cmd drop (column_ column) (colid (identifier fd2)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_irreg_ancestor)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_irreg))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aaaa')))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'zzzz')))))))))))))))))))))))))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted1_irreg))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier fd)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted1_irreg)))) (alter_table_cmds (alter_table_cmd drop (column_ column) (colid (identifier fd)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_irreg)))) (partition_cmd attach partition (qualified_name (colid (identifier parted1_irreg))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aaaa')))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bbbb')))))))))))))))))))))))))) ))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parted_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_irreg))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parted_trig_odd))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_irreg))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) (triggerwhen when ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier bark))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword new)) (indirection (indirection_el . (attr_name (colLabel (identifier b)))))))))))))))))))))))))))))) )))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword new)) (indirection (indirection_el . (attr_name (colLabel (identifier a)))))))))))) % (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) )) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_irreg)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aardvark')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aanimals')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted1_irreg)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aardwolf'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_irreg_ancestor)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aasvogel'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_irreg_ancestor)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_1))) partition of (qualified_name (colid (identifier parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier b)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_1_1))) partition of (qualified_name (colid (identifier parted_1))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier parted_trigfunc))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  new.a = new.a + 1;\n  return new;\nend;\n $$))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'uno uno v1')))))))))))))))))))))))))) )))))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier t))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update) or (triggeroneevent delete)) on (qualified_name (colid (identifier parted))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure function) (func_name (type_function_name (identifier parted_trigfunc))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'uno uno v2')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted))))) set (set_clause_list (set_clause (set_target (colid (identifier c)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'v3'))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier parted_trigfunc))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  new.b = new.b + 1;\n  return new;\nend;\n $$))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'uno uno v4')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted))))) set (set_clause_list (set_clause (set_target (colid (identifier c)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'v5'))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier parted_trigfunc))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  new.c = new.c || ' and so';\n  return new;\nend;\n $$))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'uno uno')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted))))) set (set_clause_list (set_clause (set_target (colid (identifier c)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ' v6'))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tableoid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier parted))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier c)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b))))))))))))))))))))))))) ))) ))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier parted_trigfunc))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \nbegin\n  new.a = new.a + new.b;\n  return new;\nend;\n $$))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_1))) partition of (qualified_name (colid (identifier parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_2))) partition of (qualified_name (colid (identifier parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) )))) ; (stmt (createtrigstmt create trigger (name (colid (identifier t))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier parted))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure function) (func_name (type_function_name (identifier parted_trigfunc))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'zero win')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'one fail')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'two fail')))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier parted))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier parted_trigfunc))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_constr_ancestor))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier b)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_constr))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier b)))) ))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_constr_ancestor)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_constr))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aaaa')))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'zzzz')))))))))))))))))))))))))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted1_constr))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_constr)))) (partition_cmd attach partition (qualified_name (colid (identifier parted1_constr))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aaaa')))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bbbb')))))))))))))))))))))))))) ))))) ; (stmt (createtrigstmt create constraint trigger (name (colid (identifier parted_trig))) after (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_constr_ancestor))) (constraintattributespec (constraintattributeElem deferrable)) for each row execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create constraint trigger (name (colid (identifier parted_trig_two))) after (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parted_constr))) (constraintattributespec (constraintattributeElem deferrable) (constraintattributeElem initially deferred)) for each row (triggerwhen when ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier bark))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword new)) (indirection (indirection_el . (attr_name (colLabel (identifier b)))))))))))))))))))))))))))))) )))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword new)) (indirection (indirection_el . (attr_name (colLabel (identifier a)))))))))))) % (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) )) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (transactionstmt begin)) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_constr)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aardvark')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted1_constr)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aardwolf')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_constr_ancestor)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aasvogel')))))))))))))))))))))))))) )))))))))) ; (stmt (transactionstmt commit)) ; (stmt (transactionstmt begin)) ; (stmt (constraintssetstmt set constraints (constraints_set_list (qualified_name_list (qualified_name (colid (identifier parted_trig))))) (constraints_set_mode deferred))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_constr)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aardvark')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted1_constr)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aardwolf')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'aasvogel')))))))))))))))))))))))))) )))))))))) ; (stmt (transactionstmt commit)) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_constr_ancestor)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier bark))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_1))) partition of (qualified_name (colid (identifier parted_trigger))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier drp)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger_2)))) (alter_table_cmds (alter_table_cmd drop (column_ column) (colid (identifier drp)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_trigger_2))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parted_trigger))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_trigger))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) (triggerwhen when ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword new)) (indirection (indirection_el . (attr_name (colLabel (identifier a)))))))))))) % (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))) and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier length))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (unreserved_keyword old)) (indirection (indirection_el . (attr_name (colLabel (identifier b)))))))))))))))))))))))))))))) )))))))))))))) >= (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) )) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (func_expr_windowless (func_application (func_name (type_function_name (identifier length))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b))))))))))))))))))))))))))) ))))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3_1))) partition of (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3_2))) partition of (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))) )))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_trigger)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bbb')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'bcd')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'c')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'c')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1001)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'ddd')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1002)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'efg')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1003)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'f')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'e')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2001)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'fff')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2002)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'ghi')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2003)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'h')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted_trigger))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_trigger)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_referenced))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier unparted_trigger))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_1))) partition of (qualified_name (colid (identifier parted_trigger))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier drp)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger_2)))) (alter_table_cmds (alter_table_cmd drop (column_ column) (colid (identifier drp)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_trigger_2))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ))))) ; (stmt (createtrigstmt create constraint trigger (name (colid (identifier parted_trigger))) after (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parted_trigger))) (optconstrfromtable from (qualified_name (colid (identifier parted_referenced)))) constraintattributespec for each row execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create constraint trigger (name (colid (identifier parted_trigger))) after (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier unparted_trigger))) (optconstrfromtable from (qualified_name (colid (identifier parted_referenced)))) constraintattributespec for each row execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (func_expr_windowless (func_application (func_name (type_function_name (identifier length))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b))))))))))))))))))))))))))) ))))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3_1))) partition of (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3_2))) partition of (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 5))))))))))))))))))))))))) )))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier conname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier t)) (indirection (indirection_el . (attr_name (colLabel (identifier tgrelid))))))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier t)) (indirection (indirection_el . (attr_name (colLabel (identifier tgconstrrelid))))))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)) (indirection (indirection_el . (attr_name (colLabel (identifier conrelid))))))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)) (indirection (indirection_el . (attr_name (colLabel (identifier confrelid))))))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger)))) (alias_clause (colid (identifier t))) join (table_ref (relation_expr (qualified_name (colid (identifier pg_constraint)))) (alias_clause (colid (identifier c)))) (join_qual on (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr ( (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier t)) (indirection (indirection_el . (attr_name (colLabel (identifier tgconstraint))))))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier c)) (indirection (indirection_el . (attr_name (colLabel (identifier oid)))))))))))))))))))))))))))) ) opt_indirection)))))))))))))))))))))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgname)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'parted_trigger'))))))))))))))))))))))))))))) (sort_clause_ (sort_clause order by (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier t)) (indirection (indirection_el . (attr_name (colLabel (identifier tgrelid))))))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_referenced))) , (any_name (colid (identifier parted_trigger))) , (any_name (colid (identifier unparted_trigger)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_1))) partition of (qualified_name (colid (identifier parted_trigger))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier drp)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger_2)))) (alter_table_cmds (alter_table_cmd drop (column_ column) (colid (identifier drp)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_trigger_2))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parted_trigger))) (triggeractiontime after) (triggerevents (triggeroneevent update of (columnlist (columnElem (colid (identifier b)))))) on (qualified_name (colid (identifier parted_trigger))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_notice_ab))) ( triggerfuncargs ))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (func_expr_windowless (func_application (func_name (type_function_name (identifier length))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b))))))))))))))))))))))))))) ))))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3_1))) partition of (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier parted_trigger_3_2))) partition of (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 8))))))))))))))))))))))))) )))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parted_trigger)))) (partition_cmd attach partition (qualified_name (colid (identifier parted_trigger_3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) ))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parted_trigger)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'c')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'e')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2001)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'eeee')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted_trigger))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parted_trigger))))) set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'b'))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier parted_trigger)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier trigger_notice_ab))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trg_clone))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trg_clone1))) partition of (qualified_name (colid (identifier trg_clone))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 0))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) )))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier trg_clone)))) (alter_table_cmds (alter_table_cmd add (tableconstraint constraint (name (colid (identifier uniq))) (constraintelem unique ( (columnlist (columnElem (colid (identifier a)))) ) (constraintattributespec (constraintattributeElem deferrable)))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trg_clone2))) partition of (qualified_name (colid (identifier trg_clone))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier trg_clone3))) partition of (qualified_name (colid (identifier trg_clone))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3000))))))))))))))))))))))))) )) (optpartitionspec (partitionspec partition by (colid (unreserved_keyword range)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trg_clone_3_3))) partition of (qualified_name (colid (identifier trg_clone3))) (partitionboundspec for values from ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2000))))))))))))))))))))))))) ) to ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2100))))))))))))))))))))))))) )))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier count))) ( * )))))))))))))))))))))))))))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_trigger))))))) (where_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trg_clone'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trg_clone1'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trg_clone2'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trg_clone3'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'trg_clone_3_3')))))))))))))))))))))))))) )))))))))) (group_clause group by (group_by_list (group_by_item (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds)))))))))))))))))))))))))))) (sort_clause_ (sort_clause order by (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier tgrelid)))) :: (typename (simpletypename (generictype (type_function_name (identifier regclass)))) opt_array_bounds))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier trg_clone)))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier dump_insert))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \n  begin\n    raise notice 'trigger = %, new table = %',\n                 TG_NAME,\n                 (select string_agg(new_table::text, ', ' order by a) from new_table);\n    return null;\n  end;\n $$))))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier dump_update))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \n  begin\n    raise notice 'trigger = %, old table = %, new table = %',\n                 TG_NAME,\n                 (select string_agg(old_table::text, ', ' order by a) from old_table),\n                 (select string_agg(new_table::text, ', ' order by a) from new_table);\n    return null;\n  end;\n $$))))))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier dump_delete))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \n  begin\n    raise notice 'trigger = %, old table = %',\n                 TG_NAME,\n                 (select string_agg(old_table::text, ', ' order by a) from old_table);\n    return null;\n  end;\n $$))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parent))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier child1))) partition of (qualified_name (colid (identifier parent))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier child2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier x)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier child2)))) (alter_table_cmds (alter_table_cmd drop (column_ column) (colid (identifier x)))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parent)))) (partition_cmd attach partition (qualified_name (colid (identifier child2))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB')))))))))))))))))))))))))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier child3))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parent)))) (partition_cmd attach partition (qualified_name (colid (identifier child3))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC')))))))))))))))))))))))))) ))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parent))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parent))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parent))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child1_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child1))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child1_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier child1))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child1_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier child1))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child2_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child2))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child2_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier child2))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child2_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier child2))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child3_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child3))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child3_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier child3))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child3_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier child3))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier trigger_name)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_manipulation)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_schema)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_table)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_order)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_condition)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_orientation)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_timing)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_reference_old_table)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier action_reference_new_table)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier triggers)))))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier event_object_table)))))))))))))))))) IN (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'parent'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'child1'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'child2'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'child3')))))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier trigger_name))))) COLLATE (any_name (colid (identifier "C")))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child1)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child3)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))) set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parent)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parent)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parent)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier child1))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier child2))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier child3))))))) ; (stmt (copystmt copy (qualified_name (colid (identifier parent))) (column_list_ ( (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))) )) (copy_from from) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child1_insert_trig))) on (any_name (colid (identifier child1))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child1_update_trig))) on (any_name (colid (identifier child1))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child1_delete_trig))) on (any_name (colid (identifier child1))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child2_insert_trig))) on (any_name (colid (identifier child2))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child2_update_trig))) on (any_name (colid (identifier child2))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child2_delete_trig))) on (any_name (colid (identifier child2))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child3_insert_trig))) on (any_name (colid (identifier child3))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child3_update_trig))) on (any_name (colid (identifier child3))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child3_delete_trig))) on (any_name (colid (identifier child3))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))))) ; (stmt (copystmt copy (qualified_name (colid (identifier parent))) (column_list_ ( (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))) )) (copy_from from) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (createfunctionstmt create (or_replace_ or replace) function (func_name (type_function_name (identifier intercept_insert))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$ \n  begin\n    new.b = new.b + 1000;\n    return new;\n  end;\n $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier intercept_insert_child3))) (triggeractiontime before) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child3))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier intercept_insert))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier parent)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 66))))))))))))))))))))))))) )))))))))) ; (stmt (copystmt copy (qualified_name (colid (identifier parent))) (column_list_ ( (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))) )) (copy_from from) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier child1))) , (any_name (colid (identifier child2))) , (any_name (colid (identifier child3))) , (any_name (colid (identifier parent)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier intercept_insert))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parent))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier child))) partition of (qualified_name (colid (identifier parent))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) )))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child_row_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parent)))) (partition_cmd detach partition (qualified_name (colid (identifier child)))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child_row_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parent)))) (partition_cmd attach partition (qualified_name (colid (identifier child))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) ))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child_row_trig))) on (any_name (colid (identifier child))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier parent)))) (partition_cmd attach partition (qualified_name (colid (identifier child))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) ))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier child))) , (any_name (colid (identifier parent)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parent))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier child1))) ( ) (optinherit inherits ( (qualified_name_list (qualified_name (colid (identifier parent)))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier child2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier child2)))) (alter_table_cmds (alter_table_cmd inherit (qualified_name (colid (identifier parent))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier child3))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier c)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optinherit inherits ( (qualified_name_list (qualified_name (colid (identifier parent)))) )))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier parent))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier parent))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier parent_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier parent))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child1_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child1))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child1_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier child1))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child1_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier child1))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child2_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child2))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child2_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier child2))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child2_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier child2))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child3_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child3))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child3_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier child3))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child3_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier child3))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child1)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child3)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))) set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))) + (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child1)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier child3)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo')))))))))))))))))))))))))) )))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier child1))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier child2))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier child3))))))) ; (stmt (copystmt copy (qualified_name (colid (identifier parent))) (column_list_ ( (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))) )) (copy_from from) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (indexstmt create index on (relation_expr (qualified_name (colid (identifier parent)))) ( (index_params (index_elem (colid (identifier b)) index_elem_options)) ))) ; (stmt (copystmt copy (qualified_name (colid (identifier parent))) (column_list_ ( (columnlist (columnElem (colid (identifier a))) , (columnElem (colid (identifier b)))) )) (copy_from from) (copy_file_name stdin) (copy_options copy_opt_list))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child1_insert_trig))) on (any_name (colid (identifier child1))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child1_update_trig))) on (any_name (colid (identifier child1))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child1_delete_trig))) on (any_name (colid (identifier child1))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child2_insert_trig))) on (any_name (colid (identifier child2))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child2_update_trig))) on (any_name (colid (identifier child2))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child2_delete_trig))) on (any_name (colid (identifier child2))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child3_insert_trig))) on (any_name (colid (identifier child3))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child3_update_trig))) on (any_name (colid (identifier child3))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child3_delete_trig))) on (any_name (colid (identifier child3))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier parent))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier child1))) , (any_name (colid (identifier child2))) , (any_name (colid (identifier child3))) , (any_name (colid (identifier parent)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier parent))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier child))) ( ) (optinherit inherits ( (qualified_name_list (qualified_name (colid (identifier parent)))) )))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child_row_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier child)))) (alter_table_cmds (alter_table_cmd no inherit (qualified_name (colid (identifier parent))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier child_row_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier child))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier child)))) (alter_table_cmds (alter_table_cmd inherit (qualified_name (colid (identifier parent))))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier child_row_trig))) on (any_name (colid (identifier child))))) ; (stmt (altertablestmt alter table (relation_expr (qualified_name (colid (identifier child)))) (alter_table_cmds (alter_table_cmd inherit (qualified_name (colid (identifier parent))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier child))) , (any_name (colid (identifier parent)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier table1))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier table2))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier table1_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier table1))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier table2_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier table2))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (insertstmt (with_clause_ (with_clause with (cte_list (common_table_expr (name (colid (identifier wcte))) as ( (preparablestmt (insertstmt insert into (insert_target (qualified_name (colid (identifier table1)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42))))))))))))))))))))))))) )))))))))) ))))) insert into (insert_target (qualified_name (colid (identifier table2)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'hello world')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt (with_clause_ (with_clause with (cte_list (common_table_expr (name (colid (identifier wcte))) as ( (preparablestmt (insertstmt insert into (insert_target (qualified_name (colid (identifier table1)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 43))))))))))))))))))))))))) )))))))))) ))))) insert into (insert_target (qualified_name (colid (identifier table1)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 44))))))))))))))))))))))))) )))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier table1))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier table2))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier table1)))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier table2)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier my_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier my_table_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier my_table))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier my_table_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier my_table))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier my_table)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (identifier a)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier my_table)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ':')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier excluded)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier my_table)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'DDD')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (identifier a)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier my_table)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ':')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier excluded)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier my_table)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'DDD')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (identifier a)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier my_table)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ':')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier excluded)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))))))))))))))))))))) ; (stmt (createstmt create table (qualified_name (colid (identifier iocdu_tt_parted))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier iocdu_tt_parted1))) partition of (qualified_name (colid (identifier iocdu_tt_parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier iocdu_tt_parted2))) partition of (qualified_name (colid (identifier iocdu_tt_parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier iocdu_tt_parted3))) partition of (qualified_name (colid (identifier iocdu_tt_parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))) ; (stmt (createstmt create table (qualified_name (colid (identifier iocdu_tt_parted4))) partition of (qualified_name (colid (identifier iocdu_tt_parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4))))))))))))))))))))))))) )))) ; (stmt (createtrigstmt create trigger (name (colid (identifier iocdu_tt_parted_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier iocdu_tt_parted))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier iocdu_tt_parted_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier iocdu_tt_parted))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier iocdu_tt_parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (identifier a)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier iocdu_tt_parted)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ':')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier excluded)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier iocdu_tt_parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'AAA')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'BBB')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'DDD')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (identifier a)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier iocdu_tt_parted)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ':')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier excluded)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))))))))))))))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier iocdu_tt_parted)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'CCC')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'DDD')))))))))))))))))))))))))) )))))))) (on_conflict_ on conflict (conf_expr_ ( (index_params (index_elem (colid (identifier a)) index_elem_options)) )) do update set (set_clause_list (set_clause (set_target (colid (identifier b)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier iocdu_tt_parted)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst ':')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier excluded)) (indirection (indirection_el . (attr_name (colLabel (identifier b))))))))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier iocdu_tt_parted)))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier my_table_multievent_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier my_table))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier my_table_col_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update of (columnlist (columnElem (colid (identifier b)))))) on (qualified_name (colid (identifier my_table))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier my_table)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier refd_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createstmt create table (qualified_name (colid (identifier trig_table))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)) , (tableelement (tableconstraint (constraintelem foreign key ( (columnlist (columnElem (colid (identifier a)))) ) references (qualified_name (colid (identifier refd_table))) (key_actions (key_update on update (key_action cascade)) (key_delete on delete (key_action cascade))) constraintattributespec))))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_table_before_trig))) (triggeractiontime before) (triggerevents (triggeroneevent insert) or (triggeroneevent update) or (triggeroneevent delete)) on (qualified_name (colid (identifier trig_table))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'trig_table')))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_table_insert_trig))) (triggeractiontime after) (triggerevents (triggeroneevent insert)) on (qualified_name (colid (identifier trig_table))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_insert))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_table_update_trig))) (triggeractiontime after) (triggerevents (triggeroneevent update)) on (qualified_name (colid (identifier trig_table))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))) (triggertransition (transitionoldornew new) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier new_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_update))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier trig_table_delete_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier trig_table))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier refd_table)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'one')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'two')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'three')))))))))))))))))))))))))) )))))))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier trig_table)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'one a')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'one b')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'two a')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'two b')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'three a')))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'three b')))))))))))))))))))))))))) )))))))))) ; (stmt (updatestmt update (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier refd_table))))) set (set_clause_list (set_clause (set_target (colid (identifier a)) opt_indirection) = (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 11)))))))))))))))))))))))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'one')))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trig_table))))))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier refd_table))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier length))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b))))))))))))))))))))))))))) )))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary select (target_list_ (target_list (target_el *))) (from_clause from (from_list (table_ref (relation_expr (qualified_name (colid (identifier trig_table))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier refd_table))) , (any_name (colid (identifier trig_table)))))) ; (stmt (createstmt create table (qualified_name (colid (identifier self_ref))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem references (qualified_name (colid (identifier self_ref))) (column_list_ ( (columnlist (columnElem (colid (identifier a)))) )) (key_actions (key_delete on delete (key_action cascade)))))))))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier self_ref_before_trig))) (triggeractiontime before) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier self_ref))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier trigger_func))) ( (triggerfuncargs (triggerfuncarg (sconst (anysconst 'self_ref')))) ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier self_ref_r_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier self_ref))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (createtrigstmt create trigger (name (colid (identifier self_ref_s_trig))) (triggeractiontime after) (triggerevents (triggeroneevent delete)) on (qualified_name (colid (identifier self_ref))) (triggerreferencing referencing (triggertransitions (triggertransition (transitionoldornew old) (transitionrowortable table) (as_ as) (transitionrelname (colid (identifier old_table)))))) (triggerforspec for (triggerforopteach each) (triggerfortype statement)) execute (function_or_procedure procedure) (func_name (type_function_name (identifier dump_delete))) ( triggerfuncargs ))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier self_ref)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst null)))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) )))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier self_ref))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_name_on_any_name trigger) (name (colid (identifier self_ref_r_trig))) on (any_name (colid (identifier self_ref))))) ; (stmt (insertstmt insert into (insert_target (qualified_name (colid (identifier self_ref)))) (insert_rest (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary (values_clause values ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst null)))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))) ) , ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 4)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3))))))))))))))))))))))))) )))))))))) ; (stmt (deletestmt delete from (relation_expr_opt_alias (relation_expr (qualified_name (colid (identifier self_ref))))) (where_or_current_clause where (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier a)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))))) ; (stmt (dropstmt drop (object_type_any_name table) (any_name_list_ (any_name (colid (identifier self_ref)))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier dump_insert))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier dump_update))) (func_args ( )))))) ; (stmt (removefuncstmt drop function (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier dump_delete))) (func_args ( )))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigger_parted))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) (colquallist (colconstraint (colconstraintelem primary key))))))) ) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createfunctionstmt create function (func_name (type_function_name (identifier trigger_parted_trigfunc))) (func_args_with_defaults ( )) returns (func_return (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword trigger)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item language (nonreservedword_or_sconst (nonreservedword (identifier plpgsql)))) (createfunc_opt_item as (func_as (sconst (anysconst $$  begin end;  $$))))))) ; (stmt (createtrigstmt create trigger (name (colid (identifier aft_row))) (triggeractiontime after) (triggerevents (triggeroneevent insert) or (triggeroneevent update)) on (qualified_name (colid (identifier trigger_parted))) (triggerforspec for (triggerforopteach each) (triggerfortype row)) execute (function_or_procedure function) (func_name (type_function_name (identifier trigger_parted_trigfunc))) ( triggerfuncargs ))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigger_parted_p1))) partition of (qualified_name (colid (identifier trigger_parted))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )) (optpartitionspec (partitionspec partition by (colid (identifier list)) ( (part_params (part_elem (colid (identifier a)))) ))))) ; (stmt (createstmt create table (qualified_name (colid (identifier trigger_parted_p1_1))) partition of (qualified_name (colid (identifier trigger_parted_p1))) (partitionboundspec for values in ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) )))) ;)) <EOF>)