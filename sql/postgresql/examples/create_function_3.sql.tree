(root (stmtblock (stmtmulti (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_unpriv_user)))) optrolelist)) ; (stmt (createschemastmt CREATE SCHEMA (colid (identifier temp_func_test)) optschemaeltlist)) ; (stmt (grantstmt GRANT (privileges ALL) ON (privilege_target SCHEMA (name_list (name (colid (identifier temp_func_test))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier public))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier search_path))) TO (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (nonreservedword (identifier temp_func_test))))) , (var_value (boolean_or_string_ (nonreservedword_or_sconst (nonreservedword (identifier public))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_A_1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (identifier date)))) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 = ''abcd'' AND $2 > ''2001-01-01'''))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_A_2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) (opt_array_bounds [ ])))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1[0]::int'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_A_3))) (func_args_with_defaults ( )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT false'))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier prorettype)))) :: (typename (simpletypename (generictype (type_function_name (identifier regtype)))) opt_array_bounds))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proargtypes)))) :: (typename (simpletypename (generictype (type_function_name (identifier regtype)))) (opt_array_bounds [ ])))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_A_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_A_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_A_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_B_1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 > 0'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_B_2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item IMMUTABLE)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 > 0'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_B_3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item STABLE)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 = 0'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_B_4))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item VOLATILE)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 < 0'))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier provolatile)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_4')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_B_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item VOLATILE)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_B_3))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item COST (numericonly (signediconst (iconst 100))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier provolatile)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_4')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_C_1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 > 0'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_C_2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item SECURITY DEFINER)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 = 0'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_C_3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item SECURITY INVOKER)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 < 0'))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier prosecdef)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_C_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_C_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_C_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_C_1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item IMMUTABLE)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_C_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item SECURITY INVOKER)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_C_3))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item SECURITY DEFINER)))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier prosecdef)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_C_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_C_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_C_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_E_1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 > 100'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_E_2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item LEAKPROOF)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 > 100'))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proleakproof)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_E_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_E_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_E_1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item LEAKPROOF)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_E_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item STABLE)))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proleakproof)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_E_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_E_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_E_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item NOT LEAKPROOF)))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proleakproof)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_E_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_E_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (alterownerstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_E_1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) OWNER TO (rolespec (nonreservedword (identifier regress_unpriv_user))))) ; (stmt (alterownerstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_E_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) OWNER TO (rolespec (nonreservedword (identifier regress_unpriv_user))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more SESSION AUTHORIZATION (nonreservedword_or_sconst (nonreservedword (identifier regress_unpriv_user))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more (generic_set (var_name (colid (identifier search_path))) TO (var_list (var_value (boolean_or_string_ (nonreservedword_or_sconst (nonreservedword (identifier temp_func_test))))) , (var_value (boolean_or_string_ (nonreservedword_or_sconst (nonreservedword (identifier public))))))))))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_E_1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item NOT LEAKPROOF)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_E_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item LEAKPROOF)))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_E_3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item LEAKPROOF)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 < 200'))))))) ; (stmt (variableresetstmt RESET (reset_rest SESSION AUTHORIZATION))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_F_1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 > 50'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_F_2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item CALLED ON NULL INPUT)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 = 50'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_F_3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item RETURNS NULL ON NULL INPUT)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 < 50'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_F_4))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 = 50'))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proisstrict)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_4')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_F_1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item IMMUTABLE)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_F_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item STRICT)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier functest_F_3))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item CALLED ON NULL INPUT)))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proisstrict)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier pg_proc))))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier oid)))))))))))))))))) in (in_expr ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_4')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds))))))))))))))))))))))) ))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier proname)))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_functiondef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_A_1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_functiondef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_B_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_functiondef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_C_3')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_functiondef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'functest_F_2')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_IS_1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) default (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier c))) (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))) default (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'foo'))))))))))))))))))))))))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 + $2'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_IS_2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (arg_class out) (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) default (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1'))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_IS_3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) default (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (func_arg_with_default (func_arg (arg_class out) (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1'))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier routine_name)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier ordinal_position)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier parameter_name)))))))))))))))))))))))))) , (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier parameter_default)))))))))))))))))))))))))))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (identifier parameters))))))) JOIN (table_ref (relation_expr (qualified_name (colid (identifier information_schema)) (indirection (indirection_el . (attr_name (colLabel (unreserved_keyword routines)))))))) (join_qual USING ( (name_list (name (colid (identifier specific_schema))) , (name (colid (identifier specific_name)))) ))))) (where_clause WHERE (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier routine_schema)))))))))))))) = (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'temp_func_test')))))))))))))))))))) AND (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier routine_name)))))))))))) (qual_op ~) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst '^functest_is_'))))))))))))))))))))))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2))))))))))))))))))))))))))))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier functest_IS_1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) , (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) , (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) ))) , (function_with_argtypes (func_name (type_function_name (identifier functest_IS_2))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) , (function_with_argtypes (func_name (type_function_name (identifier functest_IS_3))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) )))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest_B_2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (func_type (typename (simpletypename (numeric bigint)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier bool)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (sconst (anysconst 'sql')))) (createfunc_opt_item (common_func_opt_item IMMUTABLE)) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1 > 0'))))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (colid (identifier functest_b_1)))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (colid (identifier functest_b_1)))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (colid (identifier functest_b_2)))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier functest1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1'))))))) ; (stmt (createfunctionstmt CREATE (or_replace_ OR REPLACE) FUNCTION (func_name (type_function_name (identifier functest1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item WINDOW) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1'))))))) ; (stmt (createfunctionstmt CREATE (or_replace_ OR REPLACE) PROCEDURE (func_name (type_function_name (identifier functest1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst 'SELECT $1'))))))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier functest1))) (func_args ( (func_args_list (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) )))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier voidtest1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier VOID)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  SELECT a + 1  $$))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier voidtest1))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 42)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier voidtest2))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier VOID)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  SELECT voidtest1(a + b)  $$))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier voidtest2))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 11))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 22)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (explainstmt EXPLAIN ( (explain_option_list (explain_option_elem (explain_option_name (nonreservedword (type_func_name_keyword verbose)))) , (explain_option_elem (explain_option_name (nonreservedword (identifier costs))) (explain_option_arg (boolean_or_string_ (nonreservedword_or_sconst (nonreservedword (unreserved_keyword off))))))) ) (explainablestmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier voidtest2))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 11))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 22)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))))) ; (stmt (createstmt CREATE (opttemp TEMP) TABLE (qualified_name (colid (identifier sometable))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier f1)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)))) ))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier voidtest3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier VOID)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  INSERT INTO sometable VALUES(a + 1)  $$))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier voidtest3))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 17)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier voidtest4))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (generictype (type_function_name (identifier VOID)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  INSERT INTO sometable VALUES(a - 1) RETURNING f1  $$))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier voidtest4))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 39)))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary TABLE (relation_expr (qualified_name (colid (identifier sometable)))))))))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier voidtest5))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename SETOF (simpletypename (generictype (type_function_name (identifier VOID)))) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  SELECT generate_series(1, a)  $$)))) (createfunc_opt_item (common_func_opt_item STABLE))))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (func_table (func_expr_windowless (func_application (func_name (type_function_name (identifier voidtest5))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 3)))))))))))))))))))))))))) ))))))))))))) ; (stmt (dropstmt DROP (drop_type_name SCHEMA) (name_list (name (colid (identifier temp_func_test)))) (drop_behavior_ CASCADE))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_unpriv_user)))))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (identifier search_path))))))) ;)) <EOF>)