(root (stmtblock (stmtmulti (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier nonexistent))) ( )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier random))) ( )))) ; (stmt (createfunctionstmt CREATE FUNCTION (func_name (type_function_name (identifier cp_testfunc1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) RETURNS (func_return (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  SELECT a  $$))))))) ; (stmt (createstmt CREATE TABLE (qualified_name (colid (identifier cp_test))) ( (opttableelementlist (tableelementlist (tableelement (columnDef (colid (identifier a)) (typename (simpletypename (numeric int)) opt_array_bounds) colquallist)) , (tableelement (columnDef (colid (identifier b)) (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds) colquallist)))) ))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptest1))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier x))) (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nINSERT INTO cp_test VALUES (1, x);\n $$))))))) ; \df ptest1\n (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier pg_get_functiondef))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'ptest1')))) :: (typename (simpletypename (generictype (type_function_name (identifier regproc)))) opt_array_bounds)))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; \dfn public.*test*1\n\n \dfp public.*test*1\n\n (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier ptest1))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'x'))))))))))))))))))))))))))) )))))))))))))))))))))))))))))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest1))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))))) )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest1))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'xy')))))))))))) (qual_op ||) (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'zzy'))))))))))))))))))))))))))) )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest1))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_expr_common_subexpr substring ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_application (func_name (type_function_name (identifier random))) ( )))) :: (typename (simpletypename (numeric numeric (type_modifiers_ ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 20)))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 15))))))))))))))))))))))))) )))) opt_array_bounds) :: (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) ))))))))))))))))))))))))))) )))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier cp_test)))))))))) (sort_clause_ (sort_clause ORDER BY (sortby_list (sortby (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (columnref (colid (identifier b))))) COLLATE (any_name (colid (identifier "C")))))))))))))))))))))))))))))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptest2))) (func_args_with_defaults ( )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nSELECT 5;\n $$))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest2))) ( )))) ; (stmt (truncatestmt TRUNCATE (relation_expr_list (relation_expr (qualified_name (colid (identifier cp_test))))))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptest3))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier y))) (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nCALL ptest1(y);\nCALL ptest1( $1);\n $$))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest3))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'b'))))))))))))))))))))))))))) )))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier cp_test))))))))))))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptest4a))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (arg_class INOUT) (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (func_arg_with_default (func_arg (arg_class INOUT) (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nSELECT 1, 2;\n $$))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest4a))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst NULL)))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst NULL))))))))))))))))))))))))) )))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptest4b))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (arg_class INOUT) (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (func_arg_with_default (func_arg (arg_class INOUT) (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nCALL ptest4a(a, b);  -- error, not supported\n $$))))))) ; (stmt (removefuncstmt DROP PROCEDURE (function_with_argtypes_list (function_with_argtypes (colid (identifier ptest4a)))))) ; (stmt (createfunctionstmt CREATE (or_replace_ OR REPLACE) PROCEDURE (func_name (type_function_name (identifier ptest5))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier c))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))) default (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 100)))))))))))))))))))))))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nINSERT INTO cp_test VALUES(a, b);\nINSERT INTO cp_test VALUES(c, b);\n $$))))))) ; (stmt (truncatestmt TRUNCATE (relation_expr_list (relation_expr (qualified_name (colid (identifier cp_test))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest5))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Hello')))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 20)))))))))))))))))))))))))) )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest5))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Hello'))))))))))))))))))))))))))) )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest5))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10))))))))))))))))))))))))) , (func_arg_expr (param_name (type_function_name (identifier b))) => (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Hello'))))))))))))))))))))))))))) )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest5))) ( (func_arg_list (func_arg_expr (param_name (type_function_name (identifier b))) => (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'Hello')))))))))))))))))))))))))) , (func_arg_expr (param_name (type_function_name (identifier a))) => (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 10)))))))))))))))))))))))))) )))) ; (stmt (selectstmt (select_no_parens (select_clause (simple_select_intersect (simple_select_pramary SELECT (target_list_ (target_list (target_el *))) (from_clause FROM (from_list (table_ref (relation_expr (qualified_name (colid (identifier cp_test))))))))))))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptest6))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (generictype (type_function_name (identifier anyelement)))) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nSELECT NULL::int;\n $$))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest6))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 2)))))))))))))))))))))))))) )))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptest7))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) , (func_arg_with_default (func_arg (param_name (type_function_name (identifier b))) (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$ \nSELECT a = b;\n $$))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest7))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (func_expr (func_expr_common_subexpr least ( (expr_list (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))) , (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'b')))))))))))))))))))))))))) )))))))))))))))))))))))))) , (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))))) )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (unreserved_keyword version))) ( )))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier sum))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (iconst 1)))))))))))))))))))))))))) )))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptestx))) (func_args_with_defaults ( )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item WINDOW) (createfunc_opt_item AS (func_as (sconst (anysconst $$  INSERT INTO cp_test VALUES (1, 'a')  $$))))))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptestx))) (func_args_with_defaults ( )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item (common_func_opt_item STRICT)) (createfunc_opt_item AS (func_as (sconst (anysconst $$  INSERT INTO cp_test VALUES (1, 'a')  $$))))))) ; (stmt (createfunctionstmt CREATE PROCEDURE (func_name (type_function_name (identifier ptestx))) (func_args_with_defaults ( (func_args_with_defaults_list (func_arg_with_default (func_arg (arg_class OUT) (param_name (type_function_name (identifier a))) (func_type (typename (simpletypename (numeric int)) opt_array_bounds))))) )) (createfunc_opt_list (createfunc_opt_item LANGUAGE (nonreservedword_or_sconst (nonreservedword (unreserved_keyword SQL)))) (createfunc_opt_item AS (func_as (sconst (anysconst $$  INSERT INTO cp_test VALUES (1, 'a')  $$))))))) ; (stmt (alterfunctionstmt ALTER PROCEDURE (function_with_argtypes (func_name (type_function_name (identifier ptest1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item STRICT)))) ; (stmt (alterfunctionstmt ALTER FUNCTION (function_with_argtypes (func_name (type_function_name (identifier ptest1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item VOLATILE)))) ; (stmt (alterfunctionstmt ALTER PROCEDURE (function_with_argtypes (func_name (type_function_name (identifier cp_testfunc1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) (alterfunc_opt_list (common_func_opt_item VOLATILE)))) ; (stmt (alterfunctionstmt ALTER PROCEDURE (function_with_argtypes (func_name (type_function_name (identifier nonexistent))) (func_args ( ))) (alterfunc_opt_list (common_func_opt_item VOLATILE)))) ; (stmt (removefuncstmt DROP FUNCTION (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier ptest1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) )))))) ; (stmt (removefuncstmt DROP PROCEDURE (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier cp_testfunc1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) )))))) ; (stmt (removefuncstmt DROP PROCEDURE (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier nonexistent))) (func_args ( )))))) ; (stmt (createuserstmt CREATE USER (roleid (rolespec (nonreservedword (identifier regress_cp_user1)))) optrolelist)) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (unreserved_keyword INSERT))))) ON (privilege_target (qualified_name_list (qualified_name (colid (identifier cp_test))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_cp_user1))))))) ; (stmt (revokestmt REVOKE (privileges (privilege_list (privilege (colid (unreserved_keyword EXECUTE))))) ON (privilege_target PROCEDURE (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier ptest1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) ))))) FROM (grantee_list (grantee (rolespec (nonreservedword (identifier PUBLIC))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_cp_user1))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest1))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))))) )))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (grantstmt GRANT (privileges (privilege_list (privilege (colid (unreserved_keyword EXECUTE))))) ON (privilege_target PROCEDURE (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier ptest1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) ))))) TO (grantee_list (grantee (rolespec (nonreservedword (identifier regress_cp_user1))))))) ; (stmt (variablesetstmt SET (set_rest (set_rest_more ROLE (nonreservedword_or_sconst (nonreservedword (identifier regress_cp_user1))))))) ; (stmt (callstmt CALL (func_application (func_name (type_function_name (identifier ptest1))) ( (func_arg_list (func_arg_expr (a_expr (a_expr_qual (a_expr_lessless (a_expr_or (a_expr_and (a_expr_between (a_expr_in (a_expr_unary_not (a_expr_isnull (a_expr_is_not (a_expr_compare (a_expr_like (a_expr_qual_op (a_expr_unary_qualop (a_expr_add (a_expr_mul (a_expr_caret (a_expr_unary_sign (a_expr_at_time_zone (a_expr_collate (a_expr_typecast (c_expr (aexprconst (sconst (anysconst 'a'))))))))))))))))))))))))))) )))) ; (stmt (variableresetstmt RESET (reset_rest (generic_reset (var_name (colid (unreserved_keyword ROLE))))))) ; (stmt (renamestmt ALTER ROUTINE (function_with_argtypes (func_name (type_function_name (identifier cp_testfunc1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) ))) RENAME TO (name (colid (identifier cp_testfunc1a))))) ; (stmt (renamestmt ALTER ROUTINE (function_with_argtypes (colid (identifier cp_testfunc1a))) RENAME TO (name (colid (identifier cp_testfunc1))))) ; (stmt (renamestmt ALTER ROUTINE (function_with_argtypes (func_name (type_function_name (identifier ptest1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (generictype (type_function_name (unreserved_keyword text)))) opt_array_bounds)))) ))) RENAME TO (name (colid (identifier ptest1a))))) ; (stmt (renamestmt ALTER ROUTINE (function_with_argtypes (colid (identifier ptest1a))) RENAME TO (name (colid (identifier ptest1))))) ; (stmt (removefuncstmt DROP ROUTINE (function_with_argtypes_list (function_with_argtypes (func_name (type_function_name (identifier cp_testfunc1))) (func_args ( (func_args_list (func_arg (func_type (typename (simpletypename (numeric int)) opt_array_bounds)))) )))))) ; (stmt (removefuncstmt DROP PROCEDURE (function_with_argtypes_list (function_with_argtypes (colid (identifier ptest1)))))) ; (stmt (removefuncstmt DROP PROCEDURE (function_with_argtypes_list (function_with_argtypes (colid (identifier ptest2)))))) ; (stmt (dropstmt DROP (object_type_any_name TABLE) (any_name_list_ (any_name (colid (identifier cp_test)))))) ; (stmt (droprolestmt DROP USER (role_list (rolespec (nonreservedword (identifier regress_cp_user1)))))) ;)) <EOF>)